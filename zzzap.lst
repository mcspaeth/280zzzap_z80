0001   0000             				;; IORd
0002   0000             				;; 00						= Start / Coin / Shift / Pedal
0003   0000             				;; 01						= Steering
0004   0000             				;; 02						= DIPs
0005   0000             				;;
0006   0000             
0007   0000             				;; Memory
0008   0000             				;; 2009-2012		= PRNG?
0009   0000             				;; 2020					= IN0 store for IRQ
0010   0000             				;; 2021					= Coin flag?
0011   0000             				;; 2022					= Game state (D7 set = do big gfx?)
0012   0000             				;; 2023					= ??
0013   0000             				;; 2025-2026		= Pointer to 5-byte tables for pylons
0014   0000             				;; 2027-2028		= Pointer to 5-byte tables for pylons
0015   0000             				;; 2029-202A		= Previous score
0016   0000             				;; 202B-202C		= High score
0017   0000             				;; 202D					= Write value for when 202E hits $00
0018   0000             				;; 202E					= Timer for audio port 2
0019   0000             				;; 202F					= Coins
0020   0000             
0021   0000             				;; 2032					= ??
0022   0000             				;; 2035					= ?? (Incremented on crash)
0023   0000             				;; 2036					= ??
0024   0000             				;; 2037					= ??
0025   0000             				;; 2039					= ?? (Copied to $204A)
0026   0000             				;; 203D-203E		= Player score
0027   0000             				;; 203F					= Countdown timer
0028   0000             				;; 2040					= Countdown timer
0029   0000             				;; 2041					= Countdown timer
0030   0000             				;; 2042					= Game time
0031   0000             				;; 2044					= Bonus time
0032   0000             				;; 2045					= IN0 store
0033   0000             				;; 2046					= IN1 store
0034   0000             				;; 204A					= ?? (Coped from $2039, tested at $100f)
0035   0000             
0036   0000             				;; 9-byte structure?
0037   0000             				;; 204B					= Down counter?
0038   0000             				;; 204C					= Adder for ($2054)
0039   0000             				;; 204D-204E		= Pointer to next ($204B-$2053)
0040   0000             
0041   0000             				;; 5-byte sub-structure
0042   0000             				;; 204F					= Down counter
0043   0000             				;; 2050-2051		= Gfx table entry
0044   0000             				;; 2052-2053		= Pointer to next ($204F-$2053)
0045   0000             				
0046   0000             				;; 2054					= ??
0047   0000             				;; 2055					= Big gfx shift
0048   0000             				;; 2056-2057		= Big gfx loc offset
0049   0000             
0050   0000             				;; 2058-2059		= Big gfx loc store
0051   0000             				;; 205B-2062		= 8-byte table (Table of messages?)
0052   0000             
0053   0000             				;; 5-byte Pylon table
0054   0000             				;; 0		= Width (0 = inactive);
0055   0000             				;; 1		= Height
0056   0000             				;; 2		= X Shift
0057   0000             				;; 3-4	= Screen address
0058   0000             
0059   0000             				;; 2062-20CF		= $16 x 5 byte pylon table (initial $2027)
0060   0000             				;; 20D0-213D		= $16 x 5 byte pylon table (initial $2025)
0061   0000             
0062   0000             				;; 2143					= Counts $03, $02, $01, $00, (action on reset)
0063   0000             				;; 2144-2243		= ??
0064   0000             
0065   0000             				;; 2400-3FFF		= Visible screen
0066   0000             
0067   0000             
0068   0000             				;; rst $00
0069   0000             				;; Reset vector
0070   0000             
0071   0000             				.org $0000
0072   0000             L0000:
0073   0000 00          				nop
0074   0001 00          				nop
0075   0002 AF          				xor			a
0076   0003             L0003:
0077   0003 D3 05       				out			($05),a					; Audio Port 2
0078   0005 C3 64 00    				jp			L0064
0079   0008             
0080   0008             				;; rst $08
0081   0008             				;; Interrupt vector
0082   0008             L0008:
0083   0008 F5          				push		af
0084   0009 C5          				push		bc
0085   000A D5          				push		de
0086   000B 0E 00       				ld			c,$00						; Interrupt type
0087   000D C3 9E 06    				jp			L069E
0088   0010             
0089   0010             				;; rst $10
0090   0010             				;; Interrupt vector
0091   0010             L0010:
0092   0010 F5          				push		af
0093   0011 C5          				push		bc
0094   0012 D5          				push		de
0095   0013 0E 01       				ld			c,$01						; Interrupt type
0096   0015 C3 9E 06    				jp			L069E
0097   0018             
0098   0018             				;; rst $18
0099   0018             L0018:
0100   0018             				;; Stack regs 
0101   0018 E3          				ex			(sp),hl
0102   0019 D5          				push		de
0103   001A C5          				push		bc
0104   001B F5          				push		af
0105   001C E9          				jp			(hl)						; Return to calling address
0106   001D             
0107   001D             				;; "4" byte table for $0bed
0108   001D             				;; Extended time (0x03 = None)
0109   001D             L001D:
0110   001D 25 30 20    				.db			$25, $30, $20		; Extended time table
0111   0020             
0112   0020             L0020:
0113   0020             				;; rst $20
0114   0020             				;; Unstack regs and rts
0115   0020 E1          				pop			hl							; (Calling adddress thrown away)
0116   0021 F1          				pop			af
0117   0022 C1          				pop			bc
0118   0023 D1          				pop			de
0119   0024 E1          				pop			hl
0120   0025 C9          				ret
0121   0026             
0122   0026             				;; Garbage
0123   0026 35          				dec			(hl)						; DATA
0124   0027 00          				nop											; DATA
0125   0028             
0126   0028             L0028:
0127   0028             				;; rst $28
0128   0028 C3 16 0F    				jp			L0F16
0129   002B             
0130   002B             				;; 5-byte entry
0131   002B             L002B:
0132   002B 05          				.db			$05							; $204F   (Down counter)
0133   002C B4 04       				.dw			L04B4						; $2050-1 (Gfx table)
0134   002E 14 04       				.dw			L0414						; $2052-3 (Next pointer)
0135   0030             
0136   0030             				;; rst $30
0137   0030             L0030:
0138   0030 E3          				ex			(sp),hl
0139   0031 7E          				ld			a,(hl)					; Grab argument from call
0140   0032 23          				inc			hl
0141   0033 E3          				ex			(sp),hl					; Restore stack pointer
0142   0034             
0143   0034 CD 91 0F    				call		L0F91						; ret if a == spot in table
0144   0037 77          				ld			(hl),a					; store a in table
0145   0038 DF          				rst			$18							; Stack regs
0146   0039 21 5E 20    				ld			hl,$205E
0147   003C 7E          				ld			a,(hl)					; $205F
0148   003D 23          				inc			hl
0149   003E B6          				or			(hl)
0150   003F E6 1F       				and			$1F							; Either string set?
0151   0041 CA 5D 00    				jp			z,L005D					; Low 5 bits of $205E,205F clear
0152   0044             
0153   0044 01 FF 1D    				ld			bc,$1DFF
0154   0047 CD 62 01    				call		L0162						; Write c to $4000 b*32 times
0155   004A             
0156   004A 21 5E 20    				ld			hl,$205E
0157   004D 7E          				ld			a,(hl)
0158   004E CD 5E 0F    				call		L0F5E						; String @ loc from a
0159   0051 23          				inc			hl							; $205F
0160   0052 7E          				ld			a,(hl)
0161   0053 CD 5E 0F    				call		L0F5E						; String @ loc from a
0162   0056 E7          				rst			$20							; Unstack regs (and return)
0163   0057             
0164   0057             				;; White out bottom 40 rows
0165   0057             L0057:
0166   0057 01 FF 1D    				ld			bc,$1DFF
0167   005A C3 62 01    				jp			L0162						; Write c to $4000 b*32 times
0168   005D             				;; And return
0169   005D             
0170   005D             
0171   005D             				;; Black out bottom 40 lines of screen
0172   005D             L005D:
0173   005D 01 00 1D    				ld			bc,$1D00
0174   0060 CD 62 01    				call		L0162						; Write c to $4000 b*32 times
0175   0063             
0176   0063 E7          				rst			$20							; Unstack regs (and return)
0177   0064             
0178   0064             
0179   0064             				;; Code start
0180   0064             L0064:
0181   0064 DB 02       				in			a,($02)					; IN2
0182   0066 E6 0C       				and			$0C							; Mask game time
0183   0068 FE 04       				cp			$04
0184   006A C2 61 0B    				jp			nz,L0B61				; Not test mode
0185   006D             
0186   006D             				;; Test mode
0187   006D 06 01       				ld			b,$01						; Initial bit to test
0188   006F 11 00 00    				ld			de,$0000				; Odd/even errors
0189   0072             L0072:
0190   0072 21 00 20    				ld			hl,$2000
0191   0075             L0075:
0192   0075 D3 07       				out			($07),a					; Watchdog
0193   0077             
0194   0077             				;; Bitwise RAM test
0195   0077 70          				ld			(hl),b					; Write
0196   0078 7E          				ld			a,(hl)					; Read
0197   0079 A8          				xor			b								; Compare
0198   007A CA 8C 00    				jp			z,L008C					; OK
0199   007D             
0200   007D             				;; RAM Error
0201   007D 4F          				ld			c,a
0202   007E 7D          				ld			a,l
0203   007F E6 01       				and			$01
0204   0081 79          				ld			a,c
0205   0082 C2 8A 00    				jp			nz,L008A				; Odd address
0206   0085             
0207   0085             				;; Even RAM error
0208   0085 B2          				or			d
0209   0086 57          				ld			d,a							; Set even errot bits?
0210   0087 C3 8C 00    				jp			L008C
0211   008A             
0212   008A             				;; Odd RAM error
0213   008A             L008A:
0214   008A B3          				or			e
0215   008B 5F          				ld			e,a							; Set odd error bits?
0216   008C             
0217   008C             L008C:
0218   008C 23          				inc			hl
0219   008D 7C          				ld			a,h
0220   008E FE 40       				cp			$40							; End of RAM?
0221   0090 C2 75 00    				jp			nz,L0075				; Loop
0222   0093             
0223   0093             L0093:
0224   0093 D3 07       				out			($07),a					; Watchdog
0225   0095             
0226   0095 2B          				dec			hl
0227   0096 7C          				ld			a,h
0228   0097 FE 1F       				cp			$1F
0229   0099 CA C9 00    				jp			z,L00C9					; Done
0230   009C             
0231   009C 7E          				ld			a,(hl)
0232   009D A8          				xor			b
0233   009E CA B0 00    				jp			z,L00B0					; OK
0234   00A1             
0235   00A1 4F          				ld			c,a
0236   00A2 7D          				ld			a,l
0237   00A3 E6 01       				and			$01
0238   00A5 79          				ld			a,c
0239   00A6 C2 AE 00    				jp			nz,L00AE				; Odd address
0240   00A9             
0241   00A9             				;; Even RAM error
0242   00A9 B2          				or			d
0243   00AA 57          				ld			d,a							; Set even error bits
0244   00AB C3 B0 00    				jp			L00B0
0245   00AE             
0246   00AE             				;; Odd RAM error
0247   00AE             L00AE:
0248   00AE B3          				or			e
0249   00AF 5F          				ld			e,a							; Set odd error bits
0250   00B0             
0251   00B0             L00B0:
0252   00B0 78          				ld			a,b
0253   00B1 2F          				cpl
0254   00B2 77          				ld			(hl),a					; Write
0255   00B3 AE          				xor			(hl)						; Read/write
0256   00B4 CA 93 00    				jp			z,L0093					; OK = Loop
0257   00B7             
0258   00B7 4F          				ld			c,a
0259   00B8 7D          				ld			a,l
0260   00B9 E6 01       				and			$01
0261   00BB 79          				ld			a,c
0262   00BC C2 C4 00    				jp			nz,L00C4				; Odd address
0263   00BF             
0264   00BF             				;; Even RAM error
0265   00BF B2          				or			d
0266   00C0             L00C0:
0267   00C0 57          				ld			d,a							; Set even error bits
0268   00C1 C3 C6 00    				jp			L00C6
0269   00C4             
0270   00C4             				;; Odd RAM error
0271   00C4             L00C4:
0272   00C4 B3          				or			e
0273   00C5 5F          				ld			e,a							; Set odd error bits
0274   00C6             L00C6:
0275   00C6 C3 93 00    				jp			L0093						; Loop
0276   00C9             
0277   00C9             				;; RAM test continues
0278   00C9             L00C9:
0279   00C9 D3 07       				out			($07),a					; Watchdog
0280   00CB             
0281   00CB 23          				inc			hl
0282   00CC 7C          				ld			a,h
0283   00CD FE 40       				cp			$40
0284   00CF CA EC 00    				jp			z,L00EC					; Done
0285   00D2             
0286   00D2 78          				ld			a,b
0287   00D3 2F          				cpl
0288   00D4 AE          				xor			(hl)
0289   00D5 CA E7 00    				jp			z,L00E7					; OK
0290   00D8             
0291   00D8 4F          				ld			c,a
0292   00D9 7D          				ld			a,l
0293   00DA E6 01       				and			$01
0294   00DC 79          				ld			a,c
0295   00DD C2 E5 00    				jp			nz,L00E5				; Odd address
0296   00E0             L00E0:
0297   00E0 B2          				or			d
0298   00E1 57          				ld			d,a							; Set even error bits
0299   00E2 C3 E7 00    				jp			L00E7
0300   00E5             
0301   00E5             L00E5:
0302   00E5 B3          				or			e
0303   00E6 5F          				ld			e,a							; Set odd error bits
0304   00E7             
0305   00E7             L00E7:
0306   00E7 AF          				xor			a
0307   00E8 77          				ld			(hl),a					; Clear RAM
0308   00E9 C3 C9 00    				jp			L00C9						; Loop
0309   00EC             
0310   00EC             				;; RAM test bit loop complete
0311   00EC             L00EC:
0312   00EC 78          				ld			a,b
0313   00ED 07          				rlca
0314   00EE 47          				ld			b,a
0315   00EF D2 72 00    				jp			nc,L0072				; Loop for other bits
0316   00F2             
0317   00F2 7A          				ld			a,d
0318   00F3 B3          				or			e
0319   00F4 CA 1B 01    				jp			z,L011B					; RAM check OK
0320   00F7             
0321   00F7 EB          				ex			de,hl
0322   00F8 F9          				ld			sp,hl						; Stash de in sp
0323   00F9             
0324   00F9 11 00 20    				ld			de,$2000
0325   00FC 06 00       				ld			b,$00
0326   00FE             L00FE:
0327   00FE 21 00 00    				ld			hl,L0000
0328   0101 39          				add			hl,sp						; hl = sp
0329   0102 0E 10       				ld			c,$10
0330   0104             L0104:
0331   0104 AF          				xor			a
0332   0105 29          				add			hl,hl						; hl = 2*sp
0333   0106 DA 0A 01    				jp			c,L010A
0334   0109 2F          				cpl											;	a=$FF
0335   010A             L010A:
0336   010A 12          				ld			(de),a					; de=$2000
0337   010B 13          				inc			de							; de=$2001
0338   010C 3E 18       				ld			a,$18
0339   010E 12          				ld			(de),a
0340   010F 13          				inc			de
0341   0110 0D          				dec			c
0342   0111 C2 04 01    				jp			nz,L0104				; Loop
0343   0114 05          				dec			b
0344   0115 C2 FE 00    				jp			nz,L00FE				; Loop
0345   0118             
0346   0118 C3 54 01    				jp			L0154						; ERROR
0347   011B             
0348   011B             L011B:
0349   011B 31 00 24    				ld			sp,$2400
0350   011E 21 0C 28    				ld			hl,$280C
0351   0121 E5          				push		hl
0352   0122             
0353   0122             				;; ROM Checksum
0354   0122 21 00 00    				ld			hl,L0000					; Start address
0355   0125 11 59 01    				ld			de,L0159					; Bad ROM codes
0356   0128             L0128:
0357   0128 01 00 04    				ld			bc,$0400					; Count 
0358   012B AF          				xor			a									; A=0 
0359   012C             L012C:
0360   012C 86          				add			a,(hl)
0361   012D D3 07       				out			($07),a						; Watchdog
0362   012F 23          				inc			hl
0363   0130 0D          				dec			c
0364   0131 C2 2C 01    				jp			nz,L012C					; Loop for $100
0365   0134 05          				dec			b
0366   0135 C2 2C 01    				jp			nz,L012C					; Loop for $400 bloack 
0367   0138 A7          				and			a									; Should be zero! 
0368   0139 CA 46 01    				jp			z,L0146
0369   013C             
0370   013C 1A          				ld			a,(de)						; Bad ROM code 
0371   013D E3          				ex			(sp),hl						; hl to top of stack
0372   013E EB          				ex			de,hl							; de = old stack top
0373   013F C5          				push		bc
0374   0140 CD 81 03    				call		L0381							; Draw char from A 
0375   0143             
0376   0143 C1          				pop			bc
0377   0144 EB          				ex			de,hl							; hl = old stack top
0378   0145 E3          				ex			(sp),hl						; Swap back
0379   0146             L0146:
0380   0146 13          				inc			de								; Next code 
0381   0147 7C          				ld			a,h
0382   0148 FE 18       				cp			$18								; End of ROMs
0383   014A C2 28 01    				jp			nz,L0128					; Loop
0384   014D             
0385   014D E1          				pop			hl								; Should still be $280C
0386   014E 7D          				ld			a,l
0387   014F FE 0C       				cp			$0C
0388   0151 CA 00 00    				jp			z,L0000						; Reset
0389   0154             
0390   0154             				;; Stop on RAM/ROM Error
0391   0154             L0154:
0392   0154 D3 07       				out			($07),a						; Watchdog
0393   0156 C3 54 01    				jp			L0154							; Spin forever
0394   0159             
0395   0159             				;; Bad ROM codes
0396   0159             L0159:
0397   0159 48 47 46 45 				.db			$48, $47, $46, $45, $44, $43		; HGFEDC
0397   015D 44 43 
0398   015F             
0399   015F             				;; Clear screen
0400   015F             L015F:
0401   015F 01 00 E0    				ld			bc,$E000
0402   0162             
0403   0162             				;; bc passed in?
0404   0162             				;; b -> a for loop count
0405   0162             				;; c -> b for value to write
0406   0162             L0162:
0407   0162 11 00 40    				ld			de,$4000		; Address
0408   0165             				;; de = adddress passed in
0409   0165             L0165:
0410   0165 21 00 00    				ld			hl,L0000
0411   0168 39          				add			hl,sp						; hl = sp
0412   0169 EB          				ex			de,hl						; hl = $4000, de = original sp
0413   016A F3          				di											; Disable interrtups (since stack gets trashed)
0414   016B F9          				ld			sp,hl						; hl = sp, sp = $4000
0415   016C EB          				ex			de,hl						; de = sp, hl = original sp
0416   016D 78          				ld			a,b							; a = b (Loop count)
0417   016E 41          				ld			b,c							; c = b (value to write)
0418   016F             
0419   016F             				;; Push		bc 16*a times
0420   016F             L016F:
0421   016F C5          				push		bc							; 0
0422   0170 C5          				push		bc							; 1
0423   0171 C5          				push		bc							; 2
0424   0172 C5          				push		bc							; 3
0425   0173 C5          				push		bc							; 4
0426   0174 C5          				push		bc							; 5
0427   0175 C5          				push		bc							; 6
0428   0176 C5          				push		bc							; 7
0429   0177 C5          				push		bc							; 8
0430   0178 C5          				push		bc							; 9
0431   0179 C5          				push		bc							; a
0432   017A C5          				push		bc							; b
0433   017B C5          				push		bc							; c
0434   017C C5          				push		bc							; d
0435   017D C5          				push		bc							; e
0436   017E C5          				push		bc							; f
0437   017F 3D          				dec			a
0438   0180 C2 6F 01    				jp			nz,L016F				; Loop
0439   0183 F9          				ld			sp,hl						; Restore SP
0440   0184 FB          				ei											; Enable interrupts
0441   0185 C9          				ret
0442   0186             
0443   0186             #include "zapfont.asm"
0001+  0186             				.org			$0186
0002+  0186             L0186:
0003+  0186             CHARS:													; $0186
0004+  0186             
0005+  0186 3C          				.db			$3c							; ....########....			; $30
0006+  0187 7E          				.db			$7e							; ..############.. 
0007+  0188 66          				.db			$66							; ..####....####.. 
0008+  0189 66          				.db			$66							; ..####....####.. 
0009+  018A 66          				.db			$66							; ..####....####.. 
0010+  018B 66          				.db			$66							; ..####....####.. 
0011+  018C 66          				.db			$66							; ..####....####.. 
0012+  018D 66          				.db			$66							; ..####....####.. 
0013+  018E 7E          				.db			$7e							; ..############.. 
0014+  018F 3C          				.db			$3c							; ....########.... 
0015+  0190             
0016+  0190 18          				.db			$18							; ......####......			; $31
0017+  0191 1C          				.db			$1c							; ....######...... 
0018+  0192 18          				.db			$18							; ......####...... 
0019+  0193 18          				.db			$18							; ......####...... 
0020+  0194 18          				.db			$18							; ......####...... 
0021+  0195 18          				.db			$18							; ......####...... 
0022+  0196 18          				.db			$18							; ......####...... 
0023+  0197 18          				.db			$18							; ......####...... 
0024+  0198 3C          				.db			$3c							; ....########.... 
0025+  0199 3C          				.db			$3c							; ....########.... 
0026+  019A             
0027+  019A 3C          				.db			$3c							; ....########....			; $32
0028+  019B 7E          				.db			$7e							; ..############.. 
0029+  019C 66          				.db			$66							; ..####....####.. 
0030+  019D 60          				.db			$60							; ..........####.. 
0031+  019E 7C          				.db			$7c							; ....##########.. 
0032+  019F 3E          				.db			$3e							; ..##########.... 
0033+  01A0 06          				.db			$06							; ..####.......... 
0034+  01A1 06          				.db			$06							; ..####.......... 
0035+  01A2 7E          				.db			$7e							; ..############.. 
0036+  01A3 7E          				.db			$7e							; ..############.. 
0037+  01A4             
0038+  01A4 3C          				.db			$3c							; ....########....			; $33
0039+  01A5 7E          				.db			$7e							; ..############.. 
0040+  01A6 66          				.db			$66							; ..####....####.. 
0041+  01A7 60          				.db			$60							; ..........####.. 
0042+  01A8 38          				.db			$38							; ......######.... 
0043+  01A9 78          				.db			$78							; ......########.. 
0044+  01AA 60          				.db			$60							; ..........####.. 
0045+  01AB 66          				.db			$66							; ..####....####.. 
0046+  01AC 7E          				.db			$7e							; ..############.. 
0047+  01AD 3C          				.db			$3c							; ....########.... 
0048+  01AE             
0049+  01AE 66          				.db			$66							; ..####....####..			; $34
0050+  01AF 66          				.db			$66							; ..####....####.. 
0051+  01B0 66          				.db			$66							; ..####....####.. 
0052+  01B1 66          				.db			$66							; ..####....####.. 
0053+  01B2 7E          				.db			$7e							; ..############.. 
0054+  01B3 7E          				.db			$7e							; ..############.. 
0055+  01B4 60          				.db			$60							; ..........####.. 
0056+  01B5 60          				.db			$60							; ..........####.. 
0057+  01B6 60          				.db			$60							; ..........####.. 
0058+  01B7 60          				.db			$60							; ..........####.. 
0059+  01B8             
0060+  01B8 3E          				.db			$3e							; ..##########....			; $35
0061+  01B9 3E          				.db			$3e							; ..##########.... 
0062+  01BA 06          				.db			$06							; ..####.......... 
0063+  01BB 06          				.db			$06							; ..####.......... 
0064+  01BC 3E          				.db			$3e							; ..##########.... 
0065+  01BD 7E          				.db			$7e							; ..############.. 
0066+  01BE 60          				.db			$60							; ..........####.. 
0067+  01BF 66          				.db			$66							; ..####....####.. 
0068+  01C0 7E          				.db			$7e							; ..############.. 
0069+  01C1 3C          				.db			$3c							; ....########.... 
0070+  01C2             
0071+  01C2 3C          				.db			$3c							; ....########....			; $36
0072+  01C3 3E          				.db			$3e							; ..##########.... 
0073+  01C4 06          				.db			$06							; ..####.......... 
0074+  01C5 06          				.db			$06							; ..####.......... 
0075+  01C6 3E          				.db			$3e							; ..##########.... 
0076+  01C7 7E          				.db			$7e							; ..############.. 
0077+  01C8 66          				.db			$66							; ..####....####.. 
0078+  01C9 66          				.db			$66							; ..####....####.. 
0079+  01CA 7E          				.db			$7e							; ..############.. 
0080+  01CB 3C          				.db			$3c							; ....########.... 
0081+  01CC             
0082+  01CC 7E          				.db			$7e							; ..############..			; $37
0083+  01CD 7E          				.db			$7e							; ..############.. 
0084+  01CE 60          				.db			$60							; ..........####.. 
0085+  01CF 70          				.db			$70							; ........######.. 
0086+  01D0 30          				.db			$30							; ........####.... 
0087+  01D1 38          				.db			$38							; ......######.... 
0088+  01D2 18          				.db			$18							; ......####...... 
0089+  01D3 1C          				.db			$1c							; ....######...... 
0090+  01D4 0C          				.db			$0c							; ....####........ 
0091+  01D5 0C          				.db			$0c							; ....####........ 
0092+  01D6             
0093+  01D6 3C          				.db			$3c							; ....########....			; $38
0094+  01D7 7E          				.db			$7e							; ..############.. 
0095+  01D8 66          				.db			$66							; ..####....####.. 
0096+  01D9 66          				.db			$66							; ..####....####.. 
0097+  01DA 3C          				.db			$3c							; ....########.... 
0098+  01DB 7E          				.db			$7e							; ..############.. 
0099+  01DC 66          				.db			$66							; ..####....####.. 
0100+  01DD 66          				.db			$66							; ..####....####.. 
0101+  01DE 7E          				.db			$7e							; ..############.. 
0102+  01DF 3C          				.db			$3c							; ....########.... 
0103+  01E0             
0104+  01E0 3C          				.db			$3c							; ....########....			; $39
0105+  01E1 7E          				.db			$7e							; ..############.. 
0106+  01E2 66          				.db			$66							; ..####....####.. 
0107+  01E3 66          				.db			$66							; ..####....####.. 
0108+  01E4 7E          				.db			$7e							; ..############.. 
0109+  01E5 7C          				.db			$7c							; ....##########.. 
0110+  01E6 60          				.db			$60							; ..........####.. 
0111+  01E7 60          				.db			$60							; ..........####.. 
0112+  01E8 7C          				.db			$7c							; ....##########.. 
0113+  01E9 3C          				.db			$3c							; ....########.... 
0114+  01EA             
0115+  01EA 00          				.db			$00							; ................			; $3A
0116+  01EB 18          				.db			$18							; ......####...... 
0117+  01EC 18          				.db			$18							; ......####...... 
0118+  01ED 00          				.db			$00							; ................ 
0119+  01EE 00          				.db			$00							; ................ 
0120+  01EF 00          				.db			$00							; ................ 
0121+  01F0 00          				.db			$00							; ................ 
0122+  01F1 18          				.db			$18							; ......####...... 
0123+  01F2 18          				.db			$18							; ......####...... 
0124+  01F3 00          				.db			$00							; ................ 
0125+  01F4             
0126+  01F4 FF          				.db			$ff							; ################			; $3B
0127+  01F5 FF          				.db			$ff							; ################ 
0128+  01F6 FF          				.db			$ff							; ################ 
0129+  01F7 FF          				.db			$ff							; ################ 
0130+  01F8 FF          				.db			$ff							; ################ 
0131+  01F9 FF          				.db			$ff							; ################ 
0132+  01FA 77          				.db			$77							; ######..######.. 
0133+  01FB 77          				.db			$77							; ######..######.. 
0134+  01FC FF          				.db			$ff							; ################ 
0135+  01FD FF          				.db			$ff							; ################ 
0136+  01FE             
0137+  01FE 7F          				.db			$7f							; ##############..			; $3C
0138+  01FF 7F          				.db			$7f							; ##############.. 
0139+  0200 7F          				.db			$7f							; ##############.. 
0140+  0201 7F          				.db			$7f							; ##############.. 
0141+  0202 7F          				.db			$7f							; ##############.. 
0142+  0203 FF          				.db			$ff							; ################ 
0143+  0204 77          				.db			$77							; ######..######.. 
0144+  0205 77          				.db			$77							; ######..######.. 
0145+  0206 FF          				.db			$ff							; ################ 
0146+  0207 FF          				.db			$ff							; ################ 
0147+  0208             
0148+  0208 1F          				.db			$1f							; ##########......			; $3D
0149+  0209 7F          				.db			$7f							; ##############.. 
0150+  020A 1F          				.db			$1f							; ##########...... 
0151+  020B DF          				.db			$df							; ##########..#### 
0152+  020C 1F          				.db			$1f							; ##########...... 
0153+  020D FF          				.db			$ff							; ################ 
0154+  020E 77          				.db			$77							; ######..######.. 
0155+  020F 77          				.db			$77							; ######..######.. 
0156+  0210 FF          				.db			$ff							; ################ 
0157+  0211 FF          				.db			$ff							; ################ 
0158+  0212             
0159+  0212 00          				.db			$00							; ................			; $3E
0160+  0213 00          				.db			$00							; ................ 
0161+  0214 00          				.db			$00							; ................ 
0162+  0215 00          				.db			$00							; ................ 
0163+  0216 00          				.db			$00							; ................ 
0164+  0217 00          				.db			$00							; ................ 
0165+  0218 00          				.db			$00							; ................ 
0166+  0219 00          				.db			$00							; ................ 
0167+  021A 18          				.db			$18							; ......####...... 
0168+  021B 18          				.db			$18							; ......####...... 
0169+  021C             
0170+  021C 18          				.db			$18							; ......####......			; $3F
0171+  021D 18          				.db			$18							; ......####...... 
0172+  021E 18          				.db			$18							; ......####...... 
0173+  021F 18          				.db			$18							; ......####...... 
0174+  0220 18          				.db			$18							; ......####...... 
0175+  0221 18          				.db			$18							; ......####...... 
0176+  0222 00          				.db			$00							; ................ 
0177+  0223 00          				.db			$00							; ................ 
0178+  0224 18          				.db			$18							; ......####...... 
0179+  0225 18          				.db			$18							; ......####...... 
0180+  0226             
0181+  0226 00          				.db			$00							; ................			; $40
0182+  0227 00          				.db			$00							; ................ 
0183+  0228 00          				.db			$00							; ................ 
0184+  0229 00          				.db			$00							; ................ 
0185+  022A 00          				.db			$00							; ................ 
0186+  022B 00          				.db			$00							; ................ 
0187+  022C 00          				.db			$00							; ................ 
0188+  022D 00          				.db			$00							; ................ 
0189+  022E 00          				.db			$00							; ................ 
0190+  022F 00          				.db			$00							; ................ 
0191+  0230             
0192+  0230 18          				.db			$18							; ......####......			; $41
0193+  0231 3C          				.db			$3c							; ....########.... 
0194+  0232 7E          				.db			$7e							; ..############.. 
0195+  0233 66          				.db			$66							; ..####....####.. 
0196+  0234 66          				.db			$66							; ..####....####.. 
0197+  0235 66          				.db			$66							; ..####....####.. 
0198+  0236 7E          				.db			$7e							; ..############.. 
0199+  0237 7E          				.db			$7e							; ..############.. 
0200+  0238 66          				.db			$66							; ..####....####.. 
0201+  0239 66          				.db			$66							; ..####....####.. 
0202+  023A             
0203+  023A 3E          				.db			$3e							; ..##########....			; $42
0204+  023B 7E          				.db			$7e							; ..############.. 
0205+  023C 66          				.db			$66							; ..####....####.. 
0206+  023D 66          				.db			$66							; ..####....####.. 
0207+  023E 3E          				.db			$3e							; ..##########.... 
0208+  023F 7E          				.db			$7e							; ..############.. 
0209+  0240 66          				.db			$66							; ..####....####.. 
0210+  0241 66          				.db			$66							; ..####....####.. 
0211+  0242 7E          				.db			$7e							; ..############.. 
0212+  0243 3E          				.db			$3e							; ..##########.... 
0213+  0244             
0214+  0244 3C          				.db			$3c							; ....########....			; $43
0215+  0245 7E          				.db			$7e							; ..############.. 
0216+  0246 66          				.db			$66							; ..####....####.. 
0217+  0247 06          				.db			$06							; ..####.......... 
0218+  0248 06          				.db			$06							; ..####.......... 
0219+  0249 06          				.db			$06							; ..####.......... 
0220+  024A 06          				.db			$06							; ..####.......... 
0221+  024B 66          				.db			$66							; ..####....####.. 
0222+  024C 7E          				.db			$7e							; ..############.. 
0223+  024D 3C          				.db			$3c							; ....########.... 
0224+  024E             
0225+  024E 3E          				.db			$3e							; ..##########....			; $44
0226+  024F 7E          				.db			$7e							; ..############.. 
0227+  0250 66          				.db			$66							; ..####....####.. 
0228+  0251 66          				.db			$66							; ..####....####.. 
0229+  0252 66          				.db			$66							; ..####....####.. 
0230+  0253 66          				.db			$66							; ..####....####.. 
0231+  0254 66          				.db			$66							; ..####....####.. 
0232+  0255 66          				.db			$66							; ..####....####.. 
0233+  0256 7E          				.db			$7e							; ..############.. 
0234+  0257 3E          				.db			$3e							; ..##########.... 
0235+  0258             
0236+  0258 7E          				.db			$7e							; ..############..			; $45
0237+  0259 7E          				.db			$7e							; ..############.. 
0238+  025A 06          				.db			$06							; ..####.......... 
0239+  025B 06          				.db			$06							; ..####.......... 
0240+  025C 3E          				.db			$3e							; ..##########.... 
0241+  025D 3E          				.db			$3e							; ..##########.... 
0242+  025E 06          				.db			$06							; ..####.......... 
0243+  025F 06          				.db			$06							; ..####.......... 
0244+  0260 7E          				.db			$7e							; ..############.. 
0245+  0261 7E          				.db			$7e							; ..############.. 
0246+  0262             
0247+  0262 7E          				.db			$7e							; ..############..			; $46
0248+  0263 7E          				.db			$7e							; ..############.. 
0249+  0264 06          				.db			$06							; ..####.......... 
0250+  0265 06          				.db			$06							; ..####.......... 
0251+  0266 3E          				.db			$3e							; ..##########.... 
0252+  0267 3E          				.db			$3e							; ..##########.... 
0253+  0268 06          				.db			$06							; ..####.......... 
0254+  0269 06          				.db			$06							; ..####.......... 
0255+  026A 06          				.db			$06							; ..####.......... 
0256+  026B 06          				.db			$06							; ..####.......... 
0257+  026C             
0258+  026C 3C          				.db			$3c							; ....########....			; $47
0259+  026D 7E          				.db			$7e							; ..############.. 
0260+  026E 66          				.db			$66							; ..####....####.. 
0261+  026F 06          				.db			$06							; ..####.......... 
0262+  0270 06          				.db			$06							; ..####.......... 
0263+  0271 76          				.db			$76							; ..####..######.. 
0264+  0272 76          				.db			$76							; ..####..######.. 
0265+  0273 66          				.db			$66							; ..####....####.. 
0266+  0274 7E          				.db			$7e							; ..############.. 
0267+  0275 3C          				.db			$3c							; ....########.... 
0268+  0276             
0269+  0276 66          				.db			$66							; ..####....####..			; $48
0270+  0277 66          				.db			$66							; ..####....####.. 
0271+  0278 66          				.db			$66							; ..####....####.. 
0272+  0279 66          				.db			$66							; ..####....####.. 
0273+  027A 7E          				.db			$7e							; ..############.. 
0274+  027B 7E          				.db			$7e							; ..############.. 
0275+  027C 66          				.db			$66							; ..####....####.. 
0276+  027D 66          				.db			$66							; ..####....####.. 
0277+  027E 66          				.db			$66							; ..####....####.. 
0278+  027F 66          				.db			$66							; ..####....####.. 
0279+  0280             
0280+  0280 3C          				.db			$3c							; ....########....			; $49
0281+  0281 3C          				.db			$3c							; ....########.... 
0282+  0282 18          				.db			$18							; ......####...... 
0283+  0283 18          				.db			$18							; ......####...... 
0284+  0284 18          				.db			$18							; ......####...... 
0285+  0285 18          				.db			$18							; ......####...... 
0286+  0286 18          				.db			$18							; ......####...... 
0287+  0287 18          				.db			$18							; ......####...... 
0288+  0288 3C          				.db			$3c							; ....########.... 
0289+  0289 3C          				.db			$3c							; ....########.... 
0290+  028A             
0291+  028A 60          				.db			$60							; ..........####..			; $4A
0292+  028B 60          				.db			$60							; ..........####.. 
0293+  028C 60          				.db			$60							; ..........####.. 
0294+  028D 60          				.db			$60							; ..........####.. 
0295+  028E 60          				.db			$60							; ..........####.. 
0296+  028F 60          				.db			$60							; ..........####.. 
0297+  0290 60          				.db			$60							; ..........####.. 
0298+  0291 66          				.db			$66							; ..####....####.. 
0299+  0292 7E          				.db			$7e							; ..############.. 
0300+  0293 3C          				.db			$3c							; ....########.... 
0301+  0294             
0302+  0294 66          				.db			$66							; ..####....####..			; $4B
0303+  0295 66          				.db			$66							; ..####....####.. 
0304+  0296 76          				.db			$76							; ..####..######.. 
0305+  0297 3E          				.db			$3e							; ..##########.... 
0306+  0298 1E          				.db			$1e							; ..########...... 
0307+  0299 1E          				.db			$1e							; ..########...... 
0308+  029A 3E          				.db			$3e							; ..##########.... 
0309+  029B 76          				.db			$76							; ..####..######.. 
0310+  029C 66          				.db			$66							; ..####....####.. 
0311+  029D 66          				.db			$66							; ..####....####.. 
0312+  029E             
0313+  029E 06          				.db			$06							; ..####..........			; $4C
0314+  029F 06          				.db			$06							; ..####.......... 
0315+  02A0 06          				.db			$06							; ..####.......... 
0316+  02A1 06          				.db			$06							; ..####.......... 
0317+  02A2 06          				.db			$06							; ..####.......... 
0318+  02A3 06          				.db			$06							; ..####.......... 
0319+  02A4 06          				.db			$06							; ..####.......... 
0320+  02A5 06          				.db			$06							; ..####.......... 
0321+  02A6 7E          				.db			$7e							; ..############.. 
0322+  02A7 7E          				.db			$7e							; ..############.. 
0323+  02A8             
0324+  02A8 C3          				.db			$c3							; ####........####			; $4D
0325+  02A9 C3          				.db			$c3							; ####........#### 
0326+  02AA E7          				.db			$e7							; ######....###### 
0327+  02AB E7          				.db			$e7							; ######....###### 
0328+  02AC FF          				.db			$ff							; ################ 
0329+  02AD FF          				.db			$ff							; ################ 
0330+  02AE DB          				.db			$db							; ####..####..#### 
0331+  02AF C3          				.db			$c3							; ####........#### 
0332+  02B0 C3          				.db			$c3							; ####........#### 
0333+  02B1 C3          				.db			$c3							; ####........#### 
0334+  02B2             
0335+  02B2 66          				.db			$66							; ..####....####..			; $4E
0336+  02B3 66          				.db			$66							; ..####....####.. 
0337+  02B4 6E          				.db			$6e							; ..######..####.. 
0338+  02B5 6E          				.db			$6e							; ..######..####.. 
0339+  02B6 7E          				.db			$7e							; ..############.. 
0340+  02B7 7E          				.db			$7e							; ..############.. 
0341+  02B8 76          				.db			$76							; ..####..######.. 
0342+  02B9 76          				.db			$76							; ..####..######.. 
0343+  02BA 66          				.db			$66							; ..####....####.. 
0344+  02BB 66          				.db			$66							; ..####....####.. 
0345+  02BC             
0346+  02BC 3C          				.db			$3c							; ....########....			; $4F
0347+  02BD 7E          				.db			$7e							; ..############.. 
0348+  02BE 66          				.db			$66							; ..####....####.. 
0349+  02BF 66          				.db			$66							; ..####....####.. 
0350+  02C0 66          				.db			$66							; ..####....####.. 
0351+  02C1 66          				.db			$66							; ..####....####.. 
0352+  02C2 66          				.db			$66							; ..####....####.. 
0353+  02C3 66          				.db			$66							; ..####....####.. 
0354+  02C4 7E          				.db			$7e							; ..############.. 
0355+  02C5 3C          				.db			$3c							; ....########.... 
0356+  02C6             
0357+  02C6 3E          				.db			$3e							; ..##########....			; $50
0358+  02C7 7E          				.db			$7e							; ..############.. 
0359+  02C8 66          				.db			$66							; ..####....####.. 
0360+  02C9 66          				.db			$66							; ..####....####.. 
0361+  02CA 7E          				.db			$7e							; ..############.. 
0362+  02CB 3E          				.db			$3e							; ..##########.... 
0363+  02CC 06          				.db			$06							; ..####.......... 
0364+  02CD 06          				.db			$06							; ..####.......... 
0365+  02CE 06          				.db			$06							; ..####.......... 
0366+  02CF 06          				.db			$06							; ..####.......... 
0367+  02D0             
0368+  02D0 3C          				.db			$3c							; ....########....			; $51
0369+  02D1 7E          				.db			$7e							; ..############.. 
0370+  02D2 66          				.db			$66							; ..####....####.. 
0371+  02D3 66          				.db			$66							; ..####....####.. 
0372+  02D4 66          				.db			$66							; ..####....####.. 
0373+  02D5 66          				.db			$66							; ..####....####.. 
0374+  02D6 66          				.db			$66							; ..####....####.. 
0375+  02D7 66          				.db			$66							; ..####....####.. 
0376+  02D8 7E          				.db			$7e							; ..############.. 
0377+  02D9 5C          				.db			$5c							; ....######..##.. 
0378+  02DA             
0379+  02DA 3E          				.db			$3e							; ..##########....			; $52
0380+  02DB 7E          				.db			$7e							; ..############.. 
0381+  02DC 66          				.db			$66							; ..####....####.. 
0382+  02DD 66          				.db			$66							; ..####....####.. 
0383+  02DE 7E          				.db			$7e							; ..############.. 
0384+  02DF 3E          				.db			$3e							; ..##########.... 
0385+  02E0 76          				.db			$76							; ..####..######.. 
0386+  02E1 66          				.db			$66							; ..####....####.. 
0387+  02E2 66          				.db			$66							; ..####....####.. 
0388+  02E3 66          				.db			$66							; ..####....####.. 
0389+  02E4             
0390+  02E4 3C          				.db			$3c							; ....########....			; $53
0391+  02E5 7E          				.db			$7e							; ..############.. 
0392+  02E6 66          				.db			$66							; ..####....####.. 
0393+  02E7 06          				.db			$06							; ..####.......... 
0394+  02E8 3E          				.db			$3e							; ..##########.... 
0395+  02E9 7C          				.db			$7c							; ....##########.. 
0396+  02EA 60          				.db			$60							; ..........####.. 
0397+  02EB 66          				.db			$66							; ..####....####.. 
0398+  02EC 7E          				.db			$7e							; ..############.. 
0399+  02ED 3C          				.db			$3c							; ....########.... 
0400+  02EE             
0401+  02EE 7E          				.db			$7e							; ..############..			; $54
0402+  02EF 7E          				.db			$7e							; ..############.. 
0403+  02F0 18          				.db			$18							; ......####...... 
0404+  02F1 18          				.db			$18							; ......####...... 
0405+  02F2 18          				.db			$18							; ......####...... 
0406+  02F3 18          				.db			$18							; ......####...... 
0407+  02F4 18          				.db			$18							; ......####...... 
0408+  02F5 18          				.db			$18							; ......####...... 
0409+  02F6 18          				.db			$18							; ......####...... 
0410+  02F7 18          				.db			$18							; ......####...... 
0411+  02F8             
0412+  02F8 66          				.db			$66							; ..####....####..			; $55
0413+  02F9 66          				.db			$66							; ..####....####.. 
0414+  02FA 66          				.db			$66							; ..####....####.. 
0415+  02FB 66          				.db			$66							; ..####....####.. 
0416+  02FC 66          				.db			$66							; ..####....####.. 
0417+  02FD 66          				.db			$66							; ..####....####.. 
0418+  02FE 66          				.db			$66							; ..####....####.. 
0419+  02FF 66          				.db			$66							; ..####....####.. 
0420+  0300 7E          				.db			$7e							; ..############.. 
0421+  0301 3C          				.db			$3c							; ....########.... 
0422+  0302             
0423+  0302 66          				.db			$66							; ..####....####..			; $56
0424+  0303 66          				.db			$66							; ..####....####.. 
0425+  0304 66          				.db			$66							; ..####....####.. 
0426+  0305 66          				.db			$66							; ..####....####.. 
0427+  0306 66          				.db			$66							; ..####....####.. 
0428+  0307 7E          				.db			$7e							; ..############.. 
0429+  0308 3C          				.db			$3c							; ....########.... 
0430+  0309 3C          				.db			$3c							; ....########.... 
0431+  030A 18          				.db			$18							; ......####...... 
0432+  030B 18          				.db			$18							; ......####...... 
0433+  030C             
0434+  030C C3          				.db			$c3							; ####........####			; $57
0435+  030D C3          				.db			$c3							; ####........#### 
0436+  030E C3          				.db			$c3							; ####........#### 
0437+  030F DB          				.db			$db							; ####..####..#### 
0438+  0310 FF          				.db			$ff							; ################ 
0439+  0311 FF          				.db			$ff							; ################ 
0440+  0312 E7          				.db			$e7							; ######....###### 
0441+  0313 E7          				.db			$e7							; ######....###### 
0442+  0314 C3          				.db			$c3							; ####........#### 
0443+  0315 C3          				.db			$c3							; ####........#### 
0444+  0316             
0445+  0316 66          				.db			$66							; ..####....####..			; $58
0446+  0317 66          				.db			$66							; ..####....####.. 
0447+  0318 7E          				.db			$7e							; ..############.. 
0448+  0319 3C          				.db			$3c							; ....########.... 
0449+  031A 18          				.db			$18							; ......####...... 
0450+  031B 18          				.db			$18							; ......####...... 
0451+  031C 3C          				.db			$3c							; ....########.... 
0452+  031D 7E          				.db			$7e							; ..############.. 
0453+  031E 66          				.db			$66							; ..####....####.. 
0454+  031F 66          				.db			$66							; ..####....####.. 
0455+  0320             
0456+  0320 66          				.db			$66							; ..####....####..			; $59
0457+  0321 66          				.db			$66							; ..####....####.. 
0458+  0322 7E          				.db			$7e							; ..############.. 
0459+  0323 3C          				.db			$3c							; ....########.... 
0460+  0324 18          				.db			$18							; ......####...... 
0461+  0325 18          				.db			$18							; ......####...... 
0462+  0326 18          				.db			$18							; ......####...... 
0463+  0327 18          				.db			$18							; ......####...... 
0464+  0328 18          				.db			$18							; ......####...... 
0465+  0329 18          				.db			$18							; ......####...... 
0466+  032A             
0467+  032A 7E          				.db			$7e							; ..############..			; $5A
0468+  032B 7E          				.db			$7e							; ..############.. 
0469+  032C 60          				.db			$60							; ..........####.. 
0470+  032D 70          				.db			$70							; ........######.. 
0471+  032E 38          				.db			$38							; ......######.... 
0472+  032F 1C          				.db			$1c							; ....######...... 
0473+  0330 0E          				.db			$0e							; ..######........ 
0474+  0331 06          				.db			$06							; ..####.......... 
0475+  0332 7E          				.db			$7e							; ..############.. 
0476+  0333 7E          				.db			$7e							; ..############.. 
0477+  0334             
0478+  0334 11          				.db			$11							; ##......##......			; $5B
0479+  0335 55          				.db			$55							; ##..##..##..##.. 
0480+  0336 55          				.db			$55							; ##..##..##..##.. 
0481+  0337 55          				.db			$55							; ##..##..##..##.. 
0482+  0338 11          				.db			$11							; ##......##...... 
0483+  0339 FF          				.db			$ff							; ################ 
0484+  033A 77          				.db			$77							; ######..######.. 
0485+  033B 77          				.db			$77							; ######..######.. 
0486+  033C F7          				.db			$f7							; ######..######## 
0487+  033D F7          				.db			$f7							; ######..######## 
0488+  033E             
0489+  033E 11          				.db			$11							; ##......##......			; $5C
0490+  033F 57          				.db			$57							; ######..##..##.. 
0491+  0340 51          				.db			$51							; ##......##..##.. 
0492+  0341 5D          				.db			$5d							; ##..######..##.. 
0493+  0342 11          				.db			$11							; ##......##...... 
0494+  0343 FF          				.db			$ff							; ################ 
0495+  0344 77          				.db			$77							; ######..######.. 
0496+  0345 77          				.db			$77							; ######..######.. 
0497+  0346 F7          				.db			$f7							; ######..######## 
0498+  0347 F7          				.db			$f7							; ######..######## 
0499+  0348             
0500+  0348 15          				.db			$15							; ##..##..##......			; $5D
0501+  0349 55          				.db			$55							; ##..##..##..##.. 
0502+  034A 51          				.db			$51							; ##......##..##.. 
0503+  034B 57          				.db			$57							; ######..##..##.. 
0504+  034C 17          				.db			$17							; ######..##...... 
0505+  034D FF          				.db			$ff							; ################ 
0506+  034E 77          				.db			$77							; ######..######.. 
0507+  034F 77          				.db			$77							; ######..######.. 
0508+  0350 F7          				.db			$f7							; ######..######## 
0509+  0351 F7          				.db			$f7							; ######..######## 
0510+  0352             
0511+  0352 11          				.db			$11							; ##......##......			; $5E
0512+  0353 5D          				.db			$5d							; ##..######..##.. 
0513+  0354 51          				.db			$51							; ##......##..##.. 
0514+  0355 55          				.db			$55							; ##..##..##..##.. 
0515+  0356 11          				.db			$11							; ##......##...... 
0516+  0357 FF          				.db			$ff							; ################ 
0517+  0358 77          				.db			$77							; ######..######.. 
0518+  0359 77          				.db			$77							; ######..######.. 
0519+  035A F7          				.db			$f7							; ######..######## 
0520+  035B F7          				.db			$f7							; ######..######## 
0521+  035C             
0522+  035C 11          				.db			$11							; ##......##......			; $5F
0523+  035D 55          				.db			$55							; ##..##..##..##.. 
0524+  035E 51          				.db			$51							; ##......##..##.. 
0525+  035F 55          				.db			$55							; ##..##..##..##.. 
0526+  0360 11          				.db			$11							; ##......##...... 
0527+  0361 FF          				.db			$ff							; ################ 
0528+  0362 77          				.db			$77							; ######..######.. 
0529+  0363 77          				.db			$77							; ######..######.. 
0530+  0364 F7          				.db			$f7							; ######..######## 
0531+  0365 F7          				.db			$f7							; ######..######## 
0532+  0366             
0533+  0366             				.end
0444   0366             
0445   0366             				;; Draw BCD w/ leading space
0446   0366             L0366:
0447   0366 7E          				ld			a,(hl)
0448   0367 E6 F0       				and			$F0							; Mask high hybble 
0449   0369 C2 75 03    				jp			nz,L0375				; Jump if non-zero 
0450   036C 3E 40       				ld			a,$40
0451   036E CD 81 03    				call		L0381						; Draw char from A 
0452   0371 C3 7C 03    				jp			L037C
0453   0374             
0454   0374             				;; Draw BCD w/ leading zero
0455   0374             L0374:
0456   0374 7E          				ld			a,(hl)
0457   0375             L0375:
0458   0375 07          				rlca
0459   0376 07          				rlca
0460   0377 07          				rlca
0461   0378 07          				rlca
0462   0379 CD 7D 03    				call		L037D
0463   037C             
0464   037C             				;; Draw single BCD digit form hl
0465   037C             L037C:
0466   037C 7E          				ld			a,(hl)
0467   037D             
0468   037D             				;; Draw single BCD digit from a
0469   037D             L037D:
0470   037D E6 0F       				and			$0F							; Mask low nybble 
0471   037F C6 30       				add			a,$30						; BCD to char code 
0472   0381             
0473   0381             				;; Draw char from a
0474   0381             L0381:
0475   0381 E6 7F       				and			$7F							; Clear high bit 
0476   0383 FE 30       				cp			$30
0477   0385 06 00       				ld			b,$00
0478   0387 D2 8F 03    				jp			nc,L038F				; a>=$30
0479   038A             
0480   038A             				;; a<$30 = # of spaces
0481   038A 4F          				ld			c,a
0482   038B EB          				ex			de,hl						; de=de+a 
0483   038C 09          				add			hl,bc
0484   038D EB          				ex			de,hl
0485   038E C9          				ret
0486   038F             
0487   038F             				;; Draw char from a at de
0488   038F             L038F:
0489   038F E5          				push		hl
0490   0390 D5          				push		de							; Screen loc 
0491   0391 CD B2 03    				call		L03B2						; Get table entry for char in a 
0492   0394 7C          				ld			a,h							; hl = screen loc on return
0493   0395 FE 3B       				cp			$3B
0494   0397 3E 00       				ld			a,$00
0495   0399 DA 9D 03    				jp			c,L039D					; Not bottom area of screen
0496   039C             
0497   039C 2F          				cpl
0498   039D             L039D:
0499   039D 4F          				ld			c,a							; a=$00 or $FF
0500   039E             L039E:
0501   039E C5          				push		bc
0502   039F 1A          				ld			a,(de)					; Data from table
0503   03A0 13          				inc			de
0504   03A1 A9          				xor			c								; Invert for bottom area
0505   03A2 77          				ld			(hl),a
0506   03A3 01 20 00    				ld			bc,$0020				; Row increment
0507   03A6 09          				add			hl,bc
0508   03A7 C1          				pop			bc
0509   03A8 05          				dec			b
0510   03A9 C2 9E 03    				jp			nz,L039E				; Loop for char
0511   03AC D1          				pop			de
0512   03AD 13          				inc			de
0513   03AE E1          				pop			hl
0514   03AF C9          				ret
0515   03B0             
0516   03B0             
0517   03B0             				;; Get char table entry for char 'a'
0518   03B0             L03B0:
0519   03B0 06 00       				ld			b,$00
0520   03B2             L03B2:
0521   03B2 D6 30       				sub			$30
0522   03B4 4F          				ld			c,a							; Stash a
0523   03B5 60          				ld			h,b							; bc = a  
0524   03B6 69          				ld			l,c							; hl = a
0525   03B7 29          				add			hl,hl						; hl = 2*a
0526   03B8 29          				add			hl,hl						; hl = 4*a
0527   03B9 29          				add			hl,hl						; hl = 8*a
0528   03BA 09          				add			hl,bc						; hl = 9*a
0529   03BB 09          				add			hl,bc						; hl = 10*a
0530   03BC 01 86 01    				ld			bc,L0186				; Start of char table
0531   03BF 09          				add			hl,bc						; hl = $0186 + 10*a
0532   03C0 06 0A       				ld			b,$0A						; Byte count
0533   03C2 EB          				ex			de,hl						; de = $0186 + 10*a
0534   03C3 C9          				ret
0535   03C4             
0536   03C4             				;; Draw crash message
0537   03C4             L03C4:
0538   03C4 CD 88 10    				call		L1088						; Kick PRNG, get #
0539   03C7 E6 1C       				and			$1C							; Mask by 0x07 << 3
0540   03C9 4F          				ld			c,a
0541   03CA 06 00       				ld			b,$00
0542   03CC 21 A5 0F    				ld			hl,L0FA5				; Crash string table
0543   03CF 09          				add			hl,bc
0544   03D0             
0545   03D0             				;; Draw 4 char string BIG
0546   03D0 11 00 28    				ld			de,$2800				; Screen loc?
0547   03D3 06 04       				ld			b,$04						; 4 Chars?
0548   03D5             L03D5:
0549   03D5 CD E2 03    				call		L03E2
0550   03D8 7B          				ld			a,e
0551   03D9 C6 08       				add			a,$08
0552   03DB 5F          				ld			e,a
0553   03DC 23          				inc			hl
0554   03DD 05          				dec			b
0555   03DE C2 D5 03    				jp			nz,L03D5				; Loop
0556   03E1 C9          				ret
0557   03E2             
0558   03E2             L03E2:
0559   03E2 7E          				ld			a,(hl)					; Get char
0560   03E3 DF          				rst			$18							; Stack regs
0561   03E4 CD B0 03    				call		L03B0						; Get table entry for char to de
0562   03E7             L03E7:
0563   03E7 E5          				push		hl
0564   03E8 1A          				ld			a,(de)					; Get byte for char
0565   03E9 13          				inc			de
0566   03EA             L03EA:
0567   03EA 1F          				rra
0568   03EB DC FA 03    				call		c,L03FA
0569   03EE 23          				inc			hl
0570   03EF A7          				and			a
0571   03F0 C2 EA 03    				jp			nz,L03EA
0572   03F3 E1          				pop			hl
0573   03F4 24          				inc			h
0574   03F5 05          				dec			b
0575   03F6 C2 E7 03    				jp			nz,L03E7
0576   03F9 E7          				rst			$20							; Unstack regs (and return)
0577   03FA             
0578   03FA             				;; 17 bytes here
0579   03FA             				;; Draw 8x8 8x8 block at hl
0580   03FA             L03FA:
0581   03FA E5          				push		hl
0582   03FB D5          				push		de
0583   03FC C5          				push		bc
0584   03FD F5          				push		af
0585   03FE 01 FF 08    				ld			bc,$08FF				; Count + Data
0586   0401 11 20 00    				ld			de,$0020				; Line increment
0587   0404             L0404:
0588   0404 71          				ld			(hl),c
0589   0405 19          				add			hl,de
0590   0406 05          				dec			b
0591   0407 C2 04 04    				jp			nz,L0404
0592   040A E7          				rst			$20							; Unstack regs (and return)
0593   040B             
0594   040B             				;; Flag guy animation control
0595   040B             L040B:													; 9b table
0596   040B 6D          				.db			$6d							; $204B (Down counter)
0597   040C FF          				.db			$FF							; $204C (Adder for $2054)
0598   040D 19 04       				.dw			L0419						; $204D-E (Next pointer)
0599   040F             
0600   040F             L040F:													; 5b table
0601   040F 05          				.db			$05							; $204F (Down counter)
0602   0410 3E 04       				.dw			L043E						; $2050-1 (Gfx table)
0603   0412 2B 00       				.dw			L002B						; $2052-3 (Next pointer)
0604   0414             
0605   0414             L0414:													; 5b table
0606   0414 05          				.db			$05							; $204F (Down counter)
0607   0415 27 05       				.dw			L0527						; $2050-1 (Gfx table)
0608   0417 0F 04       				.dw			L040F						; $2052-3 (Next pointer)
0609   0419             
0610   0419             L0419:													; 9b table
0611   0419 3B          				.db			$3b							; $204B (Down counter)
0612   041A 00          				.db			$00							; $204C (Adder for $2054)
0613   041B 27 04       				.dw			L0427						; $204D-E (Next pointer)
0614   041D 13          				.db			$13							; $204F (Down counter)
0615   041E 9D 05       				.dw			L059D						; $2050-1 (Gfx table)
0616   0420 22 04       				.dw			L0422						; $2052-3 (Next pointer)
0617   0422             
0618   0422             L0422:													; 5b table
0619   0422 27          				.db			$27							; $204F (Down counter)
0620   0423 1D 06       				.dw			L061D						; $2050-1 (Gfx table)
0621   0425 22 04       				.dw			L0422						; $2052-3 (Next pointer)
0622   0427             
0623   0427             L0427:													; 9b table
0624   0427 36          				.db			$36							; $204B (Down counter)
0625   0428 FE          				.db			$fe							; $204C (Adder for $2054)
0626   0429 35 04       				.dw			L0435						; $204D-E (Next pointer)
0627   042B             L042B:													; 5b table
0628   042B 03          				.db			$03							; $204F (Down counter)
0629   042C 3E 04       				.dw			L043E						; $2050-1 (Gfx table)
0630   042E 30 04       				.dw			L0430						; $2052-3 (Next pointer)
0631   0430             
0632   0430             L0430:													; 5b table
0633   0430 03          				.db			$03							; $204F (Down counter)
0634   0431 B4 04       				.dw			L04B4						; $2050-1 (Gfx table)
0635   0433 39 04       				.dw			L0439						; $2052-3 (Next pointer)
0636   0435             
0637   0435             L0435:													; 9b table
0638   0435 7F          				.db			$7f							; $204B (Down counter)
0639   0436 00          				.db			$00							; $204C (Adder for $2054)
0640   0437 00 00       				.dw			L0000						; $204D-E (Next pointer)
0641   0439             L0439:
0642   0439 03          				.db			$03							; $204F (Down counter)
0643   043A 27 05       				.dw			L0527						; $2050-1 (Gfx table)
0644   043C 2B 04       				.dw			L042B						; $2052-3 (Next pointer)
0645   043E             
0646   043E             #include "zapgfx.asm"
0001+  043E             L043E:
0002+  043E 03 26       				.db			$03, $26				; Size 3 x 38
0003+  0440 00 00       				.dw			$0000						; Offset
0004+  0442 80 01 00    				.db			$80, $01, $00		; ..............## ##.............. ................ 
0005+  0445 80 07 00    				.db			$80, $07, $00		; ..............## ######.......... ................ 
0006+  0448 E0 0F 00    				.db			$e0, $0f, $00		; ..........###### ########........ ................ 
0007+  044B BC 1F 00    				.db			$bc, $1f, $00		; ....########..## ##########...... ................ 
0008+  044E E6 1B 00    				.db			$e6, $1b, $00		; ..####....###### ####..####...... ................ 
0009+  0451 67 1B 00    				.db			$67, $1b, $00		; ######....####.. ####..####...... ................ 
0010+  0454 7F 0F 03    				.db			$7f, $0f, $03		; ##############.. ########........ ####............ 
0011+  0457 EE 81 07    				.db			$ee, $81, $07		; ..######..###### ##............## ######.......... 
0012+  045A 3C C0 0F    				.db			$3c, $c0, $0f		; ....########.... ............#### ########........ 
0013+  045D 10 FC 1F    				.db			$10, $fc, $1f		; ........##...... ....############ ##########...... 
0014+  0460 10 C0 0F    				.db			$10, $c0, $0f		; ........##...... ............#### ########........ 
0015+  0463 20 40 0F    				.db			$20, $40, $0f		; ..........##.... ............##.. ########........ 
0016+  0466 40 E0 0F    				.db			$40, $e0, $0f		; ............##.. ..........###### ########........ 
0017+  0469 80 F0 0F    				.db			$80, $f0, $0f		; ..............## ........######## ########........ 
0018+  046C 80 C1 0F    				.db			$80, $c1, $0f		; ..............## ##..........#### ########........ 
0019+  046F 80 C1 07    				.db			$80, $c1, $07		; ..............## ##..........#### ######.......... 
0020+  0472 00 03 03    				.db			$00, $03, $03		; ................ ####............ ####............ 
0021+  0475 00 83 07    				.db			$00, $83, $07		; ................ ####..........## ######.......... 
0022+  0478 00 FE 3F    				.db			$00, $fe, $3f		; ................ ..############## ############.... 
0023+  047B 00 FE 7F    				.db			$00, $fe, $7f		; ................ ..############## ##############.. 
0024+  047E 00 E0 EF    				.db			$00, $e0, $ef		; ................ ..........###### ########..###### 
0025+  0481 00 80 CF    				.db			$00, $80, $cf		; ................ ..............## ########....#### 
0026+  0484 00 80 CF    				.db			$00, $80, $cf		; ................ ..............## ########....#### 
0027+  0487 00 80 CF    				.db			$00, $80, $cf		; ................ ..............## ########....#### 
0028+  048A 00 80 CF    				.db			$00, $80, $cf		; ................ ..............## ########....#### 
0029+  048D 00 80 DF    				.db			$00, $80, $df		; ................ ..............## ##########..#### 
0030+  0490 00 C0 DF    				.db			$00, $c0, $df		; ................ ............#### ##########..#### 
0031+  0493 00 C0 1F    				.db			$00, $c0, $1f		; ................ ............#### ##########...... 
0032+  0496 00 E0 1F    				.db			$00, $e0, $1f		; ................ ..........###### ##########...... 
0033+  0499 00 F0 0E    				.db			$00, $f0, $0e		; ................ ........######## ..######........ 
0034+  049C 00 70 0E    				.db			$00, $70, $0e		; ................ ........######.. ..######........ 
0035+  049F 00 38 0E    				.db			$00, $38, $0e		; ................ ......######.... ..######........ 
0036+  04A2 00 38 1C    				.db			$00, $38, $1c		; ................ ......######.... ....######...... 
0037+  04A5 00 30 38    				.db			$00, $30, $38		; ................ ........####.... ......######.... 
0038+  04A8 00 70 70    				.db			$00, $70, $70		; ................ ........######.. ........######.. 
0039+  04AB 00 60 60    				.db			$00, $60, $60		; ................ ..........####.. ..........####.. 
0040+  04AE 00 60 60    				.db			$00, $60, $60		; ................ ..........####.. ..........####.. 
0041+  04B1 00 78 78    				.db			$00, $78, $78		; ................ ......########.. ......########.. 
0042+  04B4             
0043+  04B4             L04B4:
0044+  04B4 03 25       				.db			$03, $25		; Size 3 x 37
0045+  04B6 20 00       				.dw			$0020						; Offset (1 row)
0046+  04B8 80 01 00    				.db			$80, $01, $00		; ..............## ##.............. ................ 
0047+  04BB 80 07 00    				.db			$80, $07, $00		; ..............## ######.......... ................ 
0048+  04BE E0 0F 00    				.db			$e0, $0f, $00		; ..........###### ########........ ................ 
0049+  04C1 BC 19 00    				.db			$bc, $19, $00		; ....########..## ##....####...... ................ 
0050+  04C4 F6 19 00    				.db			$f6, $19, $00		; ..####..######## ##....####...... ................ 
0051+  04C7 FF 1F 03    				.db			$ff, $1f, $03		; ################ ##########...... ####............ 
0052+  04CA EF 8F 07    				.db			$ef, $8f, $07		; ########..###### ########......## ######.......... 
0053+  04CD EE C1 0F    				.db			$ee, $c1, $0f		; ..######..###### ##..........#### ########........ 
0054+  04D0 3C FC 1F    				.db			$3c, $fc, $1f		; ....########.... ....############ ##########...... 
0055+  04D3 10 C0 0F    				.db			$10, $c0, $0f		; ........##...... ............#### ########........ 
0056+  04D6 20 40 0F    				.db			$20, $40, $0f		; ..........##.... ............##.. ########........ 
0057+  04D9 40 E0 0F    				.db			$40, $e0, $0f		; ............##.. ..........###### ########........ 
0058+  04DC 80 F0 0F    				.db			$80, $f0, $0f		; ..............## ........######## ########........ 
0059+  04DF 80 C1 0F    				.db			$80, $c1, $0f		; ..............## ##..........#### ########........ 
0060+  04E2 80 C1 07    				.db			$80, $c1, $07		; ..............## ##..........#### ######.......... 
0061+  04E5 00 03 03    				.db			$00, $03, $03		; ................ ####............ ####............ 
0062+  04E8 00 83 07    				.db			$00, $83, $07		; ................ ####..........## ######.......... 
0063+  04EB 00 FE 0F    				.db			$00, $fe, $0f		; ................ ..############## ########........ 
0064+  04EE 00 FE 0F    				.db			$00, $fe, $0f		; ................ ..############## ########........ 
0065+  04F1 00 E0 0F    				.db			$00, $e0, $0f		; ................ ..........###### ########........ 
0066+  04F4 00 80 0F    				.db			$00, $80, $0f		; ................ ..............## ########........ 
0067+  04F7 00 80 0F    				.db			$00, $80, $0f		; ................ ..............## ########........ 
0068+  04FA 00 80 0F    				.db			$00, $80, $0f		; ................ ..............## ########........ 
0069+  04FD 00 80 0F    				.db			$00, $80, $0f		; ................ ..............## ########........ 
0070+  0500 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0071+  0503 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0072+  0506 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0073+  0509 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0074+  050C 00 80 0F    				.db			$00, $80, $0f		; ................ ..............## ########........ 
0075+  050F 00 80 07    				.db			$00, $80, $07		; ................ ..............## ######.......... 
0076+  0512 00 80 07    				.db			$00, $80, $07		; ................ ..............## ######.......... 
0077+  0515 00 80 07    				.db			$00, $80, $07		; ................ ..............## ######.......... 
0078+  0518 00 80 03    				.db			$00, $80, $03		; ................ ..............## ####............ 
0079+  051B 00 00 03    				.db			$00, $00, $03		; ................ ................ ####............ 
0080+  051E 00 00 03    				.db			$00, $00, $03		; ................ ................ ####............ 
0081+  0521 00 00 03    				.db			$00, $00, $03		; ................ ................ ####............ 
0082+  0524 00 C0 03    				.db			$00, $c0, $03		; ................ ............#### ####............ 
0083+  0527             
0084+  0527             L0527:
0085+  0527 03 26       				.db			$03, $26				; Size 3 x 38
0086+  0529 00 00       				.dw			$0000						; Offset
0087+  052B 80 01 00    				.db			$80, $01, $00		; ..............## ##.............. ................ 
0088+  052E 80 07 00    				.db			$80, $07, $00		; ..............## ######.......... ................ 
0089+  0531 E0 0D 00    				.db			$e0, $0d, $00		; ..........###### ##..####........ ................ 
0090+  0534 F8 1D 00    				.db			$f8, $1d, $00		; ......########## ##..######...... ................ 
0091+  0537 9E 1F 00    				.db			$9e, $1f, $00		; ..########....## ##########...... ................ 
0092+  053A 9F 1B 00    				.db			$9f, $1b, $00		; ##########....## ####..####...... ................ 
0093+  053D FF 0F 03    				.db			$ff, $0f, $03		; ################ ########........ ####............ 
0094+  0540 F6 81 07    				.db			$f6, $81, $07		; ..####..######## ##............## ######.......... 
0095+  0543 3C C0 0F    				.db			$3c, $c0, $0f		; ....########.... ............#### ########........ 
0096+  0546 10 FC 1F    				.db			$10, $fc, $1f		; ........##...... ....############ ##########...... 
0097+  0549 10 C0 0F    				.db			$10, $c0, $0f		; ........##...... ............#### ########........ 
0098+  054C 20 40 0F    				.db			$20, $40, $0f		; ..........##.... ............##.. ########........ 
0099+  054F 40 E0 0F    				.db			$40, $e0, $0f		; ............##.. ..........###### ########........ 
0100+  0552 80 F0 0F    				.db			$80, $f0, $0f		; ..............## ........######## ########........ 
0101+  0555 80 C1 0F    				.db			$80, $c1, $0f		; ..............## ##..........#### ########........ 
0102+  0558 80 C1 07    				.db			$80, $c1, $07		; ..............## ##..........#### ######.......... 
0103+  055B 00 03 03    				.db			$00, $03, $03		; ................ ####............ ####............ 
0104+  055E 00 83 07    				.db			$00, $83, $07		; ................ ####..........## ######.......... 
0105+  0561 00 FE 0F    				.db			$00, $fe, $0f		; ................ ..############## ########........ 
0106+  0564 00 FE 1F    				.db			$00, $fe, $1f		; ................ ..############## ##########...... 
0107+  0567 00 E0 3F    				.db			$00, $e0, $3f		; ................ ..........###### ############.... 
0108+  056A 00 80 6F    				.db			$00, $80, $6f		; ................ ..............## ########..####.. 
0109+  056D 00 80 6F    				.db			$00, $80, $6f		; ................ ..............## ########..####.. 
0110+  0570 00 80 6F    				.db			$00, $80, $6f		; ................ ..............## ########..####.. 
0111+  0573 00 80 6F    				.db			$00, $80, $6f		; ................ ..............## ########..####.. 
0112+  0576 00 80 3F    				.db			$00, $80, $3f		; ................ ..............## ############.... 
0113+  0579 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0114+  057C 00 80 1F    				.db			$00, $80, $1f		; ................ ..............## ##########...... 
0115+  057F 00 C0 1F    				.db			$00, $c0, $1f		; ................ ............#### ##########...... 
0116+  0582 00 C0 1F    				.db			$00, $c0, $1f		; ................ ............#### ##########...... 
0117+  0585 00 C0 07    				.db			$00, $c0, $07		; ................ ............#### ######.......... 
0118+  0588 00 E0 03    				.db			$00, $e0, $03		; ................ ..........###### ####............ 
0119+  058B 00 E0 19    				.db			$00, $e0, $19		; ................ ..........###### ##....####...... 
0120+  058E 00 E0 1C    				.db			$00, $e0, $1c		; ................ ..........###### ....######...... 
0121+  0591 00 60 38    				.db			$00, $60, $38		; ................ ..........####.. ......######.... 
0122+  0594 00 60 70    				.db			$00, $60, $70		; ................ ..........####.. ........######.. 
0123+  0597 00 60 60    				.db			$00, $60, $60		; ................ ..........####.. ..........####.. 
0124+  059A 00 78 78    				.db			$00, $78, $78		; ................ ......########.. ......########..
0125+  059D             
0126+  059D             L059D:
0127+  059D 04 1F       				.db			$04, $1f							; Size 4 x 31
0128+  059F DF 00       				.dw			$00df									; Offset 
0129+  05A1 00 00 30 00 				.db			$00, $00, $30, $00		; ................ ................ ........####.... ................ 
0130+  05A5 00 00 78 00 				.db			$00, $00, $78, $00		; ................ ................ ......########.. ................ 
0131+  05A9 00 00 FC 00 				.db			$00, $00, $fc, $00		; ................ ................ ....############ ................ 
0132+  05AD 00 C0 FF 01 				.db			$00, $c0, $ff, $01		; ................ ............#### ################ ##.............. 
0133+  05B1 33 03 FC 00 				.db			$33, $03, $fc, $00		; ####....####.... ####............ ....############ ................ 
0134+  05B5 33 03 F4 00 				.db			$33, $03, $f4, $00		; ####....####.... ####............ ....##..######## ................ 
0135+  05B9 CC 00 FE 00 				.db			$cc, $00, $fe, $00		; ....####....#### ................ ..############## ................ 
0136+  05BD CC 00 FF 00 				.db			$cc, $00, $ff, $00		; ....####....#### ................ ################ ................ 
0137+  05C1 33 03 FC 00 				.db			$33, $03, $fc, $00		; ####....####.... ####............ ....############ ................ 
0138+  05C5 33 03 7C 00 				.db			$33, $03, $7c, $00		; ####....####.... ####............ ....##########.. ................ 
0139+  05C9 CC 00 30 00 				.db			$cc, $00, $30, $00		; ....####....#### ................ ........####.... ................ 
0140+  05CD CC 00 F8 00 				.db			$cc, $00, $f8, $00		; ....####....#### ................ ......########## ................ 
0141+  05D1 FF FF FF 1F 				.db			$ff, $ff, $ff, $1f		; ################ ################ ################ ##########...... 
0142+  05D5 00 F0 FF 3F 				.db			$00, $f0, $ff, $3f		; ................ ........######## ################ ############.... 
0143+  05D9 00 00 FF 70 				.db			$00, $00, $ff, $70		; ................ ................ ################ ........######.. 
0144+  05DD 00 00 FC E0 				.db			$00, $00, $fc, $e0		; ................ ................ ....############ ..........###### 
0145+  05E1 00 00 FC C0 				.db			$00, $00, $fc, $c0		; ................ ................ ....############ ............#### 
0146+  05E5 00 00 F8 81 				.db			$00, $00, $f8, $81		; ................ ................ ......########## ##............## 
0147+  05E9 00 00 F8 81 				.db			$00, $00, $f8, $81		; ................ ................ ......########## ##............## 
0148+  05ED 00 00 F8 81 				.db			$00, $00, $f8, $81		; ................ ................ ......########## ##............## 
0149+  05F1 00 00 FC 03 				.db			$00, $00, $fc, $03		; ................ ................ ....############ ####............ 
0150+  05F5 00 00 FC 03 				.db			$00, $00, $fc, $03		; ................ ................ ....############ ####............ 
0151+  05F9 00 00 DE 03 				.db			$00, $00, $de, $03		; ................ ................ ..########..#### ####............ 
0152+  05FD 00 00 8E 03 				.db			$00, $00, $8e, $03		; ................ ................ ..######......## ####............ 
0153+  0601 00 00 07 07 				.db			$00, $00, $07, $07		; ................ ................ ######.......... ######.......... 
0154+  0605 00 80 03 0E 				.db			$00, $80, $03, $0e		; ................ ..............## ####............ ..######........ 
0155+  0609 00 80 01 FC 				.db			$00, $80, $01, $fc		; ................ ..............## ##.............. ....############ 
0156+  060D 00 80 01 F8 				.db			$00, $80, $01, $f8		; ................ ..............## ##.............. ......########## 
0157+  0611 00 80 01 80 				.db			$00, $80, $01, $80		; ................ ..............## ##.............. ..............## 
0158+  0615 00 80 01 80 				.db			$00, $80, $01, $80		; ................ ..............## ##.............. ..............## 
0159+  0619 00 E0 01 80 				.db			$00, $e0, $01, $80		; ................ ..........###### ##.............. ..............## 
0160+  061D             
0161+  061D             L061D:
0162+  061D 04 1F       				.db			$04, $1f							; Size 4 x 31
0163+  061F DF 00       				.dw			$00df									; Offset 
0164+  0621 9F 0F 30 00 				.db			$9f, $0f, $30, $00		; ##########....## ########........ ........####.... ................ 
0165+  0625 93 0D 78 00 				.db			$93, $0d, $78, $00		; ####....##....## ##..####........ ......########.. ................ 
0166+  0629 83 0D FC 00 				.db			$83, $0d, $fc, $00		; ####..........## ##..####........ ....############ ................ 
0167+  062D 83 CD FF 01 				.db			$83, $cd, $ff, $01		; ####..........## ##..####....#### ################ ##.............. 
0168+  0631 9B 0D FC 00 				.db			$9b, $0d, $fc, $00		; ####..####....## ##..####........ ....############ ................ 
0169+  0635 93 0D F4 00 				.db			$93, $0d, $f4, $00		; ####....##....## ##..####........ ....##..######## ................ 
0170+  0639 9F 0F FE 00 				.db			$9f, $0f, $fe, $00		; ##########....## ########........ ..############## ................ 
0171+  063D 00 00 FC 00 				.db			$00, $00, $fc, $00		; ................ ................ ....############ ................ 
0172+  0641 00 20 F8 00 				.db			$00, $20, $f8, $00		; ................ ..........##.... ......########## ................ 
0173+  0645 00 80 7C 00 				.db			$00, $80, $7c, $00		; ................ ..............## ....##########.. ................ 
0174+  0649 00 00 30 00 				.db			$00, $00, $30, $00		; ................ ................ ........####.... ................ 
0175+  064D 00 00 F8 00 				.db			$00, $00, $f8, $00		; ................ ................ ......########## ................ 
0176+  0651 FF FF FF 1F 				.db			$ff, $ff, $ff, $1f		; ################ ################ ################ ##########...... 
0177+  0655 33 E3 FF 3F 				.db			$33, $e3, $ff, $3f		; ####....####.... ####......###### ################ ############.... 
0178+  0659 33 03 FF 70 				.db			$33, $03, $ff, $70		; ####....####.... ####............ ################ ........######.. 
0179+  065D CC 00 FC E0 				.db			$cc, $00, $fc, $e0		; ....####....#### ................ ....############ ..........###### 
0180+  0661 CC 00 FC C0 				.db			$cc, $00, $fc, $c0		; ....####....#### ................ ....############ ............#### 
0181+  0665 33 03 F8 81 				.db			$33, $03, $f8, $81		; ####....####.... ####............ ......########## ##............## 
0182+  0669 33 03 F8 81 				.db			$33, $03, $f8, $81		; ####....####.... ####............ ......########## ##............## 
0183+  066D CC 00 F8 81 				.db			$cc, $00, $f8, $81		; ....####....#### ................ ......########## ##............## 
0184+  0671 CC 00 FC 03 				.db			$cc, $00, $fc, $03		; ....####....#### ................ ....############ ####............ 
0185+  0675 00 00 FC 03 				.db			$00, $00, $fc, $03		; ................ ................ ....############ ####............ 
0186+  0679 00 00 DE 03 				.db			$00, $00, $de, $03		; ................ ................ ..########..#### ####............ 
0187+  067D 00 00 8E 03 				.db			$00, $00, $8e, $03		; ................ ................ ..######......## ####............ 
0188+  0681 00 00 07 07 				.db			$00, $00, $07, $07		; ................ ................ ######.......... ######.......... 
0189+  0685 00 80 03 0E 				.db			$00, $80, $03, $0e		; ................ ..............## ####............ ..######........ 
0190+  0689 00 80 01 FC 				.db			$00, $80, $01, $fc		; ................ ..............## ##.............. ....############ 
0191+  068D 00 80 01 F8 				.db			$00, $80, $01, $f8		; ................ ..............## ##.............. ......########## 
0192+  0691 00 80 01 80 				.db			$00, $80, $01, $80		; ................ ..............## ##.............. ..............## 
0193+  0695 00 80 01 80 				.db			$00, $80, $01, $80		; ................ ..............## ##.............. ..............## 
0194+  0699 00 E0 01 80 				.db			$00, $e0, $01, $80		; ................ ..........###### ##.............. ..............## 
0195+  069D             
0196+  069D             				; Was $069D
0197+  069D             				.end
0647   069D             
0648   069D             L069D:
0649   069D E0          				.db			$E0							; Garbage byte
0650   069E             
0651   069E             				;; Common interrupt routine
0652   069E             L069E:
0653   069E E5          				push		hl
0654   069F DB 00       				in			a,($00)					; IN0
0655   06A1 47          				ld			b,a							; Stash read value
0656   06A2 DB 00       				in			a,($00)					; IN0
0657   06A4 A8          				xor			b
0658   06A5 E6 40       				and			$40							; Mask COIN
0659   06A7 C2 BE 06    				jp			nz,L06BE				; Bit 6 unstable
0660   06AA             
0661   06AA 78          				ld			a,b							; Restore read value
0662   06AB 21 20 20    				ld			hl,$2020
0663   06AE AE          				xor			(hl)						; xor
0664   06AF 70          				ld			(hl),b					; Store new value
0665   06B0 E6 40       				and			$40							; Mask COIN
0666   06B2 CA BE 06    				jp			z,L06BE					; No change
0667   06B5             
0668   06B5 78          				ld			a,b							; Restore read value
0669   06B6 E6 40       				and			$40
0670   06B8 C2 BE 06    				jp			nz,L06BE				; Not pressed
0671   06BB             
0672   06BB 23          				inc			hl							; == $2021
0673   06BC 36 01       				ld			(hl),$01				; Set coin flag?
0674   06BE             
0675   06BE             L06BE:
0676   06BE 21 24 20    				ld			hl,$2024
0677   06C1 7E          				ld			a,(hl)
0678   06C2 A9          				xor			c								; c=0 for rst $08, 1 for rst $10
0679   06C3 C2 DA 06    				jp			nz,L06DA				; Do nothing for rst $08, ($2024)==$00
0680   06C6             
0681   06C6 7E          				ld			a,(hl)
0682   06C7 21 D2 06    				ld			hl,L06D2				; Return address
0683   06CA E5          				push		hl
0684   06CB A7          				and			a
0685   06CC C2 8B 08    				jp			nz,L088B				; For ($2024)!=$00
0686   06CF C3 E0 06    				jp			L06E0						; rst $10, ($2024)==$00
0687   06D2             
0688   06D2             				;; Return address for IRQs
0689   06D2             L06D2:
0690   06D2 21 24 20    				ld			hl,$2024
0691   06D5 7E          				ld			a,(hl)
0692   06D6 3C          				inc			a
0693   06D7 E6 01       				and			$01
0694   06D9 77          				ld			(hl),a
0695   06DA             
0696   06DA             				;; End of IRQ routine
0697   06DA             L06DA:
0698   06DA E1          				pop			hl
0699   06DB D1          				pop			de
0700   06DC C1          				pop			bc
0701   06DD F1          				pop			af
0702   06DE FB          				ei
0703   06DF C9          				ret
0704   06E0             
0705   06E0             L06E0:
0706   06E0 3A 22 20    				ld			a,($2022)				; Game state
0707   06E3 A7          				and			a
0708   06E4 FA 9D 0A    				jp			m,L0A9D					; D7 set = do big gfx in attract
0709   06E7             
0710   06E7 C8          				ret			z								; Do nothing if zero
0711   06E8             
0712   06E8 0F          				rrca
0713   06E9 D2 31 08    				jp			nc,L0831				; Jump if even
0714   06EC             
0715   06EC             				;; Redo pylons
0716   06EC 2A 27 20    				ld			hl,($2027)			; Pointer to set of pylons
0717   06EF CD C9 09    				call		L09C9						; Erase big pylon?
0718   06F2 CD C9 09    				call		L09C9						; Erase big pylon?
0719   06F5 CD C9 09    				call		L09C9						; Erase big pylon?
0720   06F8 CD C9 09    				call		L09C9						; Erase big pylon?
0721   06FB CD C9 09    				call		L09C9						; Erase big pylon?
0722   06FE CD C9 09    				call		L09C9						; Erase big pylon?
0723   0701             
0724   0701 01 20 00    				ld			bc,$0020				; Row increment
0725   0704 CD E5 09    				call		L09E5						; Erase small pylon?
0726   0707 CD E5 09    				call		L09E5						; Erase small pylon?
0727   070A CD E5 09    				call		L09E5						; Erase small pylon?
0728   070D CD E5 09    				call		L09E5						; Erase small pylon?
0729   0710 CD E5 09    				call		L09E5						; Erase small pylon?
0730   0713 CD E5 09    				call		L09E5						; Erase small pylon?
0731   0716             
0732   0716 2A 25 20    				ld			hl,($2025)			; Pointer to set of pylons
0733   0719 CD FB 09    				call		L09FB						; Draw big pylon 
0734   071C CD FB 09    				call		L09FB						; Draw big pylon 
0735   071F CD FB 09    				call		L09FB						; Draw big pylon 
0736   0722 CD FB 09    				call		L09FB						; Draw big pylon 
0737   0725 CD FB 09    				call		L09FB						; Draw big pylon 
0738   0728 CD FB 09    				call		L09FB						; Draw big pylon 
0739   072B             
0740   072B CD 33 0A    				call		L0A33						; Draw small pylon
0741   072E CD 33 0A    				call		L0A33						; Draw small pylon
0742   0731 CD 33 0A    				call		L0A33						; Draw small pylon
0743   0734 CD 33 0A    				call		L0A33						; Draw small pylon
0744   0737 CD 33 0A    				call		L0A33						; Draw small pylon
0745   073A CD 33 0A    				call		L0A33						; Draw small pylon
0746   073D             
0747   073D CD EF 08    				call		L08EF
0748   0740 3A 3E 21    				ld			a,($213E)
0749   0743 21 43 21    				ld			hl,$2143
0750   0746 35          				dec			(hl)
0751   0747 F2 6D 07    				jp			p,L076D
0752   074A             
0753   074A 36 03       				ld			(hl),$03
0754   074C 21 3E 21    				ld			hl,$213E
0755   074F 7E          				ld			a,(hl)
0756   0750 23          				inc			hl
0757   0751 BE          				cp			(hl)
0758   0752 CA 6D 07    				jp			z,L076D
0759   0755             
0760   0755 DA 66 07    				jp			c,L0766
0761   0758             
0762   0758 FE 04       				cp			$04
0763   075A D2 61 07    				jp			nc,L0761
0764   075D AF          				xor			a
0765   075E C3 6B 07    				jp			L076B
0766   0761             L0761:
0767   0761 D6 04       				sub			$04
0768   0763 C3 6B 07    				jp			L076B
0769   0766             L0766:
0770   0766 5F          				ld			e,a
0771   0767 3A 5A 20    				ld			a,($205A)
0772   076A 83          				add			a,e
0773   076B             L076B:
0774   076B 2B          				dec			hl
0775   076C 77          				ld			(hl),a
0776   076D             
0777   076D             L076D:
0778   076D 5F          				ld			e,a
0779   076E 16 00       				ld			d,$00
0780   0770 2A 47 20    				ld			hl,($2047)
0781   0773 7C          				ld			a,h
0782   0774 A7          				and			a
0783   0775 CA 7C 07    				jp			z,L077C
0784   0778 19          				add			hl,de
0785   0779 22 47 20    				ld			($2047),hl
0786   077C             L077C:
0787   077C 2A 49 20    				ld			hl,($2049)
0788   077F 7C          				ld			a,h
0789   0780 A7          				and			a
0790   0781 CA 88 07    				jp			z,L0788
0791   0784 19          				add			hl,de
0792   0785 22 49 20    				ld			($2049),hl
0793   0788             L0788:
0794   0788 EB          				ex			de,hl
0795   0789 29          				add			hl,hl						; de*2
0796   078A 29          				add			hl,hl						; d3*4
0797   078B 29          				add			hl,hl						; d3*8
0798   078C 29          				add			hl,hl						; de*16
0799   078D EB          				ex			de,hl
0800   078E 2A 3B 20    				ld			hl,($203B)
0801   0791 19          				add			hl,de
0802   0792 22 3B 20    				ld			($203B),hl
0803   0795 7C          				ld			a,h
0804   0796 2F          				cpl
0805   0797 E6 1F       				and			$1F
0806   0799 C6 40       				add			a,$40
0807   079B 32 03 20    				ld			($2003),a
0808   079E 4A          				ld			c,d
0809   079F 16 00       				ld			d,$00
0810   07A1 3A 37 20    				ld			a,($2037)
0811   07A4 CD 5C 08    				call		L085C
0812   07A7 F5          				push		af
0813   07A8 78          				ld			a,b
0814   07A9 32 02 20    				ld			($2002),a
0815   07AC 3A 22 20    				ld			a,($2022)				; Game state
0816   07AF EE 03       				xor			$03
0817   07B1 CA 30 08    				jp			z,L0830
0818   07B4 3A 3E 21    				ld			a,($213E)
0819   07B7 A7          				and			a
0820   07B8 CA 30 08    				jp			z,L0830
0821   07BB 3A 37 20    				ld			a,($2037)
0822   07BE 47          				ld			b,a
0823   07BF CD 87 08    				call		L0887						; Complement a if negative
0824   07C2 0F          				rrca
0825   07C3 0F          				rrca
0826   07C4 0F          				rrca
0827   07C5 E6 06       				and			$06
0828   07C7 2F          				cpl
0829   07C8 3C          				inc			a
0830   07C9 C6 0B       				add			a,$0B
0831   07CB B9          				cp			c
0832   07CC D2 E8 07    				jp			nc,L07E8
0833   07CF 2F          				cpl
0834   07D0 3C          				inc			a
0835   07D1 81          				add			a,c
0836   07D2 3C          				inc			a
0837   07D3 0F          				rrca
0838   07D4 E6 03       				and			$03
0839   07D6 4F          				ld			c,a
0840   07D7 32 41 21    				ld			($2141),a
0841   07DA F1          				pop			af
0842   07DB 78          				ld			a,b
0843   07DC 42          				ld			b,d
0844   07DD A7          				and			a
0845   07DE F2 01 08    				jp			p,L0801
0846   07E1 79          				ld			a,c
0847   07E2 2F          				cpl
0848   07E3 3C          				inc			a
0849   07E4 4F          				ld			c,a
0850   07E5 C3 FF 07    				jp			L07FF
0851   07E8             L07E8:
0852   07E8 AF          				xor			a
0853   07E9 32 41 21    				ld			($2141),a
0854   07EC 79          				ld			a,c
0855   07ED 0F          				rrca
0856   07EE E6 07       				and			$07
0857   07F0 81          				add			a,c
0858   07F1 79          				ld			a,c
0859   07F2 3A 3A 20    				ld			a,($203A)
0860   07F5 CD 5C 08    				call		L085C
0861   07F8 42          				ld			b,d
0862   07F9 D1          				pop			de
0863   07FA 82          				add			a,d
0864   07FB 4F          				ld			c,a
0865   07FC F2 01 08    				jp			p,L0801
0866   07FF             L07FF:
0867   07FF 06 FF       				ld			b,$FF
0868   0801             L0801:
0869   0801 2A 00 20    				ld			hl,($2000)
0870   0804 09          				add			hl,bc
0871   0805 22 00 20    				ld			($2000),hl
0872   0808 7C          				ld			a,h
0873   0809 A7          				and			a
0874   080A CA 22 08    				jp			z,L0822
0875   080D 3A 22 20    				ld			a,($2022)				; Game state
0876   0810 EE 05       				xor			$05
0877   0812 CA 1A 08    				jp			z,L081A
0878   0815 21 22 20    				ld			hl,$2022				; Game state
0879   0818 34          				inc			(hl)
0880   0819 C9          				ret
0881   081A             L081A:
0882   081A 7C          				ld			a,h
0883   081B 2F          				cpl
0884   081C 6F          				ld			l,a
0885   081D 26 00       				ld			h,$00
0886   081F 22 00 20    				ld			($2000),hl
0887   0822             L0822:
0888   0822 7D          				ld			a,l
0889   0823 CD 87 08    				call		L0887						; Complement a if negative
0890   0826 FE 28       				cp			$28
0891   0828 7C          				ld			a,h
0892   0829 8F          				adc			a,a
0893   082A 32 40 21    				ld			($2140),a
0894   082D C3 31 08    				jp			L0831						; Why not push af? 
0895   0830             
0896   0830             				;; Get af from stack for $0831
0897   0830             L0830:
0898   0830 F1          				pop			af							; Throw away calling address? 
0899   0831             
0900   0831             L0831:
0901   0831 21 45 20    				ld			hl,$2045
0902   0834 DB 00       				in			a,($00)					; IN0
0903   0836 77          				ld			(hl),a					; Store IN0 
0904   0837 23          				inc			hl
0905   0838 DB 01       				in			a,($01)					; IN1
0906   083A 77          				ld			(hl),a					; Store IN1
0907   083B             
0908   083B CD 4E 08    				call		L084E						; Handle audio port 2 timer
0909   083E 21 3F 20    				ld			hl,$203F
0910   0841 CD 49 08    				call		L0849						; Handle timer $203F
0911   0844 23          				inc			hl							; hl=$2040
0912   0845 CD 49 08    				call		L0849						; Handle timer $2040
0913   0848 23          				inc			hl							; hl=$2041
0914   0849             
0915   0849             				;; Handle timer
0916   0849             L0849:
0917   0849 7E          				ld			a,(hl)
0918   084A A7          				and			a
0919   084B C8          				ret			z								; Skip if zero
0920   084C 35          				dec			(hl)						; Decrement
0921   084D C9          				ret
0922   084E             
0923   084E             				;; Handle audio port 2 timer
0924   084E             L084E:
0925   084E 21 2E 20    				ld			hl,$202E				; Audio port 2 timer
0926   0851 7E          				ld			a,(hl)
0927   0852 A7          				and			a
0928   0853 C8          				ret			z								; Skip if 0
0929   0854 35          				dec			(hl)						; Decrement timer
0930   0855 C0          				ret			nz							; Return if not 0
0931   0856             
0932   0856 3A 2D 20    				ld			a,($202D)				; Audio port 2 default
0933   0859 D3 05       				out			($05),a					; Audio Port 2
0934   085B C9          				ret
0935   085C             
0936   085C             				;; a = index into $116D table
0937   085C             				;; c = index into $122E table
0938   085C             				;; d should be 0
0939   085C             L085C:
0940   085C A7          				and			a
0941   085D F5          				push		af
0942   085E CD 87 08    				call		L0887						; Complement a if negative
0943   0861 5F          				ld			e,a							; e=a
0944   0862 21 6D 11    				ld			hl,L116D
0945   0865 19          				add			hl,de						; hl = $116D + a
0946   0866 7E          				ld			a,(hl)
0947   0867 47          				ld			b,a							; Store table value
0948   0868 59          				ld			e,c
0949   0869 21 2E 12    				ld			hl,L122E				; hl = $116D + c
0950   086C 19          				add			hl,de
0951   086D 86          				add			a,(hl)
0952   086E F2 7B 08    				jp			p,L087B					; sum positive
0953   0871             
0954   0871 5A          				ld			e,d							; e=0
0955   0872 FE EE       				cp			$EE
0956   0874 DA 81 08    				jp			c,L0881
0957   0877 1C          				inc			e								; e=1
0958   0878 C3 81 08    				jp			L0881
0959   087B             
0960   087B             L087B:
0961   087B 5F          				ld			e,a
0962   087C 21 AE 11    				ld			hl,$11AE
0963   087F 19          				add			hl,de						; hl = $11AE + a
0964   0880 5E          				ld			e,(hl)					; Get e from table
0965   0881             
0966   0881             L0881:
0967   0881 F1          				pop			af							; Use flags for ret p?
0968   0882 7B          				ld			a,e
0969   0883 F0          				ret			p
0970   0884 2F          				cpl
0971   0885 3C          				inc			a
0972   0886 C9          				ret
0973   0887             
0974   0887             
0975   0887             				;; Complement a if negative
0976   0887             L0887:
0977   0887 A7          				and			a
0978   0888 F0          				ret			p
0979   0889 2F          				cpl
0980   088A C9          				ret
0981   088B             
0982   088B             
0983   088B             				;; IRQ routine for $2024 non-zero
0984   088B             L088B:
0985   088B 3A 22 20    				ld			a,($2022)				; Game state
0986   088E A7          				and			a
0987   088F F8          				ret			m								; Return if high bit set
0988   0890             
0989   0890 0F          				rrca
0990   0891 D0          				ret			nc							; REturn if low bit was set
0991   0892             
0992   0892 2A 27 20    				ld			hl,($2027)
0993   0895 11 46 00    				ld			de,$0046				; $0e * $05
0994   0898 19          				add			hl,de
0995   0899 CD C9 09    				call		L09C9						; Erase big pylon?
0996   089C CD C9 09    				call		L09C9						; Erase big pylon?
0997   089F 2A 25 20    				ld			hl,($2025)
0998   08A2 11 46 00    				ld			de,$0046				; $0e * $05
0999   08A5 19          				add			hl,de
1000   08A6 CD 5C 0A    				call		L0A5C						; Draw pylon (no or)
1001   08A9 CD 5C 0A    				call		L0A5C						; Draw pylon (no or)
1002   08AC 2A 27 20    				ld			hl,($2027)
1003   08AF 11 3C 00    				ld			de,$003C				; $0a * $05
1004   08B2 19          				add			hl,de
1005   08B3 CD C9 09    				call		L09C9						; Erase big pylon?
1006   08B6 CD C9 09    				call		L09C9						; Erase big pylon?
1007   08B9 2A 25 20    				ld			hl,($2025)
1008   08BC 11 3C 00    				ld			de,$003C				; $0a * $05
1009   08BF 19          				add			hl,de
1010   08C0 CD 5C 0A    				call		L0A5C						; Draw plyon (no or)
1011   08C3 CD 5C 0A    				call		L0A5C						; Draw pylon (no or)
1012   08C6             
1013   08C6             				;; Swap ($2027) and ($2025)
1014   08C6 2A 27 20    				ld			hl,($2027)
1015   08C9 EB          				ex			de,hl
1016   08CA 2A 25 20    				ld			hl,($2025)
1017   08CD 22 27 20    				ld			($2027),hl
1018   08D0 EB          				ex			de,hl
1019   08D1 22 25 20    				ld			($2025),hl
1020   08D4 22 60 20    				ld			($2060),hl
1021   08D7 3E 05       				ld			a,$05
1022   08D9 D3 04       				out			($04),a					; MB14241 Count
1023   08DB AF          				xor			a
1024   08DC D3 03       				out			($03),a					; MB14241 Data
1025   08DE 3A 03 20    				ld			a,($2003)
1026   08E1             L08E1:
1027   08E1 CD 0D 09    				call		L090D
1028   08E4             
1029   08E4 21 03 20    				ld			hl,$2003
1030   08E7 7E          				ld			a,(hl)
1031   08E8 C6 20       				add			a,$20
1032   08EA 77          				ld			(hl),a
1033   08EB D2 E1 08    				jp			nc,L08E1
1034   08EE C9          				ret
1035   08EF             
1036   08EF             L08EF:
1037   08EF 2A 60 20    				ld			hl,($2060)
1038   08F2 7C          				ld			a,h
1039   08F3 B5          				or			l
1040   08F4 C8          				ret			z
1041   08F5 3E 05       				ld			a,$05
1042   08F7 D3 04       				out			($04),a					; MB14241 Count
1043   08F9 AF          				xor			a
1044   08FA D3 03       				out			($03),a					; MB14241 Data
1045   08FC 21 03 20    				ld			hl,$2003
1046   08FF 7E          				ld			a,(hl)
1047   0900 E6 1F       				and			$1F
1048   0902 77          				ld			(hl),a
1049   0903 CD 0D 09    				call		L090D
1050   0906 21 03 20    				ld			hl,$2003
1051   0909 7E          				ld			a,(hl)
1052   090A C6 20       				add			a,$20
1053   090C 77          				ld			(hl),a
1054   090D             
1055   090D             L090D:
1056   090D 4F          				ld			c,a
1057   090E 06 00       				ld			b,$00
1058   0910 21 45 21    				ld			hl,$2145
1059   0913 09          				add			hl,bc						; hl=$2145+a
1060   0914 4E          				ld			c,(hl)
1061   0915 3A 02 20    				ld			a,($2002)
1062   0918 81          				add			a,c
1063   0919 A7          				and			a
1064   091A F2 2B 09    				jp			p,L092B
1065   091D             
1066   091D FE EE       				cp			$EE
1067   091F D2 26 09    				jp			nc,L0926
1068   0922             
1069   0922 68          				ld			l,b
1070   0923 C3 31 09    				jp			L0931
1071   0926             
1072   0926             L0926:
1073   0926 2E 01       				ld			l,$01
1074   0928 C3 31 09    				jp			L0931
1075   092B             
1076   092B             L092B:
1077   092B 4F          				ld			c,a
1078   092C 21 AE 11    				ld			hl,$11AE
1079   092F 09          				add			hl,bc
1080   0930 6E          				ld			l,(hl)
1081   0931             L0931:
1082   0931 60          				ld			h,b
1083   0932 3A 37 20    				ld			a,($2037)
1084   0935 A7          				and			a
1085   0936 F2 3F 09    				jp			p,L093F
1086   0939 AF          				xor			a
1087   093A 95          				sub			l
1088   093B 6F          				ld			l,a
1089   093C 78          				ld			a,b
1090   093D 9C          				sbc			a,h
1091   093E 67          				ld			h,a
1092   093F             L093F:
1093   093F EB          				ex			de,hl
1094   0940 2A 00 20    				ld			hl,($2000)
1095   0943 19          				add			hl,de
1096   0944 22 04 20    				ld			($2004),hl
1097   0947 3A 03 20    				ld			a,($2003)
1098   094A 4F          				ld			c,a
1099   094B 21 45 22    				ld			hl,$2245
1100   094E 09          				add			hl,bc
1101   094F 7E          				ld			a,(hl)
1102   0950 32 08 20    				ld			($2008),a
1103   0953 57          				ld			d,a
1104   0954 7E          				ld			a,(hl)
1105   0955 21 06 20    				ld			hl,$2006
1106   0958 0F          				rrca
1107   0959 E6 7F       				and			$7F
1108   095B 5F          				ld			e,a
1109   095C 0F          				rrca
1110   095D E6 1F       				and			$1F
1111   095F 77          				ld			(hl),a
1112   0960 23          				inc			hl
1113   0961 0F          				rrca
1114   0962 0F          				rrca
1115   0963 E6 07       				and			$07
1116   0965 4F          				ld			c,a
1117   0966 3C          				inc			a
1118   0967 77          				ld			(hl),a
1119   0968 7A          				ld			a,d
1120   0969 50          				ld			d,b
1121   096A 83          				add			a,e
1122   096B 5F          				ld			e,a
1123   096C D5          				push		de
1124   096D 2A 04 20    				ld			hl,($2004)
1125   0970 19          				add			hl,de
1126   0971 E5          				push		hl
1127   0972 09          				add			hl,bc
1128   0973 7C          				ld			a,h
1129   0974 E1          				pop			hl
1130   0975 CD 8D 09    				call		L098D
1131   0978 D1          				pop			de
1132   0979 AF          				xor			a
1133   097A 93          				sub			e
1134   097B 5F          				ld			e,a
1135   097C 3E 00       				ld			a,$00
1136   097E 9A          				sbc			a,d
1137   097F 57          				ld			d,a
1138   0980 AF          				xor			a
1139   0981 91          				sub			c
1140   0982 4F          				ld			c,a
1141   0983 3E 00       				ld			a,$00
1142   0985 98          				sbc			a,b
1143   0986 47          				ld			b,a
1144   0987 2A 04 20    				ld			hl,($2004)
1145   098A 09          				add			hl,bc
1146   098B 19          				add			hl,de
1147   098C 7C          				ld			a,h
1148   098D             L098D:
1149   098D A7          				and			a
1150   098E C2 BC 09    				jp			nz,L09BC
1151   0991 EB          				ex			de,hl
1152   0992 2A 60 20    				ld			hl,($2060)
1153   0995 3A 07 20    				ld			a,($2007)
1154   0998 77          				ld			(hl),a
1155   0999 23          				inc			hl
1156   099A 3A 06 20    				ld			a,($2006)
1157   099D 77          				ld			(hl),a
1158   099E 23          				inc			hl
1159   099F 7B          				ld			a,e
1160   09A0 D3 03       				out			($03),a					; MB14241 Data
1161   09A2 E6 07       				and			$07
1162   09A4 77          				ld			(hl),a
1163   09A5 23          				inc			hl
1164   09A6 3A 08 20    				ld			a,($2008)
1165   09A9 D3 03       				out			($03),a					; MB14241 Data
1166   09AB DB 03       				in			a,($03)					; MB14241 Result
1167   09AD 77          				ld			(hl),a
1168   09AE 23          				inc			hl
1169   09AF AF          				xor			a
1170   09B0 D3 03       				out			($03),a					; MB14241 Data
1171   09B2 DB 03       				in			a,($03)					; MB14241 Result
1172   09B4 C6 24       				add			a,$24
1173   09B6 77          				ld			(hl),a
1174   09B7 23          				inc			hl
1175   09B8 22 60 20    				ld			($2060),hl
1176   09BB C9          				ret
1177   09BC             L09BC:
1178   09BC 2A 60 20    				ld			hl,($2060)
1179   09BF 36 00       				ld			(hl),$00
1180   09C1 11 05 00    				ld			de,$0005
1181   09C4 19          				add			hl,de
1182   09C5 22 60 20    				ld			($2060),hl
1183   09C8 C9          				ret
1184   09C9             
1185   09C9             
1186   09C9             				;; Erase big pylon @ hl
1187   09C9             L09C9:
1188   09C9 7E          				ld			a,(hl)					; Acrive flag?
1189   09CA A7          				and			a
1190   09CB CA 61 0A    				jp			z,L0A61					; Jump to end if a==0
1191   09CE             
1192   09CE 23          				inc			hl							; +1
1193   09CF 46          				ld			b,(hl)					; Height
1194   09D0 23          				inc			hl							; +2
1195   09D1 23          				inc			hl							; +3
1196   09D2 5E          				ld			e,(hl)					; Screen loc low
1197   09D3 23          				inc			hl							; +4
1198   09D4 56          				ld			d,(hl)					; Screen loc high
1199   09D5 23          				inc			hl							; +5
1200   09D6 E5          				push		hl							; Store hl
1201   09D7             
1202   09D7 EB          				ex			de,hl						; hl = screen loc
1203   09D8 11 1F 00    				ld			de,$001F				; Row increment -1
1204   09DB             L09DB:
1205   09DB 72          				ld			(hl),d					; ==0
1206   09DC 23          				inc			hl
1207   09DD 72          				ld			(hl),d					; ==0
1208   09DE 19          				add			hl,de						; Next row
1209   09DF 05          				dec			b
1210   09E0 C2 DB 09    				jp			nz,L09DB				; Loop
1211   09E3 E1          				pop			hl
1212   09E4 C9          				ret
1213   09E5             
1214   09E5             				;; Erase small pylon at hl
1215   09E5             L09E5:
1216   09E5 7E          				ld			a,(hl)					; Active flag?
1217   09E6 A7          				and			a
1218   09E7 CA 61 0A    				jp			z,L0A61					; Jump to end if a==0
1219   09EA             
1220   09EA 23          				inc			hl							; +1
1221   09EB 7E          				ld			a,(hl)					; Loop counter
1222   09EC 23          				inc			hl							; +2
1223   09ED 23          				inc			hl							; +3
1224   09EE 5E          				ld			e,(hl)					; Screen loc low
1225   09EF 23          				inc			hl							; +4
1226   09F0 56          				ld			d,(hl)					; Screen log high
1227   09F1 23          				inc			hl							; +5
1228   09F2             
1229   09F2 EB          				ex			de,hl						; hl = screen loc
1230   09F3             L09F3:
1231   09F3 70          				ld			(hl),b					; b=0 (erase)
1232   09F4 09          				add			hl,bc						; bc = $0020 = line increment
1233   09F5 3D          				dec			a
1234   09F6 C2 F3 09    				jp			nz,L09F3				; Loop
1235   09F9 EB          				ex			de,hl						; Swap back
1236   09FA C9          				ret
1237   09FB             
1238   09FB             				;; Draw big pylon?
1239   09FB             L09FB:
1240   09FB 7E          				ld			a,(hl)					; Active flag
1241   09FC A7          				and			a
1242   09FD CA 61 0A    				jp			z,L0A61
1243   0A00             
1244   0A00 4F          				ld			c,a							; Width
1245   0A01 23          				inc			hl							; +1
1246   0A02 46          				ld			b,(hl)					; Height
1247   0A03 23          				inc			hl							; +2
1248   0A04 7E          				ld			a,(hl)					; Shift
1249   0A05 23          				inc			hl							; +3
1250   0A06 5E          				ld			e,(hl)					; Screen loc low
1251   0A07 23          				inc			hl							; +4
1252   0A08 56          				ld			d,(hl)					; Screen loc high
1253   0A09 23          				inc			hl							; +5
1254   0A0A E5          				push		hl
1255   0A0B             
1256   0A0B EB          				ex			de,hl						; hl = screen loc
1257   0A0C D3 04       				out			($04),a					; MB14241 Count
1258   0A0E AF          				xor			a
1259   0A0F D3 03       				out			($03),a					; MB14241 Data
1260   0A11             
1261   0A11             				;; set c LSBs in a
1262   0A11 57          				ld			d,a							; d=0
1263   0A12 E5          				push		hl
1264   0A13 59          				ld			e,c
1265   0A14 21 94 0A    				ld			hl,L0A94				; Table of bits
1266   0A17 19          				add			hl,de
1267   0A18 7E          				ld			a,(hl)
1268   0A19             
1269   0A19 D3 03       				out			($03),a					; MB14241 Data
1270   0A1B DB 03       				in			a,($03)					; MB14241 Result
1271   0A1D 4F          				ld			c,a
1272   0A1E AF          				xor			a
1273   0A1F D3 03       				out			($03),a					; MB14241 Data
1274   0A21 1E 1F       				ld			e,$1F						; Line increment (d=0)
1275   0A23 E1          				pop			hl
1276   0A24             
1277   0A24             L0A24:
1278   0A24 7E          				ld			a,(hl)					; Read screen
1279   0A25 B1          				or			c								; or w/ data
1280   0A26 77          				ld			(hl),a					; Store screen
1281   0A27 23          				inc			hl
1282   0A28 DB 03       				in			a,($03)					; MB14241 Result
1283   0A2A B6          				or			(hl)						; or w/ screen
1284   0A2B 77          				ld			(hl),a					; Store screen
1285   0A2C 19          				add			hl,de						; Next row
1286   0A2D 05          				dec			b
1287   0A2E C2 24 0A    				jp			nz,L0A24				; Loop
1288   0A31 E1          				pop			hl
1289   0A32 C9          				ret
1290   0A33             
1291   0A33             				;; Draw small pylon
1292   0A33             L0A33:
1293   0A33 7E          				ld			a,(hl)					; Active flag
1294   0A34 A7          				and			a
1295   0A35 CA 61 0A    				jp			z,L0A61					; Skip if inactive
1296   0A38             
1297   0A38 23          				inc			hl							; +1
1298   0A39 46          				ld			b,(hl)					; Height
1299   0A3A 23          				inc			hl							; +2
1300   0A3B 7E          				ld			a,(hl)					; Shift
1301   0A3C             
1302   0A3C D3 04       				out			($04),a					; MB14241 Count
1303   0A3E AF          				xor			a
1304   0A3F D3 03       				out			($03),a					; MB14241 Data
1305   0A41 3E 01       				ld			a,$01
1306   0A43 D3 03       				out			($03),a					; MB14241 Data
1307   0A45 DB 03       				in			a,($03)					; MB14241 Result
1308   0A47 4F          				ld			c,a							; Stash
1309   0A48 23          				inc			hl							; +3
1310   0A49 5E          				ld			e,(hl)					; Screen loc lo
1311   0A4A 23          				inc			hl							; +4
1312   0A4B 56          				ld			d,(hl)					; Screen loc hi
1313   0A4C 23          				inc			hl							; +5
1314   0A4D E5          				push		hl							; Store table
1315   0A4E EB          				ex			de,hl						; hl = screen address
1316   0A4F 11 20 00    				ld			de,$0020				; Line increment
1317   0A52             L0A52:
1318   0A52 7E          				ld			a,(hl)					; Load screen
1319   0A53 B1          				or			c								; or w/ data
1320   0A54 77          				ld			(hl),a					; Store screen
1321   0A55 19          				add			hl,de						; Next line
1322   0A56 05          				dec			b
1323   0A57 C2 52 0A    				jp			nz,L0A52				; Loop for height
1324   0A5A E1          				pop			hl							; Get table back
1325   0A5B C9          				ret
1326   0A5C             
1327   0A5C             				;; Draw pylon w/o or
1328   0A5C             L0A5C:
1329   0A5C 7E          				ld			a,(hl)
1330   0A5D A7          				and			a
1331   0A5E C2 66 0A    				jp			nz,L0A66				; Continue if active
1332   0A61             
1333   0A61             				;; End of routine
1334   0A61             				;; Go to next able entry and return
1335   0A61             L0A61:
1336   0A61 11 05 00    				ld			de,$0005
1337   0A64 19          				add			hl,de
1338   0A65 C9          				ret
1339   0A66             
1340   0A66             L0A66:
1341   0A66 4F          				ld			c,a							; Width
1342   0A67 23          				inc			hl							; +1
1343   0A68 46          				ld			b,(hl)					; Height
1344   0A69 23          				inc			hl							; +2
1345   0A6A 7E          				ld			a,(hl)					; Shift
1346   0A6B 23          				inc			hl							; +3
1347   0A6C 5E          				ld			e,(hl)					; Screen loc lo
1348   0A6D 23          				inc			hl							; +4
1349   0A6E 56          				ld			d,(hl)					; Screen low hi
1350   0A6F 23          				inc			hl							; +5
1351   0A70 E5          				push		hl							; Stash table
1352   0A71 D5          				push		de							; Stash screen loc
1353   0A72 D3 04       				out			($04),a					; MB14241 Count
1354   0A74 AF          				xor			a
1355   0A75 D3 03       				out			($03),a					; MB14241 Data
1356   0A77             
1357   0A77             					;; set c LSBs in a
1358   0A77 57          				ld			d,a							; d=0
1359   0A78 59          				ld			e,c							; e=width
1360   0A79 21 94 0A    				ld			hl,L0A94				; ??
1361   0A7C 19          				add			hl,de
1362   0A7D 7E          				ld			a,(hl)
1363   0A7E             
1364   0A7E D3 03       				out			($03),a					; MB14241 Data
1365   0A80 DB 03       				in			a,($03)					; MB14241 Result
1366   0A82 4F          				ld			c,a							; Result to c
1367   0A83 AF          				xor			a								; a=0
1368   0A84 D3 03       				out			($03),a					; MB14241 Data
1369   0A86 DB 03       				in			a,($03)					; MB14241 Result
1370   0A88 1E 1F       				ld			e,$1F						; Line inrement
1371   0A8A E1          				pop			hl
1372   0A8B             L0A8B:
1373   0A8B 71          				ld			(hl),c					; Write screen
1374   0A8C 23          				inc			hl
1375   0A8D 77          				ld			(hl),a					; a=0
1376   0A8E 19          				add			hl,de						; Next line
1377   0A8F 05          				dec			b
1378   0A90 C2 8B 0A    				jp			nz,L0A8B				; Loop for height
1379   0A93 E1          				pop			hl
1380   0A94             L0A94:
1381   0A94 C9          				ret
1382   0A95             
1383   0A95             				;; Data
1384   0A95             L0A95:
1385   0A95 01 03 07 0F 				.db			$01, $03, $07, $0f			; Bits walking from LSB
1386   0A99 1F 3F 7F FF 				.db			$1f, $3f, $7f, $ff			; 
1387   0A9D             
1388   0A9D             
1389   0A9D             L0A9D:
1390   0A9D CD AA 0A    				call		L0AAA
1391   0AA0 CD E8 0A    				call		L0AE8						; Draw big gfx
1392   0AA3 21 DA 06    				ld			hl,L06DA
1393   0AA6 E3          				ex			(sp),hl					; Set return address?
1394   0AA7 C3 31 08    				jp			L0831
1395   0AAA             
1396   0AAA             L0AAA:
1397   0AAA 21 4B 20    				ld			hl,$204B
1398   0AAD 35          				dec			(hl)
1399   0AAE F2 BA 0A    				jp			p,L0ABA
1400   0AB1             
1401   0AB1             				;; Get next 9-byte linked list
1402   0AB1 EB          				ex			de,hl						; de = $204B
1403   0AB2 2A 4D 20    				ld			hl,($204D)
1404   0AB5 06 09       				ld			b,$09
1405   0AB7 CD DF 0A    				call		L0ADF						; Copy (hl) to (de) b times
1406   0ABA             L0ABA:
1407   0ABA             				;; ($2054) += ($204C)
1408   0ABA 21 54 20    				ld			hl,$2054
1409   0ABD 3A 4C 20    				ld			a,($204C)
1410   0AC0 86          				add			a,(hl)
1411   0AC1 77          				ld			(hl),a
1412   0AC2             
1413   0AC2             				;; ($2055) &= $07
1414   0AC2 23          				inc			hl							; $2055
1415   0AC3 4F          				ld			c,a
1416   0AC4 E6 07       				and			$07
1417   0AC6 77          				ld			(hl),a
1418   0AC7             
1419   0AC7             				;; ($2056) = ($2055)>>3
1420   0AC7 23          				inc			hl							; $2056
1421   0AC8 79          				ld			a,c
1422   0AC9 0F          				rrca
1423   0ACA 0F          				rrca
1424   0ACB 0F          				rrca
1425   0ACC E6 1F       				and			$1F							; Mask low 5 bits (original high 5)
1426   0ACE C6 A0       				add			a,$A0
1427   0AD0 77          				ld			(hl),a
1428   0AD1             				
1429   0AD1 23          				inc			hl							; $2057
1430   0AD2 36 29       				ld			(hl),$29
1431   0AD4 21 4F 20    				ld			hl,$204F
1432   0AD7 35          				dec			(hl)
1433   0AD8 F0          				ret			p
1434   0AD9             
1435   0AD9             				;; (Get next part of linked list)
1436   0AD9 EB          				ex			de,hl						; de=$204F
1437   0ADA 2A 52 20    				ld			hl,($2052)
1438   0ADD 06 05       				ld			b,$05
1439   0ADF             
1440   0ADF             				;; Copy (hl) to (de) b times
1441   0ADF             L0ADF:
1442   0ADF 7E          				ld			a,(hl)
1443   0AE0 23          				inc			hl
1444   0AE1 12          				ld			(de),a
1445   0AE2 13          				inc			de
1446   0AE3 05          				dec			b
1447   0AE4 C2 DF 0A    				jp			nz,L0ADF
1448   0AE7 C9          				ret
1449   0AE8             
1450   0AE8             
1451   0AE8             				;; Draw big gfx
1452   0AE8             L0AE8:
1453   0AE8 2A 56 20    				ld			hl,($2056)			; Big gfx loc offset
1454   0AEB 7C          				ld			a,h
1455   0AEC B5          				or			l
1456   0AED C8          				ret			z								; Skip if hl == L0000
1457   0AEE             
1458   0AEE 2A 58 20    				ld			hl,($2058)			; Big gfx loc store
1459   0AF1 7C          				ld			a,h
1460   0AF2 B5          				or			l
1461   0AF3 CA 08 0B    				jp			z,L0B08					; Skip if hl == $0000
1462   0AF6             
1463   0AF6             				;; Erase big gfx
1464   0AF6 01 26 05    				ld			bc,$0526				; b = width, c = height
1465   0AF9 11 1B 00    				ld			de,$001B				; d = write val, e = $20-b
1466   0AFC             L0AFC:
1467   0AFC 78          				ld			a,b
1468   0AFD             L0AFD:
1469   0AFD 72          				ld			(hl),d					; (0) 
1470   0AFE 23          				inc			hl
1471   0AFF 3D          				dec			a
1472   0B00 C2 FD 0A    				jp			nz,L0AFD				; Loop for width
1473   0B03             				 
1474   0B03 19          				add			hl,de						; Next line 
1475   0B04 0D          				dec			c
1476   0B05 C2 FC 0A    				jp			nz,L0AFC				; Loop for height
1477   0B08             
1478   0B08             L0B08:
1479   0B08 2A 4D 20    				ld			hl,($204D)
1480   0B0B 7C          				ld			a,h
1481   0B0C B5          				or			l
1482   0B0D C2 18 0B    				jp			nz,L0B18				; Draw if hl != $0000 
1483   0B10             
1484   0B10 3E 01       				ld			a,$01
1485   0B12 32 22 20    				ld			($2022),a				; Game state
1486   0B15 C3 52 0B    				jp			L0B52						; Draw pylons only 
1487   0B18             
1488   0B18             				;; Draw large gfx
1489   0B18             L0B18:
1490   0B18 2A 50 20    				ld			hl,($2050)
1491   0B1B 4E          				ld			c,(hl)					; Width 
1492   0B1C 23          				inc			hl
1493   0B1D 46          				ld			b,(hl)					; Height 
1494   0B1E 23          				inc			hl
1495   0B1F 5E          				ld			e,(hl)					; Initial loc lo 
1496   0B20 23          				inc			hl
1497   0B21 56          				ld			d,(hl)					; Initial loc hi 
1498   0B22 23          				inc			hl
1499   0B23 E5          				push		hl							; Data ptr 
1500   0B24 2A 56 20    				ld			hl,($2056)			; Loc offset 
1501   0B27 19          				add			hl,de
1502   0B28 22 58 20    				ld			($2058),hl			; Loc store 
1503   0B2B 3A 55 20    				ld			a,($2055)				; Big sprite shift 
1504   0B2E D3 04       				out			($04),a					; MB14241 Count
1505   0B30 AF          				xor			a
1506   0B31 D3 03       				out			($03),a					; MB14241 Data
1507   0B33 D1          				pop			de							; Data ptr 
1508   0B34             L0B34:
1509   0B34 C5          				push		bc
1510   0B35 E5          				push		hl
1511   0B36             L0B36:
1512   0B36 1A          				ld			a,(de)					; Read table
1513   0B37 13          				inc			de
1514   0B38 D3 03       				out			($03),a					; MB14241 Data
1515   0B3A DB 03       				in			a,($03)					; MB14241 Result
1516   0B3C 77          				ld			(hl),a					; Write to screen 
1517   0B3D 23          				inc			hl
1518   0B3E 0D          				dec			c
1519   0B3F C2 36 0B    				jp			nz,L0B36				; Loop for width 
1520   0B42 AF          				xor			a
1521   0B43 D3 03       				out			($03),a					; MB14241 Data
1522   0B45 DB 03       				in			a,($03)					; MB14241 Result
1523   0B47 77          				ld			(hl),a					; Final write 
1524   0B48 01 20 00    				ld			bc,$0020				; Line increment 
1525   0B4B E1          				pop			hl
1526   0B4C 09          				add			hl,bc
1527   0B4D C1          				pop			bc
1528   0B4E 05          				dec			b
1529   0B4F C2 34 0B    				jp			nz,L0B34				; Loop for height
1530   0B52             
1531   0B52             				;; Draw pylons
1532   0B52             L0B52:
1533   0B52 2A 25 20    				ld			hl,($2025)
1534   0B55 11 3C 00    				ld			de,$003C				; = $0c x $05 
1535   0B58 19          				add			hl,de
1536   0B59 CD FB 09    				call		L09FB						; Draw big pylon 
1537   0B5C CD FB 09    				call		L09FB						; Draw big pylon
1538   0B5F C9          				ret
1539   0B60             
1540   0B60             					
1541   0B60 7F          				ld			a,a							; Garbage byte? 
1542   0B61             		
1543   0B61             L0B61:
1544   0B61 01 00 FF    				ld			bc,$FF00
1545   0B64 31 05 20    				ld			sp,$2005
1546   0B67 CD 62 01    				call		L0162						; Write c to $4000 b*32 times
1547   0B6A 31 00 24    				ld			sp,$2400
1548   0B6D CD AF 10    				call		L10AF
1549   0B70 21 FF FF    				ld			hl,$FFFF
1550   0B73 22 09 20    				ld			($2009),hl
1551   0B76 22 0B 20    				ld			($200B),hl
1552   0B79 CD B3 0E    				call		L0EB3
1553   0B7C FB          				ei
1554   0B7D C3 1F 0E    				jp			L0E1F
1555   0B80             
1556   0B80             L0B80:
1557   0B80 D3 07       				out			($07),a					; Watchdog
1558   0B82 21 21 20    				ld			hl,$2021				; Coin flag
1559   0B85 7E          				ld			a,(hl)
1560   0B86 A7          				and			a
1561   0B87 CA B8 0B    				jp			z,L0BB8					; No coin
1562   0B8A             
1563   0B8A AF          				xor			a
1564   0B8B 77          				ld			(hl),a					; Clear coin flag
1565   0B8C 47          				ld			b,a							; b=0
1566   0B8D 3E 0A       				ld			a,$0A
1567   0B8F 32 2E 20    				ld			($202E),a				; Audio port 2 timer
1568   0B92 3E 22       				ld			a,$22
1569   0B94 D3 05       				out			($05),a					; Audio Port 2
1570   0B96 DB 02       				in			a,($02)					; IN2 
1571   0B98 07          				rlca										; 65432107
1572   0B99 E6 06       				and			$06							; Mask DIPS <1:0> = Coinage
1573   0B9B 4F          				ld			c,a
1574   0B9C 21 CF 0F    				ld			hl,L0FCF				; Coinage Table 
1575   0B9F 09          				add			hl,bc
1576   0BA0             
1577   0BA0             				;; Get de from table 
1578   0BA0 5E          				ld			e,(hl)					; Coins needed
1579   0BA1 23          				inc			hl
1580   0BA2 56          				ld			d,(hl)					; Credits
1581   0BA3             
1582   0BA3 21 2F 20    				ld			hl,$202F				; Coins
1583   0BA6 34          				inc			(hl)
1584   0BA7 7E          				ld			a,(hl)
1585   0BA8 BB          				cp			e
1586   0BA9 C2 B8 0B    				jp			nz,L0BB8				; Not enough coins
1587   0BAC             				 
1588   0BAC 70          				ld			(hl),b					; b=($2021)
1589   0BAD 23          				inc			hl							; Credits
1590   0BAE 7E          				ld			a,(hl)
1591   0BAF 82          				add			a,d							; Add credits
1592   0BB0 77          				ld			(hl),a					; Store
1593   0BB1             
1594   0BB1 3A 23 20    				ld			a,($2023)
1595   0BB4 A7          				and			a
1596   0BB5 CA 2A 0C    				jp			z,L0C2A					; Skip if 0
1597   0BB8             
1598   0BB8             L0BB8:
1599   0BB8 CD 0F 10    				call		L100F
1600   0BBB 3A 23 20    				ld			a,($2023)
1601   0BBE A7          				and			a
1602   0BBF CA 21 0C    				jp			z,L0C21
1603   0BC2             
1604   0BC2 21 41 20    				ld			hl,$2041
1605   0BC5 7E          				ld			a,(hl)
1606   0BC6 A7          				and			a
1607   0BC7 C2 12 0C    				jp			nz,L0C12
1608   0BCA 36 3C       				ld			(hl),$3C
1609   0BCC 21 34 20    				ld			hl,$2034
1610   0BCF 35          				dec			(hl)
1611   0BD0 21 42 20    				ld			hl,$2042
1612   0BD3 7E          				ld			a,(hl)
1613   0BD4 C6 99       				add			a,$99
1614   0BD6 27          				daa
1615   0BD7 77          				ld			(hl),a
1616   0BD8 C2 0F 0C    				jp			nz,L0C0F
1617   0BDB 3A 23 20    				ld			a,($2023)
1618   0BDE EE 03       				xor			$03
1619   0BE0 CA B6 0D    				jp			z,L0DB6
1620   0BE3             
1621   0BE3 DB 02       				in			a,($02)					; IN2
1622   0BE5 0F          				rrca
1623   0BE6 0F          				rrca
1624   0BE7 0F          				rrca
1625   0BE8 E6 06       				and			$06							; Was bits 5,4
1626   0BEA 4F          				ld			c,a
1627   0BEB 06 00       				ld			b,$00
1628   0BED 21 1D 00    				ld			hl,L001D				; Index into table 
1629   0BF0 09          				add			hl,bc
1630   0BF1 4E          				ld			c,(hl)					; (Score for extended play)
1631   0BF2 21 3E 20    				ld			hl,$203E				; Score 
1632   0BF5 7E          				ld			a,(hl)
1633   0BF6 E6 F0       				and			$F0							; Mask 2nd nybble 
1634   0BF8 2B          				dec			hl
1635   0BF9 86          				add			a,(hl)					; Get 3rd nybble 
1636   0BFA 0F          				rrca										; Rotate 
1637   0BFB 0F          				rrca
1638   0BFC 0F          				rrca
1639   0BFD 0F          				rrca
1640   0BFE B9          				cp			c								; Compare to table value 
1641   0BFF DA B6 0D    				jp			c,L0DB6
1642   0C02 3E 03       				ld			a,$03
1643   0C04 32 23 20    				ld			($2023),a
1644   0C07 3A 44 20    				ld			a,($2044)
1645   0C0A 32 42 20    				ld			($2042),a
1646   0C0D F7          				rst			$30
1647   0C0E 81          				.db			$81							; Argument for rst $30
1648   0C0F             
1649   0C0F             L0C0F:
1650   0C0F CD F1 0F    				call		L0FF1						; Update time
1651   0C12             L0C12:
1652   0C12 21 23 20    				ld			hl,$2023
1653   0C15 7E          				ld			a,(hl)
1654   0C16 FE 01       				cp			$01
1655   0C18 C0          				ret			nz
1656   0C19 3A 3D 20    				ld			a,($203D)				; Player score
1657   0C1C FE 01       				cp			$01
1658   0C1E D8          				ret			c
1659   0C1F 34          				inc			(hl)
1660   0C20 C9          				ret
1661   0C21             		
1662   0C21             				;; Chekc start botton
1663   0C21             L0C21:
1664   0C21 CD 88 10    				call		L1088						; Kick PRNG, get #
1665   0C24 3A 45 20    				ld			a,($2045)				; IN 0 store
1666   0C27 E6 80       				and			$80							; Mask Start
1667   0C29 C0          				ret			nz							; Not pressed
1668   0C2A             
1669   0C2A             L0C2A:
1670   0C2A 21 30 20    				ld			hl,$2030				; Credits
1671   0C2D 7E          				ld			a,(hl)
1672   0C2E A7          				and			a
1673   0C2F C8          				ret			z								; No credits
1674   0C30             
1675   0C30 35          				dec			(hl)						; Decrenent credits
1676   0C31             
1677   0C31             				;; Go to game mode
1678   0C31 31 00 24    				ld			sp,$2400				; Rwset stack pointer
1679   0C34 AF          				xor			a
1680   0C35 32 22 20    				ld			($2022),a				; Leave Attract mode state
1681   0C38             
1682   0C38             				;; Copy score to previous
1683   0C38 2A 3D 20    				ld			hl,($203D)			; Player score
1684   0C3B 22 29 20    				ld			($2029),hl			; Previous score
1685   0C3E             
1686   0C3E             				;; Clear $2032-2057
1687   0C3E 11 32 20    				ld			de,$2032
1688   0C41 06 28       				ld			b,$28
1689   0C43             L0C43:
1690   0C43 12          				ld			(de),a
1691   0C44 13          				inc			de
1692   0C45 05          				dec			b
1693   0C46 C2 43 0C    				jp			nz,L0C43
1694   0C49             
1695   0C49 67          				ld			h,a							; h=a=0
1696   0C4A DB 02       				in			a,($02)					; IN2
1697   0C4C 0F          				rrca										; 07654321
1698   0C4D E6 06       				and			$06							; Mask game time
1699   0C4F 6F          				ld			l,a
1700   0C50 11 D7 0F    				ld			de,$0FD7				; Game time table
1701   0C53 19          				add			hl,de
1702   0C54 7E          				ld			a,(hl)					; Get game time
1703   0C55 32 42 20    				ld			($2042),a				; Tore game time
1704   0C58 23          				inc			hl
1705   0C59 7E          				ld			a,(hl)					; Get bonus time
1706   0C5A 32 44 20    				ld			($2044),a				; Store bonus time
1707   0C5D 3E 00       				ld			a,$00
1708   0C5F 32 2D 20    				ld			($202D),a				; Audio port 2 default
1709   0C62 3E 20       				ld			a,$20
1710   0C64 D3 02       				out			($02),a					; Sound Port 1
1711   0C66 CD 98 0E    				call		L0E98
1712   0C69             
1713   0C69 3E 01       				ld			a,$01
1714   0C6B 32 23 20    				ld			($2023),a
1715   0C6E 3E FF       				ld			a,$FF						; Time value
1716   0C70 32 41 20    				ld			($2041),a				; Set timer
1717   0C73 3E F8       				ld			a,$F8
1718   0C75 32 48 20    				ld			($2048),a
1719   0C78 DB 00       				in			a,($00)					; IN0
1720   0C7A E6 10       				and			$10							; Mask shifter 
1721   0C7C CA 81 0C    				jp			z,L0C81
1722   0C7F             
1723   0C7F F7          				rst			$30							; Add string to table
1724   0C80 65          				.db			$65							; Argument for rst $30
1725   0C81             
1726   0C81             
1727   0C81             L0C81:
1728   0C81 EF          				rst			$28							; (call L0F16)
1729   0C82 04          				.db			$04							; Data for $0F16
1730   0C83             
1731   0C83 21 0B 04    				ld			hl,L040B				; Table address
1732   0C86 22 4D 20    				ld			($204D),hl			; Write table address
1733   0C89 3E E0       				ld			a,$E0
1734   0C8B 32 54 20    				ld			($2054),a
1735   0C8E 3E FF       				ld			a,$FF
1736   0C90 32 22 20    				ld			($2022),a				; Game state
1737   0C93 EF          				rst			$28							; (call L0F16)
1738   0C94 E8          				.db			$E8							; Data for $0F16
1739   0C95             
1740   0C95             L0C95:
1741   0C95 CD 80 0B    				call		L0B80
1742   0C98 21 40 21    				ld			hl,$2140
1743   0C9B 7E          				ld			a,(hl)
1744   0C9C 23          				inc			hl
1745   0C9D B6          				or			(hl)
1746   0C9E CA B0 0C    				jp			z,L0CB0
1747   0CA1 3A 3E 21    				ld			a,($213E)
1748   0CA4 A7          				and			a
1749   0CA5 CA B0 0C    				jp			z,L0CB0
1750   0CA8 CD 33 0F    				call		L0F33
1751   0CAB 04 00       				.db			$04, $00				; Data for $0F33
1752   0CAD             
1753   0CAD C3 B5 0C    				jp			L0CB5
1754   0CB0             
1755   0CB0             L0CB0:
1756   0CB0 CD 33 0F    				call		L0F33
1757   0CB3 00 00       				.db			$00, $00				; Data for $0F33
1758   0CB5             
1759   0CB5             L0CB5:
1760   0CB5 21 22 20    				ld			hl,$2022				; Game state
1761   0CB8 7E          				ld			a,(hl)
1762   0CB9 EE 05       				xor			$05
1763   0CBB C2 C7 0C    				jp			nz,L0CC7
1764   0CBE             
1765   0CBE             				;; ($2022) == $05
1766   0CBE 3A 40 20    				ld			a,($2040)
1767   0CC1 A7          				and			a
1768   0CC2 C2 C7 0C    				jp			nz,L0CC7				; Timer non-zero
1769   0CC5             
1770   0CC5 36 01       				ld			(hl),$01				; Set timer ot 1
1771   0CC7             
1772   0CC7             L0CC7:
1773   0CC7 7E          				ld			a,(hl)
1774   0CC8 EE 02       				xor			$02
1775   0CCA CA 59 0E    				jp			z,L0E59
1776   0CCD             
1777   0CCD             				;; ($2022) !- $02
1778   0CCD 21 48 20    				ld			hl,$2048
1779   0CD0 7E          				ld			a,(hl)
1780   0CD1 A7          				and			a
1781   0CD2 FA EE 0C    				jp			m,L0CEE
1782   0CD5 36 F8       				ld			(hl),$F8
1783   0CD7 2A 32 20    				ld			hl,($2032)
1784   0CDA 23          				inc			hl
1785   0CDB 22 32 20    				ld			($2032),hl
1786   0CDE             
1787   0CDE             				;; Increment score
1788   0CDE 21 3E 20    				ld			hl,$203E				; Score
1789   0CE1 7E          				ld			a,(hl)
1790   0CE2 C6 01       				add			a,$01
1791   0CE4 27          				daa
1792   0CE5 77          				ld			(hl),a
1793   0CE6 D2 EB 0C    				jp			nc,L0CEB
1794   0CE9 2B          				dec			hl							; Handle 3rd digit
1795   0CEA 34          				inc			(hl)
1796   0CEB             
1797   0CEB             L0CEB:
1798   0CEB CD DF 0F    				call		L0FDF						; Update score
1799   0CEE             L0CEE:
1800   0CEE CD 77 0D    				call		L0D77
1801   0CF1 3A 37 20    				ld			a,($2037)
1802   0CF4 CD 87 08    				call		L0887						; Complement a if positive
1803   0CF7 0F          				rrca
1804   0CF8 0F          				rrca
1805   0CF9 0F          				rrca
1806   0CFA 0F          				rrca
1807   0CFB E6 03       				and			$03
1808   0CFD C6 10       				add			a,$10
1809   0CFF CD 48 0F    				call		L0F48
1810   0D02             
1811   0D02 3A 45 20    				ld			a,($2045)
1812   0D05 47          				ld			b,a
1813   0D06 E6 0F       				and			$0F
1814   0D08 57          				ld			d,a
1815   0D09 07          				rlca
1816   0D0A 4F          				ld			c,a
1817   0D0B 07          				rlca
1818   0D0C 81          				add			a,c
1819   0D0D 4F          				ld			c,a
1820   0D0E 78          				ld			a,b
1821   0D0F E6 10       				and			$10
1822   0D11 3A 3E 21    				ld			a,($213E)
1823   0D14 CA 39 0D    				jp			z,L0D39
1824   0D17 FE 28       				cp			$28
1825   0D19 D2 27 0D    				jp			nc,L0D27
1826   0D1C             
1827   0D1C F7          				rst			$30
1828   0D1D 65          				.db			$65							; Argument for rst $30
1829   0D1E             
1830   0D1E 0E 00       				ld			c,$00
1831   0D20 3E 20       				ld			a,$20
1832   0D22 D3 02       				out			($02),a					; Sound Port 1
1833   0D24 C3 4F 0D    				jp			L0D4F
1834   0D27             L0D27:
1835   0D27 79          				ld			a,c
1836   0D28 07          				rlca
1837   0D29 4F          				ld			c,a
1838   0D2A 7A          				ld			a,d
1839   0D2B F6 10       				or			$10
1840   0D2D D3 02       				out			($02),a					; Sound Port 1
1841   0D2F 3E 01       				ld			a,$01
1842   0D31 32 5A 20    				ld			($205A),a
1843   0D34 F7          				rst			$30
1844   0D35 60          				.db			$60							; Argument for rst $30
1845   0D36             
1846   0D36 C3 4F 0D    				jp			L0D4F
1847   0D39             L0D39:
1848   0D39 FE 28       				cp			$28
1849   0D3B DA 43 0D    				jp			c,L0D43
1850   0D3E F7          				rst			$30
1851   0D3F 66          				.db			$66							; Argument for rst $30
1852   0D40             
1853   0D40 C3 45 0D    				jp			L0D45
1854   0D43             L0D43:
1855   0D43 F7          				rst			$30
1856   0D44 60          				.db			$60							; Argument for rst $30
1857   0D45             
1858   0D45             L0D45:
1859   0D45 7A          				ld			a,d
1860   0D46 F6 20       				or			$20
1861   0D48 D3 02       				out			($02),a					; Sound Port 1
1862   0D4A 3E 02       				ld			a,$02
1863   0D4C 32 5A 20    				ld			($205A),a
1864   0D4F             L0D4F:
1865   0D4F 79          				ld			a,c
1866   0D50 32 3F 21    				ld			($213F),a
1867   0D53 3A 46 20    				ld			a,($2046)
1868   0D56 CD 60 0D    				call		L0D60
1869   0D59 2F          				cpl
1870   0D5A 32 3A 20    				ld			($203A),a
1871   0D5D C3 95 0C    				jp			L0C95
1872   0D60             L0D60:
1873   0D60 3A 46 20    				ld			a,($2046)
1874   0D63 2F          				cpl
1875   0D64 C6 81       				add			a,$81
1876   0D66 FE 81       				cp			$81
1877   0D68 DA 71 0D    				jp			c,L0D71
1878   0D6B FE C0       				cp			$C0
1879   0D6D D0          				ret			nc
1880   0D6E 3E C0       				ld			a,$C0
1881   0D70 C9          				ret
1882   0D71             L0D71:
1883   0D71 FE 40       				cp			$40
1884   0D73 D8          				ret			c
1885   0D74 3E 3F       				ld			a,$3F
1886   0D76 C9          				ret
1887   0D77             L0D77:
1888   0D77 3A 3E 21    				ld			a,($213E)
1889   0D7A 47          				ld			b,a
1890   0D7B 0F          				rrca
1891   0D7C 0F          				rrca
1892   0D7D 0F          				rrca
1893   0D7E E6 1F       				and			$1F
1894   0D80 2F          				cpl
1895   0D81 3C          				inc			a
1896   0D82 80          				add			a,b
1897   0D83 21 42 21    				ld			hl,$2142
1898   0D86 BE          				cp			(hl)
1899   0D87 C8          				ret			z
1900   0D88 DA 8F 0D    				jp			c,L0D8F
1901   0D8B 34          				inc			(hl)
1902   0D8C C3 90 0D    				jp			L0D90
1903   0D8F             L0D8F:
1904   0D8F 35          				dec			(hl)
1905   0D90             L0D90:
1906   0D90 7E          				ld			a,(hl)
1907   0D91 0F          				rrca
1908   0D92 0F          				rrca
1909   0D93 0F          				rrca
1910   0D94 E6 1F       				and			$1F
1911   0D96 C6 A5       				add			a,$A5
1912   0D98 5F          				ld			e,a
1913   0D99 16 39       				ld			d,$39
1914   0D9B 7E          				ld			a,(hl)
1915   0D9C E6 07       				and			$07
1916   0D9E 4F          				ld			c,a
1917   0D9F 06 00       				ld			b,$00
1918   0DA1 21 95 0A    				ld			hl,L0A95
1919   0DA4 09          				add			hl,bc
1920   0DA5 7E          				ld			a,(hl)
1921   0DA6 2F          				cpl
1922   0DA7 EB          				ex			de,hl
1923   0DA8 0E 1F       				ld			c,$1F
1924   0DAA 11 FF 04    				ld			de,$04FF
1925   0DAD             L0DAD:
1926   0DAD 77          				ld			(hl),a
1927   0DAE 23          				inc			hl
1928   0DAF 73          				ld			(hl),e
1929   0DB0 09          				add			hl,bc
1930   0DB1 15          				dec			d
1931   0DB2 C2 AD 0D    				jp			nz,L0DAD
1932   0DB5 C9          				ret
1933   0DB6             
1934   0DB6             L0DB6:
1935   0DB6 31 00 24    				ld			sp,$2400
1936   0DB9 3E 04       				ld			a,$04
1937   0DBB 32 22 20    				ld			($2022),a				; Game state
1938   0DBE CD 4B 0E    				call		L0E4B
1939   0DC1 32 23 20    				ld			($2023),a
1940   0DC4 CD F1 0F    				call		L0FF1						; Update time
1941   0DC7 CD 44 0F    				call		L0F44
1942   0DCA 09          				.db			$09							; Data for $0F44
1943   0DCB 2A 2B 20    				ld			hl,($202B)			; High score
1944   0DCE EB          				ex			de,hl
1945   0DCF 2A 3D 20    				ld			hl,($203D)			; Player score
1946   0DD2 7D          				ld			a,l
1947   0DD3 BB          				cp			e
1948   0DD4 DA EF 0D    				jp			c,L0DEF
1949   0DD7 C2 DF 0D    				jp			nz,L0DDF
1950   0DDA 7A          				ld			a,d
1951   0DDB BC          				cp			h
1952   0DDC D2 EF 0D    				jp			nc,L0DEF
1953   0DDF             
1954   0DDF             L0DDF:
1955   0DDF 22 2B 20    				ld			($202B),hl			; High score
1956   0DE2 CD 57 00    				call		L0057						; White out bottom 40 rows
1957   0DE5 CD 5A 0F    				call		L0F5A
1958   0DE8 6F          				.db			$6f							; Data for $0F5A -- Loc 3, String F
1959   0DE9             
1960   0DE9 CD 5A 0F    				call		L0F5A
1961   0DEC 84          				.db			$84							; Data for $0F5A -- Loc 4, String 4
1962   0DED             
1963   0DED EF          				rst			$28							; (Call $0F16)
1964   0DEE FF          				.db			$ff							; Data for $0F16
1965   0DEF             
1966   0DEF             L0DEF:
1967   0DEF CD 57 00    				call		L0057						; White out bottom 40 rows
1968   0DF2 CD 5A 0F    				call		L0F5A
1969   0DF5 62          				.db			$62							; Data for $0F5A -- Loc 3, String 2
1970   0DF6             
1971   0DF6 3A 34 20    				ld			a,($2034)
1972   0DF9 4F          				ld			c,a
1973   0DFA 06 FF       				ld			b,$FF
1974   0DFC 58          				ld			e,b
1975   0DFD 2A 32 20    				ld			hl,($2032)
1976   0E00             L0E00:
1977   0E00 7C          				ld			a,h
1978   0E01 A7          				and			a
1979   0E02 FA 0A 0E    				jp			m,L0E0A
1980   0E05             
1981   0E05 09          				add			hl,bc
1982   0E06 1C          				inc			e
1983   0E07 C3 00 0E    				jp			L0E00						; Loop back
1984   0E0A             
1985   0E0A             L0E0A:
1986   0E0A 3A 35 20    				ld			a,($2035)
1987   0E0D A7          				and			a
1988   0E0E 7B          				ld			a,e
1989   0E0F C2 13 0E    				jp			nz,L0E13
1990   0E12             
1991   0E12 3C          				inc			a
1992   0E13             L0E13:
1993   0E13 C6 94       				add			a,$94						; Loc 4, String $14+a (rating)
1994   0E15 CD 5E 0F    				call		L0F5E						; String @ loc from a
1995   0E18             
1996   0E18 EF          				rst			$28							; (call		L0F16)
1997   0E19 FF          				.db			$ff							; Data for $0F16
1998   0E1A             
1999   0E1A EF          				rst			$28							; (call		L0F16)
2000   0E1B FF          				.db			$ff							; Data for $0F16
2001   0E1C             
2002   0E1C             L0E1C:
2003   0E1C CD B3 0E    				call		L0EB3
2004   0E1F             L0E1F:
2005   0E1F 3E 0A       				ld			a,$0A
2006   0E21 32 31 20    				ld			($2031),a
2007   0E24             L0E24:
2008   0E24 CD 4B 0E    				call		L0E4B
2009   0E27 3A 30 20    				ld			a,($2030)
2010   0E2A A7          				and			a
2011   0E2B CA 35 0E    				jp			z,L0E35
2012   0E2E CD 44 0F    				call		L0F44
2013   0E31 08          				.db			$08							; Data for $0F44
2014   0E32             
2015   0E32 C3 39 0E    				jp			L0E39
2016   0E35             
2017   0E35             L0E35:
2018   0E35 CD 44 0F    				call		L0F44
2019   0E38 07          				.db			$07							; Data for $0F44
2020   0E39             
2021   0E39             L0E39:
2022   0E39 EF          				rst			$28							; (call		L0F16)
2023   0E3A FF          				.db			$ff							; Data for $0F16
2024   0E3B             
2025   0E3B CD 44 0F    				call		L0F44
2026   0E3E 0E          				.db			$0e							; Data for $0F44
2027   0E3F             
2028   0E3F EF          				rst			$28							; (call		L0F16)
2029   0E40 FF          				.db			$ff							; Data for $0F16
2030   0E41             
2031   0E41 21 31 20    				ld			hl,$2031
2032   0E44 35          				dec			(hl)
2033   0E45 C2 24 0E    				jp			nz,L0E24
2034   0E48 C3 1C 0E    				jp			L0E1C
2035   0E4B             
2036   0E4B             
2037   0E4B             L0E4B:
2038   0E4B CD 33 0F    				call		L0F33
2039   0E4E 02 00       				.db			$02, $00				; Data for $0F33
2040   0E50 3E 02       				ld			a,$02
2041   0E52 32 2D 20    				ld			($202D),a				; Audio port 2 default
2042   0E55 AF          				xor			a
2043   0E56 D3 02       				out			($02),a					; Sound Port 1
2044   0E58 C9          				ret
2045   0E59             
2046   0E59             
2047   0E59             				;; ($2022) == $02
2048   0E59             L0E59:
2049   0E59 31 00 24    				ld			sp,$2400
2050   0E5C CD 33 0F    				call		L0F33
2051   0E5F 03 3C       				.db			$03, $3c				; Data for $0F33
2052   0E61             
2053   0E61 CD C4 03    				call		L03C4						; Draw crash message
2054   0E64 21 35 20    				ld			hl,$2035
2055   0E67 34          				inc			(hl)
2056   0E68 CD 28 0F    				call		L0F28
2057   0E6B AF          				xor			a
2058   0E6C D3 02       				out			($02),a					; Sound Port 1
2059   0E6E CD 33 0F    				call		 L0F33
2060   0E71 02 0A       				.db			$02, $0a				; Data for $0F33
2061   0E73             
2062   0E73 CD 28 0F    				call		L0F28
2063   0E76 CD 33 0F    				call		L0F33
2064   0E79 0A 50       				.db			$0a, $50				; Data for $0F33
2065   0E7B             
2066   0E7B CD 28 0F    				call		L0F28
2067   0E7E CD 98 0E    				call		L0E98
2068   0E81 3A 23 20    				ld			a,($2023)
2069   0E84 FE 01       				cp			$01
2070   0E86 3E FF       				ld			a,$FF
2071   0E88 CA 8D 0E    				jp			z,L0E8D
2072   0E8B 3E 78       				ld			a,$78
2073   0E8D             L0E8D:
2074   0E8D 32 40 20    				ld			($2040),a
2075   0E90 3E 05       				ld			a,$05
2076   0E92 32 22 20    				ld			($2022),a				; Game state
2077   0E95 C3 95 0C    				jp			L0C95
2078   0E98             
2079   0E98             L0E98:
2080   0E98 CD DE 0E    				call		L0EDE
2081   0E9B CD 5A 0F    				call		L0F5A
2082   0E9E 4B          				.db			$4b							; Data for $0F5A -- Loc 2, String 0B
2083   0E9F CD F1 0F    				call		L0FF1						; Update time
2084   0EA2 CD DF 0F    				call		L0FDF						; Update score
2085   0EA5 3E 01       				ld			a,$01
2086   0EA7 32 22 20    				ld			($2022),a				; Game state
2087   0EAA 3A 23 20    				ld			a,($2023)
2088   0EAD EE 03       				xor			$03
2089   0EAF C0          				ret			nz
2090   0EB0 F7          				rst			$30
2091   0EB1 81          				.db			$81							; Argument for rst $30
2092   0EB2             
2093   0EB2 C9          				ret
2094   0EB3             
2095   0EB3             L0EB3:
2096   0EB3 CD DE 0E    				call		L0EDE
2097   0EB6 CD 5A 0F    				call		L0F5A
2098   0EB9 43          				.db			$43							; Data for $0F5A -- Loc 2, String 03
2099   0EBA             
2100   0EBA F7          				rst			$30
2101   0EBB 6C          				.db			$6c							; Argument for rst $30 
2102   0EBC             
2103   0EBC F7          				rst			$30
2104   0EBD 8D          				.db			$8d							; Argument for rst $30 
2105   0EBE             
2106   0EBE CD DF 0F    				call		L0FDF						; Update score
2107   0EC1 21 2B 20    				ld			hl,$202B				; High score
2108   0EC4 11 B9 3C    				ld			de,$3CB9				; Screen loc
2109   0EC7 CD E5 0F    				call		L0FE5						; Draw high score
2110   0ECA 21 29 20    				ld			hl,$2029				; Previous score
2111   0ECD 11 99 3E    				ld			de,$3E99				; Screen loc
2112   0ED0 CD E5 0F    				call		L0FE5						; Draw previous score
2113   0ED3 3E 03       				ld			a,$03
2114   0ED5 32 22 20    				ld			($2022),a				; Game state
2115   0ED8 3E 50       				ld			a,$50
2116   0EDA 32 3F 21    				ld			($213F),a
2117   0EDD C9          				ret
2118   0EDE             L0EDE:
2119   0EDE AF          				xor			a
2120   0EDF 32 22 20    				ld			($2022),a				; Game state
2121   0EE2 CD 5F 01    				call		L015F						; Clear screen 
2122   0EE5 01 FF 14    				ld			bc,$14FF
2123   0EE8 11 80 3A    				ld			de,$3A80
2124   0EEB CD 65 01    				call		L0165						; Write c to de b*16 times.
2125   0EEE 21 5A 20    				ld			hl,$205A
2126   0EF1 0E EA       				ld			c,$EA
2127   0EF3 AF          				xor			a
2128   0EF4             L0EF4:
2129   0EF4 77          				ld			(hl),a
2130   0EF5 23          				inc			hl
2131   0EF6 0D          				dec			c
2132   0EF7 C2 F4 0E    				jp			nz,L0EF4
2133   0EFA 3E 01       				ld			a,$01
2134   0EFC 32 5A 20    				ld			($205A),a
2135   0EFF 21 62 20    				ld			hl,$2062
2136   0F02 22 27 20    				ld			($2027),hl
2137   0F05 21 D0 20    				ld			hl,$20D0
2138   0F08 22 25 20    				ld			($2025),hl
2139   0F0B 21 80 00    				ld			hl,$0080
2140   0F0E 22 00 20    				ld			($2000),hl
2141   0F11 CD 5A 0F    				call		L0F5A
2142   0F14 2A          				.db			$2a							; Data for $0F5A -- Loc 1, String 0A
2143   0F15             
2144   0F15 C9          				ret
2145   0F16             
2146   0F16             				;; Get argument from call
2147   0F16             				;; Actual rst $28
2148   0F16             L0F16:
2149   0F16 E3          				ex			(sp),hl
2150   0F17 7E          				ld			a,(hl)
2151   0F18 23          				inc			hl
2152   0F19 E3          				ex			(sp),hl
2153   0F1A             
2154   0F1A 32 3F 20    				ld			($203F),a				; Timer
2155   0F1D             L0F1D:
2156   0F1D CD 80 0B    				call		L0B80
2157   0F20 3A 3F 20    				ld			a,($203F)
2158   0F23 A7          				and			a
2159   0F24 C2 1D 0F    				jp			nz,L0F1D
2160   0F27 C9          				ret
2161   0F28             
2162   0F28             L0F28:
2163   0F28 CD 80 0B    				call		L0B80
2164   0F2B 3A 2E 20    				ld			a,($202E)				; Audio port 2 timer
2165   0F2E A7          				and			a
2166   0F2F C2 28 0F    				jp			nz,L0F28				; Loop until timer clear
2167   0F32 C9          				ret
2168   0F33             
2169   0F33             				;; Get bc from calling address
2170   0F33             L0F33:
2171   0F33 E3          				ex			(sp),hl
2172   0F34 4E          				ld			c,(hl)
2173   0F35 23          				inc			hl
2174   0F36 46          				ld			b,(hl)
2175   0F37 23          				inc			hl
2176   0F38 E3          				ex			(sp),hl
2177   0F39             
2178   0F39 21 2E 20    				ld			hl,$202E				; Audio port 2 timer
2179   0F3C 7E          				ld			a,(hl)
2180   0F3D A7          				and			a
2181   0F3E C0          				ret			nz							; Skip if active
2182   0F3F             
2183   0F3F 70          				ld			(hl),b					; Set timer
2184   0F40 79          				ld			a,c
2185   0F41 D3 05       				out			($05),a					; Audio Port 2
2186   0F43 C9          				ret
2187   0F44             
2188   0F44             				;; Get single argument from stack 
2189   0F44             L0F44:
2190   0F44 E3          				ex			(sp),hl
2191   0F45 7E          				ld			a,(hl)
2192   0F46 23          				inc			hl
2193   0F47 E3          				ex			(sp),hl
2194   0F48             
2195   0F48             L0F48:
2196   0F48 CD 91 0F    				call		L0F91
2197   0F4B 77          				ld			(hl),a
2198   0F4C F5          				push		af
2199   0F4D 01 00 0A    				ld			bc,$0A00
2200   0F50 11 40 25    				ld			de,$2540
2201   0F53 CD 65 01    				call		L0165						; Write c to de b*16 times.
2202   0F56 F1          				pop			af
2203   0F57 C3 5E 0F    				jp			L0F5E						; String @ loc from a
2204   0F5A             				;; And return
2205   0F5A             
2206   0F5A             
2207   0F5A             				;; String @ loc from calling 
2208   0F5A             				;; Get argument from calling address
2209   0F5A             L0F5A:
2210   0F5A E3          				ex			(sp),hl
2211   0F5B 7E          				ld			a,(hl)
2212   0F5C 23          				inc			hl
2213   0F5D E3          				ex			(sp),hl
2214   0F5E             
2215   0F5E             				;; String @ Loc from a
2216   0F5E             L0F5E:
2217   0F5E E5          				push		hl							; Stash hl
2218   0F5F 07          				rlca
2219   0F60 F5          				push		af							; Stash a<<1
2220   0F61 07          				rlca
2221   0F62 07          				rlca
2222   0F63 07          				rlca
2223   0F64 E6 0E       				and			$0E							; Previous bits <7:5>
2224   0F66 4F          				ld			c,a
2225   0F67 06 00       				ld			b,$00
2226   0F69 21 C5 0F    				ld			hl,L0FC5				; Location table
2227   0F6C 09          				add			hl,bc
2228   0F6D             
2229   0F6D             				;; Get de from table
2230   0F6D 5E          				ld			e,(hl)
2231   0F6E 23          				inc			hl
2232   0F6F 56          				ld			d,(hl)
2233   0F70             
2234   0F70 F1          				pop			af							; Original a<<1
2235   0F71 E6 3E       				and			$3E							; Original bits <4:0>
2236   0F73 CA 8F 0F    				jp			z,L0F8F					; No phrase
2237   0F76             
2238   0F76 D5          				push		de
2239   0F77 4F          				ld			c,a							; a = phrase index
2240   0F78 21 3F 12    				ld			hl,$123F				; Language table 
2241   0F7B CD 00 10    				call		L1000						; Index into language table
2242   0F7E EB          				ex			de,hl						; Phrase list to hl
2243   0F7F 09          				add			hl,bc
2244   0F80 5E          				ld			e,(hl)
2245   0F81 23          				inc			hl
2246   0F82 56          				ld			d,(hl)
2247   0F83 EB          				ex			de,hl						; hl = start of phrase
2248   0F84 D1          				pop			de
2249   0F85             L0F85:
2250   0F85 7E          				ld			a,(hl)					; Get char
2251   0F86 CD 81 03    				call		L0381						; Draw char from a
2252   0F89 7E          				ld			a,(hl)					; Get char
2253   0F8A 23          				inc			hl
2254   0F8B A7          				and			a
2255   0F8C F2 85 0F    				jp			p,L0F85					; Loop (last char has D7 set)
2256   0F8F             L0F8F:
2257   0F8F E1          				pop			hl							; Restore hl
2258   0F90 C9          				ret
2259   0F91             
2260   0F91             				;; Called from rst $30 and elsewhere
2261   0F91             				;; Dump calling address if a matches spot in table
2262   0F91             L0F91:
2263   0F91 C5          				push		bc
2264   0F92 F5          				push		af
2265   0F93 07          				rlca
2266   0F94 07          				rlca
2267   0F95 07          				rlca
2268   0F96 E6 07       				and			$07							; Previous high 3 bits 
2269   0F98 4F          				ld			c,a
2270   0F99 06 00       				ld			b,$00
2271   0F9B 21 5B 20    				ld			hl,$205B				; Table 
2272   0F9E 09          				add			hl,bc						; Index into table 
2273   0F9F F1          				pop			af
2274   0FA0 C1          				pop			bc
2275   0FA1 BE          				cp			(hl)						; Compare to table 
2276   0FA2 C0          				ret			nz
2277   0FA3 E1          				pop			hl							; Throw away last calling address 
2278   0FA4 C9          				ret
2279   0FA5             
2280   0FA5             				;; Crash string table
2281   0FA5             L0FA5:
2282   0FA5 50 4F 57 3F 				.db			"POW?"					; POW_
2283   0FA9 5A 41 50 3F 				.db			"ZAP?"					; ZAP_
2284   0FAD 57 41 4D 3F 				.db			"WAM?"					; WAM_
2285   0FB1 42 41 4D 3F 				.db			"BAM?"					; BAM_
2286   0FB5 5A 4F 52 4B 				.db			"ZORK"					; ZORK
2287   0FB9 42 41 4E 47 				.db			"BANG"					; BANG
2288   0FBD 42 4F 4F 4D 				.db			"BOOM"					; BOOM
2289   0FC1 5A 4F 4E 4B 				.db			"ZONK"					; ZONK
2290   0FC5             
2291   0FC5             				;; 2-byte table (8 entries, 5 used)
2292   0FC5             				;; Screen location for phrases?
2293   0FC5             L0FC5:
2294   0FC5 00 24       				.dw			$2400						; Top of screen
2295   0FC7 40 38       				.dw			$3840						; 
2296   0FC9 C0 3A       				.dw			$3ac0						; 
2297   0FCB A0 3C       				.dw			$3ca0						; 
2298   0FCD 80 3E       				.dw			$3e80						; 
2299   0FCF             
2300   0FCF             				;; 2-byte tabke (4 entries) == Coinage
2301   0FCF             L0FCF:
2302   0FCF 01 01       				.db			$01, $01				; 1 coin, 1 credit
2303   0FD1 01 02       				.db			$01, $02				; 1 coin, 2 credit
2304   0FD3 02 01       				.db			$02, $01				; 2 coin, 1 credit
2305   0FD5 02 03       				.db			$02, $03				; 2 coin, 3 credit
2306   0FD7             
2307   0FD7             				;; 2-byte tabke (4 entries) == Game time
2308   0FD7 80 40       				.db			$80, $40				; 80 + 40 ext
2309   0FD9 01 01       				.db			$01, $01				; Test mode
2310   0FDB 99 50       				.db			$99, $50				; 99 + 50 ext
2311   0FDD 60 30       				.db			$60, $30				; 60 + 30 ext
2312   0FDF             
2313   0FDF             				;; Update score
2314   0FDF             L0FDF:
2315   0FDF 21 3D 20    				ld			hl,$203d				; Memory location 
2316   0FE2 11 D9 3A    				ld			de,$3ad9				; Screen location
2317   0FE5             
2318   0FE5             				;; Draw ##.## from hl to de
2319   0FE5             L0FE5:
2320   0FE5 CD 66 03    				call		L0366						; Draw BCD from hl at de w/ _
2321   0FE8 3E 3E       				ld			a,$3E						; . 
2322   0FEA CD 81 03    				call		L0381						; Draw char from A 
2323   0FED 23          				inc			hl
2324   0FEE C3 74 03    				jp			L0374						; Draw BCD from hl at de w/ 0
2325   0FF1             				;; And return
2326   0FF1             
2327   0FF1             				;; Draw game time
2328   0FF1             L0FF1:
2329   0FF1 21 47 12    				ld			hl,$1247				; Language loc table
2330   0FF4 CD 00 10    				call		L1000						; Index into language table (to de)
2331   0FF7 21 42 20    				ld			hl,$2042				; (Game time)
2332   0FFA C3 66 03    				jp			L0366						; Draw BCD from hl at de w/ _
2333   0FFD             
2334   0FFD A7          				.db			$a7							; Checksum fix byte 
2335   0FFE 00          				nop
2336   0FFF 00          				nop
2337   1000             
2338   1000             				;; Index into language table
2339   1000             L1000:
2340   1000 DB 02       				in			a,($02)					; IN2
2341   1002 07          				rlca										; 65432107
2342   1003 07          				rlca										; 54321076
2343   1004 07          				rlca										; 43210765
2344   1005 E6 06       				and			$06							; Language
2345   1007 5F          				ld			e,a
2346   1008 16 00       				ld			d,$00
2347   100A 19          				add			hl,de
2348   100B 5E          				ld			e,(hl)
2349   100C 23          				inc			hl
2350   100D 56          				ld			d,(hl)
2351   100E C9          				ret
2352   100F             
2353   100F             L100F:
2354   100F 3A 4A 20    				ld			a,($204A)
2355   1012 A7          				and			a
2356   1013 F8          				ret			m
2357   1014 21 36 20    				ld			hl,$2036
2358   1017 46          				ld			b,(hl)
2359   1018 7E          				ld			a,(hl)
2360   1019 23          				inc			hl							; $2037
2361   101A BE          				cp			(hl)
2362   101B CA 37 10    				jp			z,$1037					; Jump if zero
2363   101E AE          				xor			(hl)						; a = ($2036) ^ ($2037)
2364   101F 78          				ld			a,b							; a = ($2036)
2365   1020 FA 2B 10    				jp			m,$102B					; D7 different
2366   1023 BE          				cp			(hl)
2367   1024 D2 2F 10    				jp			nc,$102F
2368   1027             
2369   1027             L1027:
2370   1027 35          				dec			(hl)
2371   1028 C3 30 10    				jp			$1030
2372   102B             
2373   102B             L102B:
2374   102B BE          				cp			(hl)
2375   102C D2 27 10    				jp			nc,$1027
2376   102F             
2377   102F             L102F:
2378   102F 34          				inc			(hl)
2379   1030             
2380   1030             L1030:
2381   1030 3A 39 20    				ld			a,($2039)
2382   1033 32 4A 20    				ld			($204A),a
2383   1036 C9          				ret
2384   1037             
2385   1037             
2386   1037             L1037:
2387   1037 23          				inc			hl
2388   1038 7E          				ld			a,(hl)
2389   1039 A7          				and			a
2390   103A C2 27 10    				jp			nz,$1027
2391   103D             
2392   103D 47          				ld			b,a
2393   103E 3A 23 20    				ld			a,($2023)
2394   1041 4F          				ld			c,a
2395   1042 07          				rlca
2396   1043 81          				add			a,c
2397   1044 4F          				ld			c,a
2398   1045 21 7C 10    				ld			hl,$107C
2399   1048 09          				add			hl,bc
2400   1049 11 36 20    				ld			de,$2036
2401   104C CD 88 10    				call		L1088						; Kick PRNG, get #
2402   104F E6 07       				and			$07
2403   1051 CA 6F 10    				jp			z,$106F
2404   1054 CD 88 10    				call		L1088						; Kick PRNG, get #
2405   1057 E6 7F       				and			$7F
2406   1059 D6 40       				sub			$40
2407   105B 12          				ld			(de),a
2408   105C 13          				inc			de
2409   105D 13          				inc			de
2410   105E CD 88 10    				call		L1088						; Kick PRNG, get #
2411   1061 A6          				and			(hl)
2412   1062             L1062:
2413   1062 12          				ld			(de),a
2414   1063 13          				inc			de
2415   1064 23          				inc			hl
2416   1065 CD 88 10    				call		L1088						; Kick PRNG, get #
2417   1068 A6          				and			(hl)
2418   1069 23          				inc			hl
2419   106A 86          				add			a,(hl)
2420   106B C6 FC       				add			a,$FC
2421   106D 12          				ld			(de),a
2422   106E C9          				ret
2423   106F             L106F:
2424   106F 12          				ld			(de),a
2425   1070 13          				inc			de
2426   1071 13          				inc			de
2427   1072 CD 88 10    				call		L1088						; Kick PRNG, get #
2428   1075 E6 3F       				and			$3F
2429   1077 C6 20       				add			a,$20
2430   1079 C3 62 10    				jp			$1062
2431   107C             L107C:
2432   107C 03          				inc			bc
2433   107D 03          				inc			bc
2434   107E 00          				nop
2435   107F 03          				inc			bc
2436   1080 03          				inc			bc
2437   1081 00          				nop
2438   1082 03          				inc			bc
2439   1083 01 02 03    				ld			bc,$0302
2440   1086 00          				nop
2441   1087 03          				inc			bc
2442   1088             
2443   1088             				;; Crappy PRNG?
2444   1088             L1088:
2445   1088 E5          				push		hl
2446   1089 C5          				push		bc
2447   108A 21 09 20    				ld			hl,$2009
2448   108D 06 08       				ld			b,$08						; Loop counter
2449   108F 7E          				ld			a,(hl)
2450   1090             L1090:
2451   1090 07          				rlca
2452   1091 07          				rlca
2453   1092 07          				rlca
2454   1093 AE          				xor			(hl)
2455   1094 17          				rla
2456   1095 17          				rla
2457   1096 21 09 20    				ld			hl,$2009
2458   1099 7E          				ld			a,(hl)
2459   109A 17          				rla
2460   109B 77          				ld			(hl),a
2461   109C 23          				inc			hl							; hl=$2010
2462   109D 7E          				ld			a,(hl)
2463   109E 17          				rla
2464   109F 77          				ld			(hl),a
2465   10A0 23          				inc			hl							; hl=$2011
2466   10A1 7E          				ld			a,(hl)
2467   10A2 17          				rla
2468   10A3 77          				ld			(hl),a
2469   10A4 23          				inc			hl							; hl=$2012
2470   10A5 7E          				ld			a,(hl)
2471   10A6 17          				rla
2472   10A7 77          				ld			(hl),a
2473   10A8 05          				dec			b
2474   10A9 C2 90 10    				jp			nz,$1090				; Loop
2475   10AC             
2476   10AC C1          				pop			bc
2477   10AD E1          				pop			hl
2478   10AE C9          				ret
2479   10AF             
2480   10AF             
2481   10AF             L10AF:
2482   10AF 21 44 21    				ld			hl,$2144
2483   10B2 36 35       				ld			(hl),$35
2484   10B4 11 E7 10    				ld			de,L10E7
2485   10B7 01 40 00    				ld			bc,$0040				; b = xor value, c=count
2486   10BA CD C9 10    				call		L10C9
2487   10BD 23          				inc			hl
2488   10BE EB          				ex			de,hl
2489   10BF 06 08       				ld			b,$08
2490   10C1 CD DF 0A    				call		L0ADF						; Copy (hl) to (de) b times
2491   10C4 EB          				ex			de,hl
2492   10C5 2B          				dec			hl
2493   10C6 01 3E FF    				ld			bc,$FF3E				; b = xor value, c=count
2494   10C9             
2495   10C9             				;; Add/subtract values from (de) to (hl);
2496   10C9             				;; de = Table of packed 2-bit values
2497   10C9             				;; b  = xor value
2498   10C9             				;; c  = loop counter
2499   10C9             L10C9:
2500   10C9 1A          				ld			a,(de)
2501   10CA D5          				push		de
2502   10CB 16 04       				ld			d,$04						; Loop counter (4 packed 2 bit values
2503   10CD             
2504   10CD             				;; Unpack 2 bits from (de)
2505   10CD             L10CD:
2506   10CD 07          				rlca
2507   10CE 07          				rlca
2508   10CF 5F          				ld			e,a							; e = a<<2
2509   10D0 E6 03       				and			$03							; Previous high 2 bits of a
2510   10D2 A8          				xor			b
2511   10D3 F2 D7 10    				jp			p,$10D7
2512   10D6             
2513   10D6 3C          				inc			a								; 2's complement if negative
2514   10D7             L10D7:
2515   10D7 86          				add			a,(hl)
2516   10D8 23          				inc			hl
2517   10D9 77          				ld			(hl),a
2518   10DA 15          				dec			d
2519   10DB 7B          				ld			a,e
2520   10DC C2 CD 10    				jp			nz,$10CD				; Loop for byte
2521   10DF             
2522   10DF D1          				pop			de
2523   10E0 13          				inc			de
2524   10E1 0D          				dec			c
2525   10E2 C2 C9 10    				jp			nz,$10C9				; Loop for table length
2526   10E5 C9          				ret
2527   10E6             
2528   10E6 D5          				push		de							; Garbage byte?
2529   10E7             
2530   10E7             				;; $40 long table -- values added to $2144-$2243
2531   10E7             L10E7:
2532   10E7 25 55 55 15 				.db			$25, $55, $55, $15, $15, $15, $04, $51		; ??
2532   10EB 15 15 04 51 
2533   10EF 11 11 04 44 				.db			$11, $11, $04, $44, $11, $04, $10, $41		; ??
2533   10F3 11 04 10 41 
2534   10F7 04 10 41 01 				.db			$04, $10, $41, $01, $01, $04, $04, $04		; ??
2534   10FB 01 04 04 04 
2535   10FF 04 04 01 01 				.db			$04, $04, $01, $01, $00, $40, $10, $04		; ??
2535   1103 00 40 10 04 
2536   1107 01 00 40 10 				.db			$01, $00, $40, $10, $01, $00, $10, $04		; ??
2536   110B 01 00 10 04 
2537   110F 00 40 04 00 				.db			$00, $40, $04, $00, $10, $01, $00, $10		; ??
2537   1113 10 01 00 10 
2538   1117 00 40 01 00 				.db			$00, $40, $01, $00, $10, $00, $40, $01		; ??
2538   111B 10 00 40 01 
2539   111F 00 01 00 04 				.db			$00, $01, $00, $04, $00, $10, $00, $40		; ??
2539   1123 00 10 00 40 
2540   1127             
2541   1127             L1127:
2542   1127             				;; $08 long table
2543   1127 7F 79 74 70 				.db			$7f, $79, $74, $70, $6b, $67, $64, $60		; ??
2543   112B 6B 67 64 60 
2544   112F             
2545   112F             				;; $3E long table -- values subbed from 
2546   112F             L112F:
2547   112F FE EE A6 99 				.db			$fe, $ee, $a6, $99, $65, $55, $55, $54		; ??
2547   1133 65 55 55 54 
2548   1137 51 45 11 11 				.db			$51, $45, $11, $11, $11, $04, $41, $04		; ??
2548   113B 11 04 41 04 
2549   113F 10 40 41 00 				.db			$10, $40, $41, $00, $40, $40, $10, $04		; ??
2549   1143 40 40 10 04 
2550   1147 00 40 04 00 				.db			$00, $40, $04, $00, $10, $00, $10, $00		; ??
2550   114B 10 00 10 00 
2551   114F 10 00 01 00 				.db			$10, $00, $01, $00, $00, $04, $00, $00		; ??
2551   1153 00 04 00 00 
2552   1157 04 00 00 00 				.db			$04, $00, $00, $00, $40, $00, $00, $00		; ??
2552   115B 40 00 00 00 
2553   115F 10 00 00 00 				.db			$10, $00, $00, $00, $00, $40, $00, $00		; ??
2553   1163 00 40 00 00 
2554   1167 00 00 01 00 				.db			$00, $00, $01, $00, $00, $00							; ??
2554   116B 00 00 
2555   116D             
2556   116D             				;; Table for $0862
2557   116D             L116D:
2558   116D 81 8F A2 AD 				.db			$81, $8f, $a2, $ad, $b5, $bb, $c0, $c4		; 
2558   1171 B5 BB C0 C4 
2559   1175 C8 CB CE D0 				.db			$c8, $cb, $ce, $d0, $d3, $d5, $d7, $d9		; 
2559   1179 D3 D5 D7 D9 
2560   117D DB DC DE DF 				.db			$db, $dc, $de, $df, $e1, $e2, $e3, $e4		; 
2560   1181 E1 E2 E3 E4 
2561   1185 E6 E7 E8 E9 				.db			$e6, $e7, $e8, $e9, $ea, $eb, $ec, $ed		; 
2561   1189 EA EB EC ED 
2562   118D ED EE EF F0 				.db			$ed, $ee, $ef, $f0, $f1, $f1, $f2, $f3		; 
2562   1191 F1 F1 F2 F3 
2563   1195 F4 F4 F5 F6 				.db			$f4, $f4, $f5, $f6, $f6, $f7, $f7, $f8		; 
2563   1199 F6 F7 F7 F8 
2564   119D F9 F9 FA FA 				.db			$f9, $f9, $fa, $fa, $fb, $fb, $fc, $fc		; 
2564   11A1 FB FB FC FC 
2565   11A5 FD FD FE FE 				.db			$fd, $fd, $fe, $fe, $ff, $ff, $ff, $ff		; 
2565   11A9 FF FF FF FF 
2566   11AD FF          				.db			$ff																				; 
2567   11AE             
2568   11AE             				;; Table
2569   11AE             L11AE:
2570   11AE 01 01 01 01 				.db			$01, $01, $01, $01, $01, $01, $01, $01		; 11x 01
2570   11B2 01 01 01 01 
2571   11B6 01 01 01 02 				.db			$01, $01, $01, $02, $02, $02, $02, $02		; 15x 02
2571   11BA 02 02 02 02 
2572   11BE 02 02 02 02 				.db			$02, $02, $02, $02, $02, $02, $02, $02		; 15x 02
2572   11C2 02 02 02 02 
2573   11C6 02 02 03 03 				.db			$02, $02, $03, $03, $03, $03, $03, $03		; 9x  03
2573   11CA 03 03 03 03 
2574   11CE 03 03 03 04 				.db			$03, $03, $03, $04, $04, $04, $04, $04		; 7x  04
2574   11D2 04 04 04 04 
2575   11D6 04 04 05 05 				.db			$04, $04, $05, $05, $05, $05, $05, $06		; 5x  05, 5x  06
2575   11DA 05 05 05 06 
2576   11DE 06 06 06 06 				.db			$06, $06, $06, $06, $07, $07, $07, $07		; 4x  07
2576   11E2 07 07 07 07 
2577   11E6 08 08 08 09 				.db			$08, $08, $08, $09, $09, $09, $0a, $0a		; 3x  08, 3x  09, 3x  0a
2577   11EA 09 09 0A 0A 
2578   11EE 0A 0B 0B 0C 				.db			$0a, $0b, $0b, $0c, $0c, $0c, $0d, $0d		; 2x  0b, 3x  0c, 2x  0d
2578   11F2 0C 0C 0D 0D 
2579   11F6 0E 0E 0F 10 				.db			$0e, $0e, $0f, $10, $10, $11, $11, $12		; 2x  0e
2579   11FA 10 11 11 12 
2580   11FE 13 13 14 15 				.db			$13, $13, $14, $15, $16, $16, $17, $18		; 
2580   1202 16 16 17 18 
2581   1206 19 1A 1B 1C 				.db			$19, $1a, $1b, $1c, $1d, $1e, $1f, $20		; 
2581   120A 1D 1E 1F 20 
2582   120E 21 23 24 25 				.db			$21, $23, $24, $25, $27, $28, $2a, $2b		; 
2582   1212 27 28 2A 2B 
2583   1216 2D 2F 30 32 				.db			$2d, $2f, $30, $32, $34, $36, $38, $3a		; 
2583   121A 34 36 38 3A 
2584   121E 3C 3E 41 43 				.db			$3c, $3e, $41, $43, $46, $48, $4b, $4e		; 
2584   1222 46 48 4B 4E 
2585   1226 51 54 57 5A 				.db			$51, $54, $57, $5a, $5c, $61, $64, $68		; 
2585   122A 5C 61 64 68 
2586   122E             
2587   122E             				;; Table for $0869
2588   122E             L122E:
2589   122E 00 01 13 1E 				.db			$00, $01, $13, $1e, $26, $2c, $31, $33		; 
2589   1232 26 2C 31 33 
2590   1236 35 39 3B 3D 				.db			$35, $39, $3b, $3d, $3f, $41, $42, $43		; 
2590   123A 3F 41 42 43 
2591   123E 44          				.db			$44																				; 
2592   123F             
2593   123F             #include "zaptext.asm"
0001+  123F             TBLLANG:												; $123F
0002+  123F 4D 12       				.dw			TBLENG-2
0003+  1241 F0 13       				.dw			TBLGER-2
0004+  1243 51 15       				.dw			TBLFRA-2
0005+  1245 B3 16       				.dw			TBLSPA-2
0006+  1247             
0007+  1247             TBLLOC:
0008+  1247 C8 3A       				.dw			$3ac8
0009+  1249 C8 3A       				.dw			$3ac8
0010+  124B C9 3A       				.dw			$3ac9
0011+  124D CA 3A       				.dw			$3aca
0012+  124F             
0013+  124F             #include "zapeng.asm"
0001++ 124F             TBLENG:		; $124f
0002++ 124F B8 12       				.dw			ENG01						; Extended time
0003++ 1251 DB 13       				.dw			ENG02						; Your rating
0004++ 1253 3C 13       				.dw			ENG03						; Score
0005++ 1255 81 13       				.dw			ENG04						; New record
0006++ 1257 C6 12       				.dw			ENG05						; Shift Low
0007++ 1259 E0 12       				.dw			ENG06						; Shift high
0008++ 125B FD 12       				.dw			ENG07						; Insert coin
0009++ 125D 09 13       				.dw			ENG08						; Push button
0010++ 125F 15 13       				.dw			ENG09						; Game over
0011++ 1261 1F 13       				.dw			ENG0A						; Speedometer
0012++ 1263 35 13       				.dw			ENG0B						; Time
0013++ 1265 43 13       				.dw			ENG0C						; High score
0014++ 1267 4F 13       				.dw			ENG0D						; Prev score
0015++ 1269 5F 13       				.dw			ENG0E						; Datsun
0016++ 126B 70 13       				.dw			ENG0F						; Congrats							
0017++ 126D 93 12       				.dw			ENG10						; Nothing
0018++ 126F 81 12       				.dw			ENG11						; Max 160
0019++ 1271 94 12       				.dw			ENG12						; Max 120
0020++ 1273 A6 12       				.dw			ENG13						; Max 80
0021++ 1275 9C 13       				.dw			ENG14						; Rate 1
0022++ 1277 A7 13       				.dw			ENG15						; Rate 2
0023++ 1279 B7 13       				.dw			ENG16						; Rate 3
0024++ 127B C4 13       				.dw			ENG17						; Rate 4
0025++ 127D D0 13       				.dw			ENG18						; Rate 5
0026++ 127F D0 13       				.dw			ENG18						; Rate 5  (duplicate)
0027++ 1281             				
0028++ 1281             ENG11:		; $1281
0029++ 1281 07          				.db			$07																			; 7 spaces
0030++ 1282 4D 41 58 40 				.db			$4d, $41, $58, $40, $43, $55, $52, $56	; MAX_CURV
0030++ 1286 43 55 52 56 
0031++ 128A 45 40 31 36 				.db			$45, $40, $31, $36, $30, $40, $4d, $50	; E_160_MP
0031++ 128E 30 40 4D 50 
0032++ 1292 48          				.db			$48																			; H 
0033++ 1293             ENG10:	
0034++ 1293 C0          				.db			$c0																			; _
0035++ 1294             				
0036++ 1294             ENG12:		; $1294
0037++ 1294 07          				.db			$07																			; 7 spaces
0038++ 1295 4D 41 58 40 				.db			$4d, $41, $58, $40, $43, $55, $52, $56	; MAX_CURV
0038++ 1299 43 55 52 56 
0039++ 129D 45 40 31 32 				.db			$45, $40, $31, $32, $30, $40, $4d, $50	; E_120_MP
0039++ 12A1 30 40 4D 50 
0040++ 12A5 C8          				.db			$c8																			; H
0041++ 12A6             
0042++ 12A6             ENG13:		; $12a6
0043++ 12A6 07          				.db			$07																			; 7 spaces
0044++ 12A7 4D 41 58 40 				.db			$4d, $41, $58, $40, $43, $55, $52, $56	; MAX_CURV
0044++ 12AB 43 55 52 56 
0045++ 12AF 45 40 40 38 				.db			$45, $40, $40, $38, $30, $40, $4d, $50	; E__80_MP
0045++ 12B3 30 40 4D 50 
0046++ 12B7 C8          				.db			$c8																			; H
0047++ 12B8             
0048++ 12B8             ENG01:		; $12b8
0049++ 12B8 0A          				.db			$0a																			; 10 spaces
0050++ 12B9 45 58 54 45 				.db			$45, $58, $54, $45, $4e, $44, $45, $44	; EXTENDED
0050++ 12BD 4E 44 45 44 
0051++ 12C1 40 54 49 4D 				.db			$40, $54, $49, $4d, $c5									; _TIME
0051++ 12C5 C5 
0052++ 12C6             
0053++ 12C6             ENG05:		; $12c6
0054++ 12C6 04          				.db			$04																			; 4 spaces
0055++ 12C7 53 48 49 46 				.db			$53, $48, $49, $46, $54, $40, $47, $45	; SHIFT_GE
0055++ 12CB 54 40 47 45 
0056++ 12CF 41 52 40 49 				.db			$41, $52, $40, $49, $4e, $54, $4f, $40	; AR_INTO_
0056++ 12D3 4E 54 4F 40 
0057++ 12D7 4C 4F 57 40 				.db			$4c, $4f, $57, $40, $53, $50, $45, $45	; LOW_SPEE
0057++ 12DB 53 50 45 45 
0058++ 12DF C4          				.db			$c4																			; D
0059++ 12E0             
0060++ 12E0             ENG06:		; $12e0
0061++ 12E0 02          				.db			$02																			; 2 spaces
0062++ 12E1 53 48 49 46 				.db			$53, $48, $49, $46, $54, $40, $54, $4f	; SHIFT_TO
0062++ 12E5 54 40 54 4F 
0063++ 12E9 40 48 49 47 				.db			$40, $48, $49, $47, $48, $40, $46, $4f	; _HIGH_FO
0063++ 12ED 48 40 46 4F 
0064++ 12F1 52 40 4D 41 				.db			$52, $40, $4d, $41, $58, $40, $53, $43	; R_MAX_SC
0064++ 12F5 58 40 53 43 
0065++ 12F9 4F 52 45 BF 				.db			$4f, $52, $45, $bf											; ORE?
0066++ 12FD             
0067++ 12FD             ENG07:		; $12fd
0068++ 12FD 0A          				.db			$0a																			; 10 spaces
0069++ 12FE 49 4E 53 45 				.db			$49, $4e, $53, $45, $52, $54, $40, $43	; INSERT_C
0069++ 1302 52 54 40 43 
0070++ 1306 4F 49 CE    				.db			$4f, $49, $ce														; OIN
0071++ 1309             
0072++ 1309             ENG08:		; $1309
0073++ 1309 0A          				.db			$0a																			; 10 spaces
0074++ 130A 50 55 53 48 				.db			$50, $55, $53, $48, $40, $42, $55, $54	; PUSH_BUT
0074++ 130E 40 42 55 54 
0075++ 1312 54 4F CE    				.db			$54, $4f, $ce														; TON
0076++ 1315             
0077++ 1315             ENG09:		; $1315
0078++ 1315 0C          				.db			$0c																			; 12 spaces
0079++ 1316 47 41 4D 45 				.db			$47, $41, $4d, $45, $40, $4f, $56, $45	; GAME_OVE
0079++ 131A 40 4F 56 45 
0080++ 131E D2          				.db			$d2																			; R
0081++ 131F             
0082++ 131F             ENG0A:		; $131f
0083++ 131F 05          				.db			$05																			; 5 spaces
0084++ 1320 5B 3B 5C 3B 				.db			$5b, $3b, $5c, $3b, $5d, $3b, $5e, $3b	; [;\;];^;
0084++ 1324 5D 3B 5E 3B 
0085++ 1328 5F 3C 5B 3C 				.db			$5f, $3c, $5b, $3c, $5c, $3c, $5d, $3c	; _<[<\<]<
0085++ 132C 5C 3C 5D 3C 
0086++ 1330 5E 3C 5F 3D 				.db			$5e, $3c, $5f, $3d, $db									; ^<_=[
0086++ 1334 DB 
0087++ 1335             
0088++ 1335             ENG0B:		; $1335
0089++ 1335 02          				.db			$02																			; 2 spaces
0090++ 1336 54 49 4D 45 				.db			$54, $49, $4d, $45, $3a									; TIME:
0090++ 133A 3A 
0091++ 133B 09          				.db			$09																			; 9 spaces
0092++ 133C             ENG03:	
0093++ 133C 03          				.db			$03																			; 3 spaces
0094++ 133D 53 43 4F 52 				.db			$53, $43, $4f, $52, $45, $ba						; SCORE:
0094++ 1341 45 BA 
0095++ 1343             
0096++ 1343             ENG0C:		; $1343
0097++ 1343 03          				.db			$03																			; 3 spaces
0098++ 1344 48 49 47 48 				.db			$48, $49, $47, $48, $40, $53, $43, $4f	; HIGH_SCO
0098++ 1348 40 53 43 4F 
0099++ 134C 52 45 BA    				.db			$52, $45, $ba														; RE:
0100++ 134F             
0101++ 134F             ENG0D:		; $134f
0102++ 134F 03          				.db			$03																			; 3 spaces
0103++ 1350 50 52 45 56 				.db			$50, $52, $45, $56, $49, $4f, $55, $53	; PREVIOUS
0103++ 1354 49 4F 55 53 
0104++ 1358 40 53 43 4F 				.db			$40, $53, $43, $4f, $52, $45, $ba				; _SCORE:
0104++ 135C 52 45 BA 
0105++ 135F             
0106++ 135F             ENG0E:		; $135f
0107++ 135F 08          				.db			$08																			; 8 spaces
0108++ 1360 44 41 54 53 				.db			$44, $41, $54, $53, $55, $4e, $40, $32	; DATSUN_2
0108++ 1364 55 4E 40 32 
0109++ 1368 38 30 40 5A 				.db			$38, $30, $40, $5a, $5a, $5a, $41, $d0	; 80_ZZZAP
0109++ 136C 5A 5A 41 D0 
0110++ 1370             
0111++ 1370             ENG0F:		; $1370
0112++ 1370 08          				.db			$08																			; 8 spaces
0113++ 1371 43 4F 4E 47 				.db			$43, $4f, $4e, $47, $52, $41, $54, $55	; CONGRATU
0113++ 1375 52 41 54 55 
0114++ 1379 4C 41 54 49 				.db			$4c, $41, $54, $49, $4f, $4e, $53, $bf	; LATIONS?
0114++ 137D 4F 4E 53 BF 
0115++ 1381             
0116++ 1381             ENG04:		; $1381
0117++ 1381 03          				.db			$03																			; 3 spaces
0118++ 1382 59 4F 55 40 				.db			$59, $4f, $55, $40, $48, $41, $56, $45	; YOU_HAVE
0118++ 1386 48 41 56 45 
0119++ 138A 40 53 45 54 				.db			$40, $53, $45, $54, $40, $41, $40, $4e	; _SET_A_N
0119++ 138E 40 41 40 4E 
0120++ 1392 45 57 40 52 				.db			$45, $57, $40, $52, $45, $43, $4f, $52	; EW_RECOR
0120++ 1396 45 43 4F 52 
0121++ 139A 44 BF       				.db			$44, $bf																; D?
0122++ 139C             
0123++ 139C             ENG14:		; $139c
0124++ 139C 0A          				.db			$0a																			; 10 spaces
0125++ 139D 31          				.db			$31																			; 1
0126++ 139E 02          				.db			$02																			; 2 spaces
0127++ 139F 52 4F 41 44 				.db			$52, $4f, $41, $44, $40, $48, $4f, $c7	; ROAD_HOG
0127++ 13A3 40 48 4F C7 
0128++ 13A7             
0129++ 13A7             ENG15:		; $13a7
0130++ 13A7 08          				.db			$08																			; 8 spaces
0131++ 13A8 32          				.db			$32																			; 2
0132++ 13A9 02          				.db			$02																			; 2 spaces
0133++ 13AA 46 45 4E 44 				.db			$46, $45, $4e, $44, $45, $52, $40, $42	; FENDER_B
0133++ 13AE 45 52 40 42 
0134++ 13B2 45 4E 44 45 				.db			$45, $4e, $44, $45, $d2									; ENDER
0134++ 13B6 D2 
0135++ 13B7             
0136++ 13B7             ENG16:		; $13b7
0137++ 13B7 09          				.db			$09																			; 9 spaces
0138++ 13B8 33          				.db			$33																			; 3
0139++ 13B9 02          				.db			$02																			; 2 spaces
0140++ 13BA 48 4F 54 40 				.db			$48, $4f, $54, $40, $57, $48, $45, $45	; HOT_WHEE
0140++ 13BE 57 48 45 45 
0141++ 13C2 4C D3       				.db			$4c, $d3																; LS
0142++ 13C4             
0143++ 13C4             ENG17:		; $13c4
0144++ 13C4 0A          				.db			$0a																			; 10 spaces
0145++ 13C5 34          				.db			$34																			; 4
0146++ 13C6 02          				.db			$02																			; 2 spaces
0147++ 13C7 50 52 4F 40 				.db			$50, $52, $4f, $40, $52, $41, $43, $45	; PRO_RACE
0147++ 13CB 52 41 43 45 
0148++ 13CF D2          				.db			$d2																			; R
0149++ 13D0             
0150++ 13D0             ENG18:		; $13d0
0151++ 13D0 0A          				.db			$0a																			; 10 spaces
0152++ 13D1 35          				.db			$35																			; 5
0153++ 13D2 02          				.db			$02																			; 2 spaces
0154++ 13D3 43 48 41 4D 				.db			$43, $48, $41, $4d, $50, $49, $4f, $ce	; CHAMPION
0154++ 13D7 50 49 4F CE 
0155++ 13DB             
0156++ 13DB             ENG02:		; $13db
0157++ 13DB 06          				.db			$06																			; 6 spaces
0158++ 13DC 59 4F 55 52 				.db			$59, $4f, $55, $52, $40, $52, $41, $54	; YOUR_RAT
0158++ 13E0 40 52 41 54 
0159++ 13E4 49 4E 47 40 				.db			$49, $4e, $47, $40, $31, $40, $54, $4f	; ING_1_TO
0159++ 13E8 31 40 54 4F 
0160++ 13EC 40 35 BA    				.db			$40, $35, $ba														; _5:
0161++ 13EF             
0162++ 13EF 00 00 00    				.db			$00, $00, $00														; Garbage
0163++ 13F2             
0164++ 13F2             				.end
0014+  13F2             #include "zapger.asm"
0001++ 13F2             TBLGER:		; $13f2
0002++ 13F2 3C 14       				.dw			GER01						; Extended time					
0003++ 13F4 40 15       				.dw			GER02						; Your rating						
0004++ 13F6 A2 14       				.dw			GER03						; Score									
0005++ 13F8 EC 14       				.dw			GER04						; New record						
0006++ 13FA 49 14       				.dw			GER05						; Shift Low							
0007++ 13FC 5E 14       				.dw			GER06						; Shift high						
0008++ 13FE 73 14       				.dw			GER07						; Insert coin						
0009++ 1400 82 14       				.dw			GER08						; Push button						
0010++ 1402 91 14       				.dw			GER09						; Game over							
0011++ 1404 1F 13       				.dw			ENG0A						; Speedometer						
0012++ 1406 9B 14       				.dw			GER0B						; Time									
0013++ 1408 AA 14       				.dw			GER0C						; High score						
0014++ 140A BE 14       				.dw			GER0D						; Prev score						
0015++ 140C 5F 13       				.dw			ENG0E						; Datsun								
0016++ 140E D0 14       				.dw			GER0F						; Congrats							
0017++ 1410 93 12       				.dw			ENG10						; Nothing
0018++ 1412 28 14       				.dw			GER11						; Max 160
0019++ 1414 2F 14       				.dw			GER12						; Max 120
0020++ 1416 36 14       				.dw			GER13						; Max 80
0021++ 1418 05 15       				.dw			GER14						; Rate 1
0022++ 141A 11 15       				.dw			GER15						; Rate 2
0023++ 141C 1F 15       				.dw			GER16						; Rate 3
0024++ 141E 2C 15       				.dw			GER17						; Rate 4
0025++ 1420 D0 13       				.dw			ENG18						; Rate 5
0026++ 1422 D0 13       				.dw			ENG18						; Rate 5  (duplicate)
0027++ 1424             				
0028++ 1424 87 00       				.dw			$0087						; Garbage
0029++ 1426 00 00       				.dw			$0000						; Garbage
0030++ 1428             								
0031++ 1428             GER11:		; $1428
0032++ 1428 0C          				.db			$0c																			; 12 spaces
0033++ 1429 31 36 30 40 				.db			$31, $36, $30, $40, $4b, $cd						; 160_KM
0033++ 142D 4B CD 
0034++ 142F             
0035++ 142F             GER12:		; $142f
0036++ 142F 0C          				.db			$0c																			; 12 spaces
0037++ 1430 31 32 30 40 				.db			$31, $32, $30, $40, $4b, $cd						; 120_KM
0037++ 1434 4B CD 
0038++ 1436             
0039++ 1436             GER13:		; $1436
0040++ 1436 0D          				.db			$0d																			; 13 spaces
0041++ 1437 38 30 40 4B 				.db			$38, $30, $40, $4b, $cd									; 80_KM
0041++ 143B CD 
0042++ 143C             
0043++ 143C             GER01:		; $143c
0044++ 143C 0A          				.db			$0a																			; 10 spaces
0045++ 143D 5A 45 49 54 				.db			$5a, $45, $49, $54, $40, $50, $52, $41	; ZEIT_PRA
0045++ 1441 40 50 52 41 
0046++ 1445 45 4D 49 C5 				.db			$45, $4d, $49, $c5											; EMIE
0047++ 1449             
0048++ 1449             GER05:		; $1449
0049++ 1449 06          				.db			$06																			; 6 spaces
0050++ 144A 47 41 4E 47 				.db			$47, $41, $4e, $47, $40, $41, $55, $46	; GANG_AUF
0050++ 144E 40 41 55 46 
0051++ 1452 40 4C 4F 40 				.db			$40, $4c, $4f, $40, $53, $43, $48, $41	; _LO_SCHA
0051++ 1456 53 43 48 41 
0052++ 145A 4C 54 45 CE 				.db			$4c, $54, $45, $ce											; LTEN
0053++ 145E             
0054++ 145E             GER06:		; $145e
0055++ 145E 06          				.db			$06																			; 6 spaces
0056++ 145F 47 41 4E 47 				.db			$47, $41, $4e, $47, $40, $41, $55, $46	; GANG_AUF
0056++ 1463 40 41 55 46 
0057++ 1467 40 48 49 40 				.db			$40, $48, $49, $40, $53, $43, $48, $41	; _HI_SCHA
0057++ 146B 53 43 48 41 
0058++ 146F 4C 54 45 CE 				.db			$4c, $54, $45, $ce											; LTEN
0059++ 1473             
0060++ 1473             GER07:		; $1473
0061++ 1473 09          				.db			$09																			; 9 spaces
0062++ 1474 47 45 4C 44 				.db			$47, $45, $4c, $44, $40, $45, $49, $4e	; GELD_EIN
0062++ 1478 40 45 49 4E 
0063++ 147C 57 45 52 46 				.db			$57, $45, $52, $46, $45, $ce						; WERFEN
0063++ 1480 45 CE 
0064++ 1482             
0065++ 1482             GER08:		; $1482
0066++ 1482 09          				.db			$09																			; 9 spaces
0067++ 1483 4B 4E 4F 50 				.db			$4b, $4e, $4f, $50, $46, $40, $44, $52	; KNOPF_DR
0067++ 1487 46 40 44 52 
0068++ 148B 55 45 43 4B 				.db			$55, $45, $43, $4b, $45, $ce						; UECKEN
0068++ 148F 45 CE 
0069++ 1491             
0070++ 1491             GER09:		; $1491
0071++ 1491 0B          				.db			$0b																			; 11 spaces
0072++ 1492 53 50 49 45 				.db			$53, $50, $49, $45, $4c, $45, $4e, $44	; SPIELEND
0072++ 1496 4C 45 4E 44 
0073++ 149A C5          				.db			$c5																			; E
0074++ 149B             
0075++ 149B             GER0B:		; $149b
0076++ 149B 02          				.db			$02																			; 2 spaces
0077++ 149C 5A 45 49 54 				.db			$5a, $45, $49, $54, $3a									; ZEIT:
0077++ 14A0 3A 
0078++ 14A1 08          				.db			$08																			; 8 spaces
0079++ 14A2             GER03:	
0080++ 14A2 03          				.db			$03																			; 3 spaces
0081++ 14A3 50 55 4E 4B 				.db			$50, $55, $4e, $4b, $54, $45, $ba				; PUNKTE:
0081++ 14A7 54 45 BA 
0082++ 14AA             
0083++ 14AA             GER0C:		; $14aa
0084++ 14AA 03          				.db			$03																			; 3 spaces
0085++ 14AB 48 4F 45 43 				.db			$48, $4f, $45, $43, $48, $53, $54, $45	; HOECHSTE
0085++ 14AF 48 53 54 45 
0086++ 14B3 40 50 55 4E 				.db			$40, $50, $55, $4e, $4b, $54, $5a, $41	; _PUNKTZA
0086++ 14B7 4B 54 5A 41 
0087++ 14BB 48 4C BA    				.db			$48, $4c, $ba														; HL:
0088++ 14BE             
0089++ 14BE             GER0D:		; $14be
0090++ 14BE 03          				.db			$03																			; 3 spaces
0091++ 14BF 4C 45 54 5A 				.db			$4c, $45, $54, $5a, $54, $45, $40, $50	; LETZTE_P
0091++ 14C3 54 45 40 50 
0092++ 14C7 55 4E 4B 54 				.db			$55, $4e, $4b, $54, $5a, $41, $48, $4c	; UNKTZAHL
0092++ 14CB 5A 41 48 4C 
0093++ 14CF BA          				.db			$ba																			; :
0094++ 14D0             
0095++ 14D0             GER0F:		; $14d0
0096++ 14D0 02          				.db			$02																			; 2 spaces
0097++ 14D1 47 52 41 54 				.db			$47, $52, $41, $54, $55, $4c, $49, $45	; GRATULIE
0097++ 14D5 55 4C 49 45 
0098++ 14D9 52 45 3F    				.db			$52, $45, $3f														; RE?
0099++ 14DC 02          				.db			$02																			; 2 spaces
0100++ 14DD 53 49 45 40 				.db			$53, $49, $45, $40, $48, $41, $42, $45	; SIE_HABE
0100++ 14E1 48 41 42 45 
0101++ 14E5 4E 40 45 49 				.db			$4e, $40, $45, $49, $4e, $45, $ce				; N_EINEN
0101++ 14E9 4E 45 CE 
0102++ 14EC             
0103++ 14EC             GER04:		; $14ec
0104++ 14EC 04          				.db			$04																			; 4 spaces
0105++ 14ED 4E 45 56 45 				.db			$4e, $45, $56, $45, $4e, $40, $52, $45	; NEVEN_RE
0105++ 14F1 4E 40 52 45 
0106++ 14F5 4B 4F 52 44 				.db			$4b, $4f, $52, $44, $40, $41, $55, $46	; KORD_AUF
0106++ 14F9 40 41 55 46 
0107++ 14FD 47 45 53 54 				.db			$47, $45, $53, $54, $45, $4c, $4c, $d4	; GESTELLT
0107++ 1501 45 4C 4C D4 
0108++ 1505             
0109++ 1505             GER14:		; $1505
0110++ 1505 0A          				.db			$0a																			; 10 spaces
0111++ 1506 31          				.db			$31																			; 1
0112++ 1507 02          				.db			$02																			; 2 spaces
0113++ 1508 41 4E 46 41 				.db			$41, $4e, $46, $41, $45, $4e, $47, $45	; ANFAENGE
0113++ 150C 45 4E 47 45 
0114++ 1510 D2          				.db			$d2																			; R
0115++ 1511             
0116++ 1511             GER15:		; $1511
0117++ 1511 09          				.db			$09																			; 9 spaces
0118++ 1512 32          				.db			$32																			; 2
0119++ 1513 02          				.db			$02																			; 2 spaces
0120++ 1514 53 50 4F 52 				.db			$53, $50, $4f, $52, $54, $46, $41, $48	; SPORTFAH
0120++ 1518 54 46 41 48 
0121++ 151C 52 45 D2    				.db			$52, $45, $d2														; RER
0122++ 151F             
0123++ 151F             GER16:		; $151f
0124++ 151F 09          				.db			$09																			; 9 spaces
0125++ 1520 33          				.db			$33																			; 3
0126++ 1521 02          				.db			$02																			; 2 spaces
0127++ 1522 52 45 4E 4E 				.db			$52, $45, $4e, $4e, $46, $41, $48, $52	; RENNFAHR
0127++ 1526 46 41 48 52 
0128++ 152A 45 D2       				.db			$45, $d2																; ER
0129++ 152C             
0130++ 152C             GER17:		; $152c
0131++ 152C 06          				.db			$06																			; 6 spaces
0132++ 152D 34          				.db			$34																			; 4
0133++ 152E 02          				.db			$02																			; 2 spaces
0134++ 152F 47 52 41 4E 				.db			$47, $52, $41, $4e, $44, $40, $50, $52	; GRAND_PR
0134++ 1533 44 40 50 52 
0135++ 1537 49 58 40 46 				.db			$49, $58, $40, $46, $41, $48, $52, $45	; IX_FAHRE
0135++ 153B 41 48 52 45 
0136++ 153F D2          				.db			$d2																			; R
0137++ 1540             
0138++ 1540             GER02:		; $1540
0139++ 1540 07          				.db			$07																			; 7 spaces
0140++ 1541 52 41 4E 47 				.db			$52, $41, $4e, $47, $46, $4f, $4c, $47	; RANGFOLG
0140++ 1545 46 4F 4C 47 
0141++ 1549 45 40 31 40 				.db			$45, $40, $31, $40, $42, $49, $53, $40	; E_1_BIS_
0141++ 154D 42 49 53 40 
0142++ 1551 35 BA       				.db			$35, $ba																; 5:
0143++ 1553             
0144++ 1553             				.end
0015+  1553             #include "zapfra.asm"
0001++ 1553             TBLFRA:		; $1553
0002++ 1553 97 15       				.dw			FRA01						; Extended time					
0003++ 1555 1D 16       				.dw			FRA02						; Your rating						
0004++ 1557 3C 13       				.dw			ENG03						; Score									
0005++ 1559 05 16       				.dw			FRA04						; New record						
0006++ 155B AC 15       				.dw			FRA05						; Shift Low							
0007++ 155D CF 15       				.dw			FRA06						; Shift high						
0008++ 155F 8F 16       				.dw			FRA07						; Insert coin						
0009++ 1561 A3 16       				.dw			FRA08						; Push button						
0010++ 1563 C7 15       				.dw			FRA09						; Game over							
0011++ 1565 1F 13       				.dw			ENG0A						; Speedometer						
0012++ 1567 89 15       				.dw			FRA0B						; Time									
0013++ 1569 6E 16       				.dw			FRA0C						; High score						
0014++ 156B 7E 16       				.dw			FRA0D						; Prev score						
0015++ 156D 5F 13       				.dw			ENG0E						; Datsun								
0016++ 156F E9 15       				.dw			FRA0F						; Congrats							
0017++ 1571 93 12       				.dw			ENG10						; Nothing
0018++ 1573 28 14       				.dw			GER11						; Max 160
0019++ 1575 2F 14       				.dw			GER12						; Max 120
0020++ 1577 36 14       				.dw			GER13						; Max 80
0021++ 1579 2E 16       				.dw			FRA14						; Rate 1
0022++ 157B 41 16       				.dw			FRA15						; Rate 2
0023++ 157D 49 16       				.dw			FRA16						; Rate 3
0024++ 157F 56 16       				.dw			FRA17						; Rate 4
0025++ 1581 5F 16       				.dw			FRA18						; Rate 5
0026++ 1583 5F 16       				.dw			FRA18						; Rate 5  (duplicate)
0027++ 1585             				
0028++ 1585 00 00       				.dw			$0000						; Garbage
0029++ 1587 00 00       				.dw			$0000						; Garbage
0030++ 1589             
0031++ 1589             FRA0B:		; $1589
0032++ 1589 02          				.db			$02																			; 2 spaces
0033++ 158A 54 45 4D 50 				.db			$54, $45, $4d, $50, $53, $3a						; TEMPS:
0033++ 158E 53 3A 
0034++ 1590             FRA03:	
0035++ 1590 0B          				.db			$0b																			; 11 spaces
0036++ 1591 53 43 4F 52 				.db			$53, $43, $4f, $52, $45, $ba						; SCORE:
0036++ 1595 45 BA 
0037++ 1597             
0038++ 1597             FRA01:		; $1597
0039++ 1597 06          				.db			$06																			; 6 spaces
0040++ 1598 54 45 4D 50 				.db			$54, $45, $4d, $50, $53, $40, $53, $55	; TEMPS_SU
0040++ 159C 53 40 53 55 
0041++ 15A0 50 50 4C 45 				.db			$50, $50, $4c, $45, $4d, $45, $4e, $54	; PPLEMENT
0041++ 15A4 4D 45 4E 54 
0042++ 15A8 41 49 52 C5 				.db			$41, $49, $52, $c5											; AIRE
0043++ 15AC             
0044++ 15AC             FRA05:		; $15ac
0045++ 15AC 03          				.db			$03																			; 3 spaces
0046++ 15AD 50 41 53 53 				.db			$50, $41, $53, $53, $45, $5a, $40, $4c	; PASSEZ_L
0046++ 15B1 45 5A 40 4C 
0047++ 15B5 41 40 50 52 				.db			$41, $40, $50, $52, $45, $4d, $49, $45	; A_PREMIE
0047++ 15B9 45 4D 49 45 
0048++ 15BD 52 45 40 56 				.db			$52, $45, $40, $56, $49, $54, $45, $53	; RE_VITES
0048++ 15C1 49 54 45 53 
0049++ 15C5 53 C5       				.db			$53, $c5																; SE
0050++ 15C7             
0051++ 15C7             FRA09:		; $15c7
0052++ 15C7 0C          				.db			$0c																			; 12 spaces
0053++ 15C8 54 45 52 4D 				.db			$54, $45, $52, $4d, $49, $4e, $c5				; TERMINE
0053++ 15CC 49 4E C5 
0054++ 15CF             
0055++ 15CF             FRA06:		; $15cf
0056++ 15CF 03          				.db			$03																			; 3 spaces
0057++ 15D0 50 41 53 53 				.db			$50, $41, $53, $53, $45, $5a, $40, $4c	; PASSEZ_L
0057++ 15D4 45 5A 40 4C 
0058++ 15D8 41 40 53 45 				.db			$41, $40, $53, $45, $43, $4f, $4e, $44	; A_SECOND
0058++ 15DC 43 4F 4E 44 
0059++ 15E0 45 40 56 49 				.db			$45, $40, $56, $49, $54, $45, $53, $53	; E_VITESS
0059++ 15E4 54 45 53 53 
0060++ 15E8 C5          				.db			$c5																			; E
0061++ 15E9             
0062++ 15E9             FRA0F:		; $15e9
0063++ 15E9 02          				.db			$02																			; 2 spaces
0064++ 15EA 42 52 41 56 				.db			$42, $52, $41, $56, $4f, $3f						; BRAVO?
0064++ 15EE 4F 3F 
0065++ 15F0 02          				.db			$02																			; 2 spaces
0066++ 15F1 56 4F 55 53 				.db			$56, $4f, $55, $53, $40, $41, $56, $45	; VOUS_AVE
0066++ 15F5 40 41 56 45 
0067++ 15F9 5A 40 52 45 				.db			$5a, $40, $52, $45, $41, $4c, $49, $53	; Z_REALIS
0067++ 15FD 41 4C 49 53 
0068++ 1601 45 40 55 CE 				.db			$45, $40, $55, $ce											; E_UN
0069++ 1605             
0070++ 1605             FRA04:		; $1605
0071++ 1605 04          				.db			$04																			; 4 spaces
0072++ 1606 4E 4F 55 56 				.db			$4e, $4f, $55, $56, $45, $41, $55, $40	; NOUVEAU_
0072++ 160A 45 41 55 40 
0073++ 160E 52 45 43 4F 				.db			$52, $45, $43, $4f, $52, $44, $40, $44	; RECORD_D
0073++ 1612 52 44 40 44 
0074++ 1616 45 40 50 49 				.db			$45, $40, $50, $49, $53, $54, $c5				; E_PISTE
0074++ 161A 53 54 C5 
0075++ 161D             
0076++ 161D             FRA02:		; $161d
0077++ 161D 08          				.db			$08				; 8 spaces
0078++ 161E 56 4F 54 52 				.db			$56, $4f, $54, $52, $45, $40, $43, $41	; VOTRE_CA
0078++ 1622 45 40 43 41 
0079++ 1626 54 45 47 4F 				.db			$54, $45, $47, $4f, $52, $49, $45, $ba	; TEGORIE:
0079++ 162A 52 49 45 BA 
0080++ 162E             
0081++ 162E             FRA14:		; $162e
0082++ 162E 07          				.db			$07																			; 7 spaces
0083++ 162F 52 45 50 52 				.db			$52, $45, $50, $52, $45, $4e, $45, $5a	; REPRENEZ
0083++ 1633 45 4E 45 5A 
0084++ 1637 40 55 4E 45 				.db			$40, $55, $4e, $45, $40, $4c, $45, $43	; _UNE_LEC
0084++ 163B 40 4C 45 43 
0085++ 163F 4F CE       				.db			$4f, $ce				; ON
0086++ 1641             
0087++ 1641             FRA15:		; $1641
0088++ 1641 0C          				.db			$0c																			; 12 spaces
0089++ 1642 41 4D 41 54 				.db			$41, $4d, $41, $54, $45, $55, $d2				; AMATEUR
0089++ 1646 45 55 D2 
0090++ 1649             
0091++ 1649             FRA16:		; $1649
0092++ 1649 0A          				.db			$0a																			; 10 spaces
0093++ 164A 50 52 4F 46 				.db			$50, $52, $4f, $46, $45, $53, $53, $49	; PROFESSI
0093++ 164E 45 53 53 49 
0094++ 1652 4F 4E 45 CC 				.db			$4f, $4e, $45, $cc											; ONEL
0095++ 1656             
0096++ 1656             FRA17:		; $1656
0097++ 1656 0C          				.db			$0c																			; 12 spaces
0098++ 1657 43 48 41 4D 				.db			$43, $48, $41, $4d, $50, $49, $4f, $ce	; CHAMPION
0098++ 165B 50 49 4F CE 
0099++ 165F             
0100++ 165F             FRA18:		; $165f
0101++ 165F 09          				.db			$09																			; 9 spaces
0102++ 1660 53 55 50 45 				.db			$53, $55, $50, $45, $52, $40, $43, $48	; SUPER_CH
0102++ 1664 52 40 43 48 
0103++ 1668 41 4D 50 49 				.db			$41, $4d, $50, $49, $4f, $ce						; AMPION
0103++ 166C 4F CE 
0104++ 166E             
0105++ 166E             FRA0C:		; $166e
0106++ 166E 03          				.db			$03																			; 3 spaces
0107++ 166F 53 43 4F 52 				.db			$53, $43, $4f, $52, $45, $40, $41, $40	; SCORE_A_
0107++ 1673 45 40 41 40 
0108++ 1677 42 41 54 54 				.db			$42, $41, $54, $54, $52, $45, $ba				; BATTRE:
0108++ 167B 52 45 BA 
0109++ 167E             
0110++ 167E             FRA0D:		; $167e
0111++ 167E 03          				.db			$03																			; 3 spaces
0112++ 167F 53 43 4F 52 				.db			$53, $43, $4f, $52, $45, $40, $50, $52	; SCORE_PR
0112++ 1683 45 40 50 52 
0113++ 1687 45 43 45 44 				.db			$45, $43, $45, $44, $45, $4e, $54, $ba	; ECEDENT:
0113++ 168B 45 4E 54 BA 
0114++ 168F             
0115++ 168F             FRA07:		; $168f
0116++ 168F 06          				.db			$06																			; 6 spaces
0117++ 1690 49 4E 54 52 				.db			$49, $4e, $54, $52, $4f, $44, $55, $49	; INTRODUI
0117++ 1694 4F 44 55 49 
0118++ 1698 53 45 52 40 				.db			$53, $45, $52, $40, $31, $40, $46, $52	; SER_1_FR
0118++ 169C 31 40 46 52 
0119++ 16A0 41 4E C3    				.db			$41, $4e, $c3														; ANC
0120++ 16A3             
0121++ 16A3             FRA08:		; $16a3
0122++ 16A3 07          				.db			$07																			; 7 spaces
0123++ 16A4 50 4F 55 53 				.db			$50, $4f, $55, $53, $53, $45, $5a, $40	; POUSSEZ_
0123++ 16A8 53 45 5A 40 
0124++ 16AC 4C 45 40 42 				.db			$4c, $45, $40, $42, $4f, $55, $54, $4f	; LE_BOUTO
0124++ 16B0 4F 55 54 4F 
0125++ 16B4 CE          				.db			$ce																			; N
0126++ 16B5             
0127++ 16B5             				.end
0016+  16B5             #include "zapspa.asm"
0001++ 16B5             TBLSPA:		; $16b5
0002++ 16B5 FC 16       				.dw			SPA01						; Extended time					
0003++ 16B7 76 17       				.dw			SPA02						; Your rating						
0004++ 16B9 F4 16       				.dw			SPA03						; Score									
0005++ 16BB 5F 17       				.dw			SPA04						; New record						
0006++ 16BD 0D 17       				.dw			SPA05						; Shift Low							
0007++ 16BF 28 17       				.dw			SPA06						; Shift high						
0008++ 16C1 DC 17       				.dw			SPA07						; Insert coin						
0009++ 16C3 EC 17       				.dw			SPA08						; Push button						
0010++ 16C5 40 17       				.dw			SPA09						; Game over							
0011++ 16C7 1F 13       				.dw			ENG0A						; Speedometer						
0012++ 16C9 EB 16       				.dw			SPA0B						; Time									
0013++ 16CB CE 17       				.dw			SPA0C						; High score						
0014++ 16CD BE 17       				.dw			SPA0D						; Prev score						
0015++ 16CF 5F 13       				.dw			ENG0E						; Datsun								
0016++ 16D1 50 17       				.dw			SPA0F						; Congrats							
0017++ 16D3 93 12       				.dw			ENG10						; Nothing
0018++ 16D5 28 14       				.dw			GER11						; Max 160
0019++ 16D7 2F 14       				.dw			GER12						; Max 120
0020++ 16D9 36 14       				.dw			GER13						; Max 80
0021++ 16DB 83 17       				.dw			SPA14						; Rate 1
0022++ 16DD 97 17       				.dw			SPA15						; Rate 2
0023++ 16DF AB 17       				.dw			SPA16						; Rate 3
0024++ 16E1 BD 17       				.dw			SPA17						; Rate 4
0025++ 16E3 CD 17       				.dw			SPA18						; Rate 5
0026++ 16E5 CD 17       				.dw			SPA18						; Rate 5  (duplicate)
0027++ 16E7 00 00       				.dw			$0000						; Garbage
0028++ 16E9 00 00       				.dw			$0000						; Garbage
0029++ 16EB             
0030++ 16EB             SPA0B:		; $16eb
0031++ 16EB 02          				.db			$02																			; 2 spaces
0032++ 16EC 54 49 45 4D 				.db			$54, $49, $45, $4d, $50, $4f, $3a				; TIEMPO:
0032++ 16F0 50 4F 3A 
0033++ 16F3 06          				.db			$06																			; 6 spaces
0034++ 16F4             				
0035++ 16F4             SPA03:		; $16f4
0036++ 16F4 03          				.db			$03																			; 3 spaces
0037++ 16F5 50 55 4E 54 				.db			$50, $55, $4e, $54, $45, $4f, $ba				; PUNTEO:
0037++ 16F9 45 4F BA 
0038++ 16FC             
0039++ 16FC             SPA01:		; $16fc
0040++ 16FC 08          				.db			$08																			; 8 spaces
0041++ 16FD 54 49 45 4D 				.db			$54, $49, $45, $4d, $50, $4f, $40, $45	; TIEMPO_E
0041++ 1701 50 4F 40 45 
0042++ 1705 58 54 45 4E 				.db			$58, $54, $45, $4e, $44, $49, $44, $cf	; XTENDIDO
0042++ 1709 44 49 44 CF 
0043++ 170D             
0044++ 170D             SPA05:		; $170d
0045++ 170D 03          				.db			$03																			; 3 spaces
0046++ 170E 43 41 4D 42 				.db			$43, $41, $4d, $42, $49, $45, $4c, $4f	; CAMBIELO
0046++ 1712 49 45 4C 4F 
0047++ 1716 40 41 40 4D 				.db			$40, $41, $40, $4d, $45, $4e, $4f, $53	; _A_MENOS
0047++ 171A 45 4E 4F 53 
0048++ 171E 40 56 45 4C 				.db			$40, $56, $45, $4c, $4f, $43, $49, $44	; _VELOCID
0048++ 1722 4F 43 49 44 
0049++ 1726 41 C4       				.db			$41, $c4																; AD
0050++ 1728             
0051++ 1728             SPA06:		; $1728
0052++ 1728 04          				.db			$04																			; 4 spaces
0053++ 1729 43 41 4D 42 				.db			$43, $41, $4d, $42, $49, $45, $4c, $4f	; CAMBIELO
0053++ 172D 49 45 4C 4F 
0054++ 1731 40 41 4D 41 				.db			$40, $41, $4d, $41, $53, $40, $56, $45	; _AMAS_VE
0054++ 1735 53 40 56 45 
0055++ 1739 4C 4F 43 49 				.db			$4c, $4f, $43, $49, $44, $41, $c4				; LOCIDAD
0055++ 173D 44 41 C4 
0056++ 1740             
0057++ 1740             SPA09:		; $1740
0058++ 1740 08          				.db			$08																			; 8 spaces
0059++ 1741 4A 55 45 47 				.db			$4a, $55, $45, $47, $4f, $40, $54, $45	; JUEGO_TE
0059++ 1745 4F 40 54 45 
0060++ 1749 52 4D 49 4E 				.db			$52, $4d, $49, $4e, $41, $44, $cf				; RMINADO
0060++ 174D 41 44 CF 
0061++ 1750             
0062++ 1750             SPA0F:		; $1750
0063++ 1750 09          				.db			$09																			; 9 spaces
0064++ 1751 46 45 4C 49 				.db			$46, $45, $4c, $49, $43, $49, $54, $41	; FELICITA
0064++ 1755 43 49 54 41 
0065++ 1759 43 49 4F 4E 				.db			$43, $49, $4f, $4e, $45, $d3						; CIONES
0065++ 175D 45 D3 
0066++ 175F             
0067++ 175F             SPA04:		; $175f
0068++ 175F 05          				.db			$05																			; 5 spaces
0069++ 1760 48 49 43 49 				.db			$48, $49, $43, $49, $53, $54, $45, $40	; HICISTE_
0069++ 1764 53 54 45 40 
0070++ 1768 55 4E 40 4E 				.db			$55, $4e, $40, $4e, $55, $45, $56, $4f	; UN_NUEVO
0070++ 176C 55 45 56 4F 
0071++ 1770 40 52 45 43 				.db			$40, $52, $45, $43, $4f, $d2						; _RECOR
0071++ 1774 4F D2 
0072++ 1776             
0073++ 1776             SPA02:		; $1776
0074++ 1776 0A          				.db			$0a																			; 10 spaces
0075++ 1777 54 55 40 50 				.db			$54, $55, $40, $50, $55, $4e, $54, $45	; TU_PUNTE
0075++ 177B 55 4E 54 45 
0076++ 177F 4F 40 45 D3 				.db			$4f, $40, $45, $d3											; O_ES
0077++ 1783             
0078++ 1783             SPA14:		; $1783
0079++ 1783 06          				.db			$06																			; 6 spaces
0080++ 1784 4C 4C 45 56 				.db			$4c, $4c, $45, $56, $41, $53, $40, $4c	; LLEVAS_L
0080++ 1788 41 53 40 4C 
0081++ 178C 41 40 44 45 				.db			$41, $40, $44, $45, $4c, $41, $4e, $54	; A_DELANT
0081++ 1790 4C 41 4E 54 
0082++ 1794 45 52 C1    				.db			$45, $52, $c1														; ERA
0083++ 1797             
0084++ 1797             SPA15:		; $1797
0085++ 1797 07          				.db			$07																			; 7 spaces
0086++ 1798 56 41 40 45 				.db			$56, $41, $40, $45, $4e, $40, $53, $45	; VA_EN_SE
0086++ 179C 4E 40 53 45 
0087++ 17A0 47 55 4E 44 				.db			$47, $55, $4e, $44, $4f, $40, $4c, $55	; GUNDO_LU
0087++ 17A4 4F 40 4C 55 
0088++ 17A8 47 41 D2    				.db			$47, $41, $d2														; GAR
0089++ 17AB             
0090++ 17AB             SPA16:		; $17ab
0091++ 17AB 07          				.db			$07																			; 7 spaces
0092++ 17AC 4C 4C 41 4E 				.db			$4c, $4c, $41, $4e, $54, $41, $53, $40	; LLANTAS_
0092++ 17B0 54 41 53 40 
0093++ 17B4 43 41 4C 49 				.db			$43, $41, $4c, $49, $45, $4e, $54, $45	; CALIENTE
0093++ 17B8 45 4E 54 45 
0094++ 17BC D3          				.db			$d3																			; S
0095++ 17BD             
0096++ 17BD             SPA17:		; $17bd
0097++ 17BD 06          				.db			$06																			; 6 spaces
0098++ 17BE             SPA0D:		; $17be
0099++ 17BE 03          				.db			$03																			; 3 spaces
0100++ 17BF 53 45 47 55 				.db			$53, $45, $47, $55, $4e, $44, $4f, $40	; SEGUNDO_
0100++ 17C3 4E 44 4F 40 
0101++ 17C7 50 55 45 53 				.db			$50, $55, $45, $53, $54, $cf						; PUESTO
0101++ 17CB 54 CF 
0102++ 17CD             
0103++ 17CD             SPA18:		; $17cd
0104++ 17CD 06          				.db			$06																			; 6 spaces
0105++ 17CE             SPA0C:		; $17cE
0106++ 17CE 03          				.db			$03																			; 3 spaces
0107++ 17CF 50 52 49 4D 				.db			$50, $52, $49, $4d, $45, $52, $40, $50	; PRIMER_P
0107++ 17D3 45 52 40 50 
0108++ 17D7 55 45 53 54 				.db			$55, $45, $53, $54, $cf									; UESTO
0108++ 17DB CF 
0109++ 17DC             
0110++ 17DC             SPA07:		; $17dc
0111++ 17DC 08          				.db			$08																			; 8 spaces
0112++ 17DD 50 4F 4E 47 				.db			$50, $4f, $4e, $47, $41, $40, $4c, $41	; PONGA_LA
0112++ 17E1 41 40 4C 41 
0113++ 17E5 40 4D 4F 4E 				.db			$40, $4d, $4f, $4e, $45, $44, $c1				; _MONEDA
0113++ 17E9 45 44 C1 
0114++ 17EC             
0115++ 17EC             SPA08:		; $17ec
0116++ 17EC 08          				.db			$08																			; 8 spaces
0117++ 17ED 41 47 41 43 				.db			$41, $47, $41, $43, $48, $41, $40, $45	; AGACHA_E
0117++ 17F1 48 41 40 45 
0118++ 17F5 4C 40 42 4F 				.db			$4c, $40, $42, $4f, $54, $4f, $ce				; L_BOTON
0118++ 17F9 54 4F CE 
0119++ 17FC             
0120++ 17FC             				.end
0017+  17FC             
0018+  17FC             				.end
2594   17FC             
2595   17FC             				;; Fill to end of ROM space
2596   17FF             				.org		$17FF
2597   17FF FF          				.db			$FF
2598   1800             
2599   1800             				.end
tasm: Number of errors = 0
